{
  "organization" : "circe",
  "repository" : "circe-yaml",
  "creationDate" : 1481042659000,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1730759389918
    }
  },
  "githubInfo" : {
    "homepage" : "",
    "description" : "YAML parser for circe using SnakeYAML",
    "logo" : "https://avatars.githubusercontent.com/u/23644473?v=4",
    "stars" : 141,
    "forks" : 51,
    "watchers" : 9,
    "issues" : 26,
    "creationDate" : 1464662732000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div class=\"markdown-heading\" dir=\"auto\"><h1 class=\"heading-element\" dir=\"auto\">circe-yaml</h1><a id=\"user-content-circe-yaml\" class=\"anchor\" aria-label=\"Permalink: circe-yaml\" href=\"#circe-yaml\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\"><a href=\"https://github.com/circe/circe-yaml/actions\"><img src=\"https://github.com/circe/circe-yaml/workflows/Continuous%20Integration/badge.svg\" alt=\"Build status\" style=\"max-width: 100%;\"></a>\n<a href=\"https://codecov.io/gh/circe/circe-yaml\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/05d80d3928ac30bbfa18ab58437d2c20686e742dc4d69f209a5b3b246b4685ac/68747470733a2f2f636f6465636f762e696f2f67682f63697263652f63697263652d79616d6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667\" alt=\"Codecov status\" data-canonical-src=\"https://codecov.io/gh/circe/circe-yaml/branch/master/graph/badge.svg\" style=\"max-width: 100%;\"></a>\n<a href=\"https://maven-badges.herokuapp.com/maven-central/io.circe/circe-yaml_2.12\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/dfdd6672acc1bb7700917709336671a33e838a9b171ca2ed438d3f478a54e460/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f696f2e63697263652f63697263652d79616d6c5f322e31322f62616467652e737667\" alt=\"Maven Central\" data-canonical-src=\"https://maven-badges.herokuapp.com/maven-central/io.circe/circe-yaml_2.12/badge.svg\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">This is a small library for parsing <a href=\"https://yaml.org\" rel=\"nofollow\">YAML</a> into <a href=\"https://github.com/circe/circe\">circe</a>'s <code>Json</code> AST.\nYou can choose from multiple YAML backends:</p>\n<ul dir=\"auto\">\n<li><code>circe-yaml</code>: For parsing YAML 1.1 it uses <a href=\"https://bitbucket.org/snakeyaml/snakeyaml\" rel=\"nofollow\">SnakeYAML</a>.</li>\n<li><code>circe-yaml-v12</code>: For parsing YAML 1.2 it uses <a href=\"https://bitbucket.org/snakeyaml/snakeyaml-engine\" rel=\"nofollow\">snakeyaml-engine</a>.</li>\n<li><code>circe-yaml-scalayaml</code>: For parsing YAML on Scala.js or Scala Native (as well as Scala/JVM) it uses <a href=\"https://github.com/VirtusLab/scala-yaml\">scala-yaml</a>.</li>\n</ul>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Why?</h2><a id=\"user-content-why\" class=\"anchor\" aria-label=\"Permalink: Why?\" href=\"#why\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">YAML is a useful data format for many purposes in which a more readable, less verbose document is desired.  One use\ncase, for example, is human-readable configuration files.</p>\n<p dir=\"auto\">SnakeYAML provides a Java API for parsing YAML and marshalling its structures into JVM classes. However, you might find\ncirce's way of marshalling into a Scala ADT preferable -- using compile-time specification or derivation rather than runtime\nreflection.  This enables you to parse YAML into <code>Json</code>, and use your existing (or circe's generic) <code>Decoder</code>s to perform\nthe ADT marshalling.  You can also use circe's <code>Encoder</code> to obtain a <code>Json</code>, and print that to YAML using this library.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Usage</h2><a id=\"user-content-usage\" class=\"anchor\" aria-label=\"Permalink: Usage\" href=\"#usage\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">The artifact is hosted by Sonatype, and release versions are synced to Maven Central:</p>\n<p dir=\"auto\">For YAML 1.1</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"libraryDependencies += &quot;io.circe&quot; %% &quot;circe-yaml&quot; % &quot;0.16.0&quot;\"><pre>libraryDependencies <span class=\"pl-k\">+</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>io.circe<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>circe-yaml<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0.16.0<span class=\"pl-pds\">\"</span></span></pre></div>\n<p dir=\"auto\">or for YAML 1.2</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"libraryDependencies += &quot;io.circe&quot; %% &quot;circe-yaml-v12&quot; % &quot;0.16.0&quot;\"><pre>libraryDependencies <span class=\"pl-k\">+</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>io.circe<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>circe-yaml-v12<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0.16.0<span class=\"pl-pds\">\"</span></span></pre></div>\n<p dir=\"auto\">or for YAML on Scala.js or Scala Native (as well as Scala/JVM)</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"libraryDependencies += &quot;io.circe&quot; %% &quot;circe-yaml-scalayaml&quot; % &quot;0.16.0&quot;\"><pre>libraryDependencies <span class=\"pl-k\">+</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>io.circe<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>circe-yaml-scalayaml<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0.16.0<span class=\"pl-pds\">\"</span></span></pre></div>\n<p dir=\"auto\">Snapshot versions are available by adding the Sonatype Snapshots resolver:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"resolvers ++= Resolver.sonatypeOssRepos(&quot;snapshots&quot;)\"><pre>resolvers <span class=\"pl-k\">++</span><span class=\"pl-k\">=</span> <span class=\"pl-en\">Resolver</span>.sonatypeOssRepos(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>snapshots<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h3 class=\"heading-element\" dir=\"auto\">Parsing</h3><a id=\"user-content-parsing\" class=\"anchor\" aria-label=\"Permalink: Parsing\" href=\"#parsing\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">Parsing is accomplished through the <code>io.circe.yaml.parser</code> package; its API is similar to that of <code>circe-parser</code>:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import io.circe.yaml.parser\nval json: Either[ParsingFailure, Json] = parser.parse(yamlString)\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">io</span>.<span class=\"pl-en\">circe</span>.<span class=\"pl-en\">yaml</span>.<span class=\"pl-en\">parser</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">json</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Either</span>[<span class=\"pl-en\">ParsingFailure</span>, <span class=\"pl-en\">Json</span>] <span class=\"pl-k\">=</span> parser.parse(yamlString)</pre></div>\n<p dir=\"auto\">Additionally, there is a function for parsing multiple YAML documents from a single string:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"val jsons: Stream[Either[ParsingFailure, Json]] = parser.parseDocuments(multiDocumentString)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-v\">jsons</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Stream</span>[<span class=\"pl-en\">Either</span>[<span class=\"pl-en\">ParsingFailure</span>, <span class=\"pl-en\">Json</span>]] <span class=\"pl-k\">=</span> parser.parseDocuments(multiDocumentString)</pre></div>\n<p dir=\"auto\">Both of these methods also support a \"streaming\" parse from a <code>java.io.Reader</code> – this is different from the behavior of\n<code>circe-streaming</code> (which supports fully asynchronous streaming parsing with iteratees) but does provide a convenient way to\nretrieve YAML from Java inputs:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"val config = getClass.getClassLoader.getResourceAsStream(&quot;config.yml&quot;)\nval json = parser.parse(new InputStreamReader(config))\n\nval configs = getClass.getClassLoader.getResourceAsStream(&quot;configs.yml&quot;)\nval jsons = parser.parseDocuments(new InputStreamReader(configs))\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-v\">config</span> <span class=\"pl-k\">=</span> getClass.getClassLoader.getResourceAsStream(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>config.yml<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">json</span> <span class=\"pl-k\">=</span> parser.parse(<span class=\"pl-k\">new</span> <span class=\"pl-en\">InputStreamReader</span>(config))\n\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">configs</span> <span class=\"pl-k\">=</span> getClass.getClassLoader.getResourceAsStream(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>configs.yml<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">jsons</span> <span class=\"pl-k\">=</span> parser.parseDocuments(<span class=\"pl-k\">new</span> <span class=\"pl-en\">InputStreamReader</span>(configs))</pre></div>\n<p dir=\"auto\">Once you've parsed to <code>Json</code>, usage is the same as circe. For example, if you have <code>circe-generic</code>, you can do:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import cats.syntax.either._\nimport io.circe._\nimport io.circe.generic.auto._\nimport io.circe.yaml\n\ncase class Nested(one: String, two: BigDecimal)\ncase class Foo(foo: String, bar: Nested, baz: List[String])\n\nval json = yaml.parser.parse(&quot;&quot;&quot;\nfoo: Hello, World\nbar:\n    one: One Third\n    two: 33.333333\nbaz:\n    - Hello\n    - World\n&quot;&quot;&quot;)\n\nval foo = json\n  .leftMap(err =&gt; err: Error)\n  .flatMap(_.as[Foo])\n  .valueOr(throw _)\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">cats</span>.<span class=\"pl-en\">syntax</span>.<span class=\"pl-en\">either</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">io</span>.<span class=\"pl-en\">circe</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">io</span>.<span class=\"pl-en\">circe</span>.<span class=\"pl-en\">generic</span>.<span class=\"pl-en\">auto</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">io</span>.<span class=\"pl-en\">circe</span>.<span class=\"pl-en\">yaml</span>\n\n<span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Nested</span>(<span class=\"pl-v\">one</span>: <span class=\"pl-en\">String</span>, <span class=\"pl-v\">two</span>: <span class=\"pl-en\">BigDecimal</span>)\n<span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Foo</span>(<span class=\"pl-v\">foo</span>: <span class=\"pl-en\">String</span>, <span class=\"pl-v\">bar</span>: <span class=\"pl-en\">Nested</span>, <span class=\"pl-v\">baz</span>: <span class=\"pl-en\">List</span>[<span class=\"pl-en\">String</span>])\n\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">json</span> <span class=\"pl-k\">=</span> yaml.parser.parse(<span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\">foo: Hello, World</span>\n<span class=\"pl-s\">bar:</span>\n<span class=\"pl-s\">    one: One Third</span>\n<span class=\"pl-s\">    two: 33.333333</span>\n<span class=\"pl-s\">baz:</span>\n<span class=\"pl-s\">    - Hello</span>\n<span class=\"pl-s\">    - World</span>\n<span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>)\n\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">foo</span> <span class=\"pl-k\">=</span> json\n  .leftMap(err <span class=\"pl-k\">=&gt;</span> <span class=\"pl-v\">err</span>: <span class=\"pl-en\">Error</span>)\n  .flatMap(_.as[<span class=\"pl-en\">Foo</span>])\n  .valueOr(<span class=\"pl-k\">throw</span> _)</pre></div>\n<p dir=\"auto\">Other features of YAML are supported:</p>\n<ul dir=\"auto\">\n<li>Multiple documents - use <code>parseDocuments</code> rather than <code>parse</code> to obtain <code>Stream[Either[ParsingFailure, Json]]</code></li>\n<li>Streaming - use <code>parse(reader: Reader)</code> or <code>parseDocuments(reader: Reader)</code> to parse from a stream.  Not sure what\nyou'll get out of it.</li>\n<li>References / aliases - The reference will be replaced with the complete structure of the alias</li>\n<li>Explicit tags (on scalar values only) are handled by converting the tag/scalar pair into a singleton json object:\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"example: !foo bar\"><pre><span class=\"pl-ent\">example</span>: <span class=\"pl-s\">!foo bar</span></pre></div>\nbecomes\n<div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{ &quot;example&quot;: { &quot;foo&quot;: &quot;bar&quot; } }\"><pre>{ <span class=\"pl-ent\">\"example\"</span>: { <span class=\"pl-ent\">\"foo\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bar<span class=\"pl-pds\">\"</span></span> } }</pre></div>\n</li>\n</ul>\n<div class=\"markdown-heading\" dir=\"auto\"><h3 class=\"heading-element\" dir=\"auto\">Printing</h3><a id=\"user-content-printing\" class=\"anchor\" aria-label=\"Permalink: Printing\" href=\"#printing\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">The package <code>io.circe.yaml.syntax</code> provides an enrichment to <code>Json</code> which supports easily serializing to YAML using common\noptions:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import cats.syntax.either._\nimport io.circe.yaml._\nimport io.circe.yaml.syntax._\n\nval json = io.circe.jawn.parse(&quot;&quot;&quot;{&quot;foo&quot;:&quot;bar&quot;}&quot;&quot;&quot;).valueOr(throw _)\n\nprintln(json.asYaml.spaces2) // 2 spaces for each indent level\nprintln(json.asYaml.spaces4) // 4 spaces for each indent level\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">cats</span>.<span class=\"pl-en\">syntax</span>.<span class=\"pl-en\">either</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">io</span>.<span class=\"pl-en\">circe</span>.<span class=\"pl-en\">yaml</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">io</span>.<span class=\"pl-en\">circe</span>.<span class=\"pl-en\">yaml</span>.<span class=\"pl-en\">syntax</span>.<span class=\"pl-en\">_</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">json</span> <span class=\"pl-k\">=</span> io.circe.jawn.parse(<span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>{\"foo\":\"bar\"}<span class=\"pl-pds\">\"\"\"</span></span>).valueOr(<span class=\"pl-k\">throw</span> _)\n\nprintln(json.asYaml.spaces2) <span class=\"pl-c\"><span class=\"pl-c\">//</span> 2 spaces for each indent level</span>\nprintln(json.asYaml.spaces4) <span class=\"pl-c\"><span class=\"pl-c\">//</span> 4 spaces for each indent level</span></pre></div>\n<p dir=\"auto\">Additionally, there is a class <code>io.circe.yaml.Printer</code> which (in similar fashion to circe's <code>Printer</code>) can be configured\nwith many options which control the <code>String</code> output. Its <code>pretty</code> method produces a <code>String</code> using the configured options:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"io.circe.yaml.Printer(dropNullKeys = true, mappingStyle = Printer.FlowStyle.Block)\n  .pretty(json)\"><pre class=\"notranslate\"><code>io.circe.yaml.Printer(dropNullKeys = true, mappingStyle = Printer.FlowStyle.Block)\n  .pretty(json)\n</code></pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h3 class=\"heading-element\" dir=\"auto\">Limitations</h3><a id=\"user-content-limitations\" class=\"anchor\" aria-label=\"Permalink: Limitations\" href=\"#limitations\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">Only JSON-compatible YAML can be used, for obvious reasons:</p>\n<ul dir=\"auto\">\n<li>Complex keys are not supported (only <code>String</code> keys)</li>\n<li>Unlike YAML collections, a JSON array is not the same as a JSON object with integral keys (given the above, it would\nbe impossible).  So, a YAML mapping with integral keys will still be a JSON object, and the keys will be strings.</li>\n</ul>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">License</h2><a id=\"user-content-license\" class=\"anchor\" aria-label=\"Permalink: License\" href=\"#license\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">This is released under the Apache 2.0 license, as specified in <a href=\"LICENSE\">the LICENSE file</a>.  It depends on both\ncirce and SnakeYAML, which each has its own license.  Consult those projects to learn about their licenses.</p>\n<p dir=\"auto\">This library is neither endorsed by, nor affiliated with, SnakeYAML.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Contributing</h2><a id=\"user-content-contributing\" class=\"anchor\" aria-label=\"Permalink: Contributing\" href=\"#contributing\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">As part of the <a href=\"https://github.com/circe/circe\">circe</a> community, circe-yaml supports the <a href=\"http://typelevel.org/\" rel=\"nofollow\">Typelevel</a> <a href=\"http://typelevel.org/conduct.html\" rel=\"nofollow\">code of conduct</a> and wants all of its channels (Gitter, GitHub, etc.) to be welcoming environments for everyone.</p>\n<p dir=\"auto\">Please read the <a href=\"https://github.com/circe/circe/blob/master/CONTRIBUTING.md\">circe Contributor's Guide</a> for information about how to submit a pull request.</p>\n<p dir=\"auto\">This circe community module is currently maintained by <a href=\"https://github.com/jeffmay\">Jeff May</a>, <a href=\"https://github.com/zarthross\">Darren Gibson</a>, and <a href=\"https://github.com/zmccoy\">Zach McCoy</a>. It strives to conform as closely as possible to the style of circe itself.</p>\n</article></div>",
    "contributors" : [
      {
        "login" : "scala-steward",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/43047562?v=4",
        "url" : "https://github.com/scala-steward",
        "contributions" : 229
      },
      {
        "login" : "travisbrown",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/316049?v=4",
        "url" : "https://github.com/travisbrown",
        "contributions" : 65
      },
      {
        "login" : "zmccoy",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/280974?v=4",
        "url" : "https://github.com/zmccoy",
        "contributions" : 65
      },
      {
        "login" : "jeffmay",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/755988?v=4",
        "url" : "https://github.com/jeffmay",
        "contributions" : 39
      },
      {
        "login" : "jeremyrsmith",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/864869?v=4",
        "url" : "https://github.com/jeremyrsmith",
        "contributions" : 19
      },
      {
        "login" : "zarthross",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1111592?v=4",
        "url" : "https://github.com/zarthross",
        "contributions" : 16
      },
      {
        "login" : "hamnis",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/75431?v=4",
        "url" : "https://github.com/hamnis",
        "contributions" : 10
      },
      {
        "login" : "hcdeng",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/13636831?v=4",
        "url" : "https://github.com/hcdeng",
        "contributions" : 6
      },
      {
        "login" : "sideeffffect",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/9019485?v=4",
        "url" : "https://github.com/sideeffffect",
        "contributions" : 6
      },
      {
        "login" : "travisbrown-stripe",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/28275810?v=4",
        "url" : "https://github.com/travisbrown-stripe",
        "contributions" : 6
      },
      {
        "login" : "n4to4",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/21071230?v=4",
        "url" : "https://github.com/n4to4",
        "contributions" : 5
      },
      {
        "login" : "vigoo",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2292489?v=4",
        "url" : "https://github.com/vigoo",
        "contributions" : 4
      },
      {
        "login" : "denisrosset",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/93707?v=4",
        "url" : "https://github.com/denisrosset",
        "contributions" : 3
      },
      {
        "login" : "jatcwang",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/4957161?v=4",
        "url" : "https://github.com/jatcwang",
        "contributions" : 3
      },
      {
        "login" : "nornagon",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/172800?v=4",
        "url" : "https://github.com/nornagon",
        "contributions" : 3
      },
      {
        "login" : "felixmulder",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1530049?v=4",
        "url" : "https://github.com/felixmulder",
        "contributions" : 2
      },
      {
        "login" : "mcanlas",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/881934?v=4",
        "url" : "https://github.com/mcanlas",
        "contributions" : 2
      },
      {
        "login" : "amir",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/4293?v=4",
        "url" : "https://github.com/amir",
        "contributions" : 1
      },
      {
        "login" : "aheiska",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1764310?v=4",
        "url" : "https://github.com/aheiska",
        "contributions" : 1
      },
      {
        "login" : "erik-stripe",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/16106269?v=4",
        "url" : "https://github.com/erik-stripe",
        "contributions" : 1
      },
      {
        "login" : "Daenyth",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/14644?v=4",
        "url" : "https://github.com/Daenyth",
        "contributions" : 1
      },
      {
        "login" : "grzegorz-bielski",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/22674545?v=4",
        "url" : "https://github.com/grzegorz-bielski",
        "contributions" : 1
      },
      {
        "login" : "helfper",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2981969?v=4",
        "url" : "https://github.com/helfper",
        "contributions" : 1
      },
      {
        "login" : "jonas",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/8417?v=4",
        "url" : "https://github.com/jonas",
        "contributions" : 1
      },
      {
        "login" : "jkobejs",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/10402628?v=4",
        "url" : "https://github.com/jkobejs",
        "contributions" : 1
      },
      {
        "login" : "lucaviolanti",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/5348596?v=4",
        "url" : "https://github.com/lucaviolanti",
        "contributions" : 1
      },
      {
        "login" : "nightscape",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/35170?v=4",
        "url" : "https://github.com/nightscape",
        "contributions" : 1
      },
      {
        "login" : "mpollmeier",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/506752?v=4",
        "url" : "https://github.com/mpollmeier",
        "contributions" : 1
      },
      {
        "login" : "liff",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/124475?v=4",
        "url" : "https://github.com/liff",
        "contributions" : 1
      },
      {
        "login" : "TimoMeijer",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1517813?v=4",
        "url" : "https://github.com/TimoMeijer",
        "contributions" : 1
      },
      {
        "login" : "adamw",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/60503?v=4",
        "url" : "https://github.com/adamw",
        "contributions" : 1
      },
      {
        "login" : "ayakovlenko",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/10448288?v=4",
        "url" : "https://github.com/ayakovlenko",
        "contributions" : 1
      },
      {
        "login" : "xuwei-k",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/389787?v=4",
        "url" : "https://github.com/xuwei-k",
        "contributions" : 1
      },
      {
        "login" : "ybasket",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2632023?v=4",
        "url" : "https://github.com/ybasket",
        "contributions" : 1
      }
    ],
    "commits" : 500,
    "topics" : [
      "circe",
      "hacktoberfest",
      "json",
      "yaml"
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "openIssues" : [
      {
        "number" : 441,
        "title" : "String values written quoted when using scala-yaml backend",
        "url" : "https://github.com/circe/circe-yaml/issues/441"
      },
      {
        "number" : 410,
        "title" : "Can't call io.circe.yaml.parser.parse on an input stream reader in 0.15.1",
        "url" : "https://github.com/circe/circe-yaml/issues/410"
      },
      {
        "number" : 402,
        "title" : "v1.15.0 is on Maven Central",
        "url" : "https://github.com/circe/circe-yaml/issues/402"
      },
      {
        "number" : 316,
        "title" : "Option Parameters always returning None",
        "url" : "https://github.com/circe/circe-yaml/issues/316"
      },
      {
        "number" : 310,
        "title" : "yaml literals",
        "url" : "https://github.com/circe/circe-yaml/issues/310"
      },
      {
        "number" : 298,
        "title" : "Parsing  json to yaml formatting options required for the yaml class",
        "url" : "https://github.com/circe/circe-yaml/issues/298"
      },
      {
        "number" : 285,
        "title" : "ScalaJS support",
        "url" : "https://github.com/circe/circe-yaml/issues/285"
      },
      {
        "number" : 239,
        "title" : "Allow parsing to class with default parameter",
        "url" : "https://github.com/circe/circe-yaml/issues/239"
      },
      {
        "number" : 199,
        "title" : "io.circe.yaml.parser should extend io.circe.Parser",
        "url" : "https://github.com/circe/circe-yaml/issues/199"
      },
      {
        "number" : 186,
        "title" : "Parsing YAML in JS",
        "url" : "https://github.com/circe/circe-yaml/issues/186"
      },
      {
        "number" : 158,
        "title" : "#question: How to think about yaml schema management ?",
        "url" : "https://github.com/circe/circe-yaml/issues/158"
      },
      {
        "number" : 131,
        "title" : "Split long urls to new line",
        "url" : "https://github.com/circe/circe-yaml/issues/131"
      },
      {
        "number" : 130,
        "title" : "List of dictionaries not indented correctly",
        "url" : "https://github.com/circe/circe-yaml/issues/130"
      },
      {
        "number" : 120,
        "title" : "Support fail on duplicate key option",
        "url" : "https://github.com/circe/circe-yaml/issues/120"
      },
      {
        "number" : 119,
        "title" : "Use SnakeYAML Engine to add YAML 1.2 syntax support",
        "url" : "https://github.com/circe/circe-yaml/issues/119"
      },
      {
        "number" : 68,
        "title" : "Float / Double serialized in unnatural way",
        "url" : "https://github.com/circe/circe-yaml/issues/68"
      },
      {
        "number" : 31,
        "title" : "Support merge keys",
        "url" : "https://github.com/circe/circe-yaml/issues/31"
      }
    ],
    "scalaPercentage" : 100,
    "license" : "Apache-2.0",
    "commitActivity" : [
    ]
  },
  "settings" : {
    "preferStableVersion" : true,
    "defaultArtifact" : "circe-yaml",
    "customScalaDoc" : null,
    "documentationLinks" : [
    ],
    "contributorsWanted" : false,
    "deprecatedArtifacts" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "yaml",
    "chatroom" : null
  }
}