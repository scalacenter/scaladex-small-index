{
  "organization" : "com-lihaoyi",
  "repository" : "os-lib",
  "creationDate" : 1541249467000,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1660818602003
    }
  },
  "githubInfo" : {
    "homepage" : "",
    "description" : "OS-Lib is a simple, flexible, high-performance Scala interface to common OS filesystem and subprocess APIs",
    "logo" : "https://avatars.githubusercontent.com/u/79346799?v=4",
    "stars" : 531,
    "forks" : 38,
    "watchers" : 13,
    "issues" : 10,
    "creationDate" : 1540858445000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"readme.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-os-lib----\" class=\"anchor\" aria-hidden=\"true\" href=\"#os-lib----\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>OS-Lib  <a href=\"https://github.com/lihaoyi/os-lib/actions\"><img src=\"https://github.com/lihaoyi/os-lib/actions/workflows/build.yml/badge.svg\" alt=\"Build Status\" style=\"max-width: 100%;\"></a> <a href=\"https://gitter.im/lihaoyi/os-lib?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/5dbac0213da25c445bd11f168587c11a200ba153ef3014e8408e462e410169b3/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667\" alt=\"Gitter Chat\" data-canonical-src=\"https://badges.gitter.im/Join%20Chat.svg\" style=\"max-width: 100%;\"></a> <a href=\"https://www.patreon.com/lihaoyi\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/c1ef95de4ab9018394ea269867b6cc11c403982f15f88f1829ea61a69043a06a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f70617472656f6e2d73706f6e736f722d6666363962342e737667\" alt=\"Patreon\" data-canonical-src=\"https://img.shields.io/badge/patreon-sponsor-ff69b4.svg\" style=\"max-width: 100%;\"></a></h1>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Make sure working directory exists and is empty\nval wd = os.pwd/&quot;out&quot;/&quot;splash&quot;\nos.remove.all(wd)\nos.makeDir.all(wd)\n\n// Read/write files\nos.write(wd/&quot;file.txt&quot;, &quot;hello&quot;)\nos.read(wd/&quot;file.txt&quot;) ==&gt; &quot;hello&quot;\n\n// Perform filesystem operations\nos.copy(wd/&quot;file.txt&quot;, wd/&quot;copied.txt&quot;)\nos.list(wd) ==&gt; Seq(wd/&quot;copied.txt&quot;, wd/&quot;file.txt&quot;)\n\n// Invoke subprocesses\nval invoked = os.proc(&quot;cat&quot;, wd/&quot;file.txt&quot;, wd/&quot;copied.txt&quot;).call(cwd = wd)\ninvoked.out.trim ==&gt; &quot;hellohello&quot;\n\n// Chain multiple subprocess' stdin/stdout together\nval curl = os.proc(&quot;curl&quot;, &quot;-L&quot; , &quot;https://git.io/fpvpS&quot;).spawn(stderr = os.Inherit)\nval gzip = os.proc(&quot;gzip&quot;, &quot;-n&quot;).spawn(stdin = curl.stdout)\nval sha = os.proc(&quot;shasum&quot;, &quot;-a&quot;, &quot;256&quot;).spawn(stdin = gzip.stdout)\nsha.stdout.trim ==&gt; &quot;acc142175fa520a1cb2be5b97cbbe9bea092e8bba3fe2e95afa645615908229e  -&quot;\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> Make sure working directory exists and is empty</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">wd</span> <span class=\"pl-k\">=</span> os.pwd<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>out<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>splash<span class=\"pl-pds\">\"</span></span>\nos.remove.all(wd)\nos.makeDir.all(wd)\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Read/write files</span>\nos.write(wd<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file.txt<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hello<span class=\"pl-pds\">\"</span></span>)\nos.read(wd<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hello<span class=\"pl-pds\">\"</span></span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Perform filesystem operations</span>\nos.copy(wd<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file.txt<span class=\"pl-pds\">\"</span></span>, wd<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>copied.txt<span class=\"pl-pds\">\"</span></span>)\nos.list(wd) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>copied.txt<span class=\"pl-pds\">\"</span></span>, wd<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file.txt<span class=\"pl-pds\">\"</span></span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Invoke subprocesses</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">invoked</span> <span class=\"pl-k\">=</span> os.proc(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cat<span class=\"pl-pds\">\"</span></span>, wd<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file.txt<span class=\"pl-pds\">\"</span></span>, wd<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>copied.txt<span class=\"pl-pds\">\"</span></span>).call(cwd <span class=\"pl-k\">=</span> wd)\ninvoked.out.trim <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hellohello<span class=\"pl-pds\">\"</span></span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Chain multiple subprocess' stdin/stdout together</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">curl</span> <span class=\"pl-k\">=</span> os.proc(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>curl<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-L<span class=\"pl-pds\">\"</span></span> , <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://git.io/fpvpS<span class=\"pl-pds\">\"</span></span>).spawn(stderr <span class=\"pl-k\">=</span> os.<span class=\"pl-en\">Inherit</span>)\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">gzip</span> <span class=\"pl-k\">=</span> os.proc(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>gzip<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-n<span class=\"pl-pds\">\"</span></span>).spawn(stdin <span class=\"pl-k\">=</span> curl.stdout)\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">sha</span> <span class=\"pl-k\">=</span> os.proc(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>shasum<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-a<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>256<span class=\"pl-pds\">\"</span></span>).spawn(stdin <span class=\"pl-k\">=</span> gzip.stdout)\nsha.stdout.trim <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>acc142175fa520a1cb2be5b97cbbe9bea092e8bba3fe2e95afa645615908229e  -<span class=\"pl-pds\">\"</span></span></pre></div>\n<p dir=\"auto\">OS-Lib is a simple Scala interface to common OS filesystem and subprocess APIs.\nOS-Lib aims to make working with files and processes in Scala as simple as any\nscripting language, while still providing the safety, flexibility and\nperformance you would expect from Scala.</p>\n<p dir=\"auto\">OS-Lib aims to be a complete replacement for the\n<code>java.nio.file.Files</code>/<code>java.nio.file.Paths</code>, <code>java.lang.ProcessBuilder</code>\n<code>scala.io</code> and <code>scala.sys</code> APIs. You should not need to drop down to underlying\nJava APIs, as OS-Lib exposes all relevant capabilities in an intuitive and\nperformant way. OS-Lib has no dependencies and is unopinionated: it exposes the\nunderlying APIs in a concise but straightforward way, without introducing it's\nown idiosyncrasies, quirks, or clever DSLs.</p>\n<p dir=\"auto\">If you use OS-Lib and like it, you will probably enjoy the following book by the Author:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://www.handsonscala.com/\" rel=\"nofollow\"><em>Hands-on Scala Programming</em></a></li>\n</ul>\n<p dir=\"auto\"><em>Hands-on Scala</em> has uses OS-Lib extensively throughout the book, and has\nthe entirety of <em>Chapter 7: Files and Subprocesses</em> dedicated to\nOS-Lib. <em>Hands-on Scala</em> is a great way to level up your skills in Scala\nin general and OS-Lib in particular.</p>\n<p dir=\"auto\">You can also support it by donating to our Patreon:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://www.patreon.com/lihaoyi\" rel=\"nofollow\">https://www.patreon.com/lihaoyi</a></li>\n</ul>\n<p dir=\"auto\">For a hands-on introduction to the library, take a look at these two blog posts:</p>\n<ul dir=\"auto\">\n<li><a href=\"http://www.lihaoyi.com/post/HowtoworkwithFilesinScala.html\" rel=\"nofollow\">How to work with Files in Scala</a></li>\n<li><a href=\"http://www.lihaoyi.com/post/HowtoworkwithSubprocessesinScala.html\" rel=\"nofollow\">How to work with Subprocesses in Scala</a></li>\n</ul>\n<p dir=\"auto\">Or browse the documentation:</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><a href=\"#getting-started\">Getting Started</a></p>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"#cookbook\">Cookbook</a></p>\n<ul dir=\"auto\">\n<li><a href=\"#concatenate-text-files\">Concatenate text files</a></li>\n<li><a href=\"#spawning-a-subprocess-on-multiple-files\">Spawning a subprocess on multiple files</a></li>\n<li><a href=\"#curl-url-to-temporary-file\">Curl URL to temporary file</a></li>\n<li><a href=\"#recursive-line-count\">Recursive line count</a></li>\n<li><a href=\"#largest-three-files\">Largest three files</a></li>\n<li><a href=\"#moving-files-out-of-folder\">Moving files out of folder</a></li>\n<li><a href=\"#calculate-word-frequencies\">Calculate word frequencies</a></li>\n</ul>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"#operations\">Operations</a></p>\n<p dir=\"auto\">Reading &amp; Writing</p>\n<ul dir=\"auto\">\n<li><a href=\"#osread\">os.read</a></li>\n<li><a href=\"#osreadbytes\">os.read.bytes</a></li>\n<li><a href=\"#osreadchunks\">os.read.chunks</a></li>\n<li><a href=\"#osreadlines\">os.read.lines</a></li>\n<li><a href=\"#osreadlinesstream\">os.read.lines.stream</a></li>\n<li><a href=\"#osreadinputstream\">os.read.inputStream</a></li>\n<li><a href=\"#oswrite\">os.write</a></li>\n<li><a href=\"#oswriteappend\">os.write.append</a></li>\n<li><a href=\"#oswriteover\">os.write.over</a></li>\n<li><a href=\"#oswriteoutputstream\">os.write.outputStream</a></li>\n<li><a href=\"#ostruncate\">os.truncate</a></li>\n</ul>\n<p dir=\"auto\">Listing &amp; Walking</p>\n<ul dir=\"auto\">\n<li><a href=\"#oslist\">os.list</a></li>\n<li><a href=\"#osliststream\">os.list.stream</a></li>\n<li><a href=\"#oswalk\">os.walk</a></li>\n<li><a href=\"#oswalkattrs\">os.walk.attrs</a></li>\n<li><a href=\"#oswalkstream\">os.walk.stream</a></li>\n<li><a href=\"#oswalkstreamattrs\">os.walk.stream.attrs</a></li>\n</ul>\n<p dir=\"auto\">Manipulating Files &amp; Folders</p>\n<ul dir=\"auto\">\n<li><a href=\"#osexists\">os.exists</a></li>\n<li><a href=\"#osmove\">os.move</a></li>\n<li><a href=\"#osmoveinto\">os.move.into</a></li>\n<li><a href=\"#osmoveover\">os.move.over</a></li>\n<li><a href=\"#oscopy\">os.copy</a></li>\n<li><a href=\"#oscopyinto\">os.copy.into</a></li>\n<li><a href=\"#oscopyover\">os.copy.over</a></li>\n<li><a href=\"#osmakedir\">os.makeDir</a></li>\n<li><a href=\"#osmakedirall\">os.makeDir.all</a></li>\n<li><a href=\"#osremove\">os.remove</a></li>\n<li><a href=\"#osremoveall\">os.remove.all</a></li>\n<li><a href=\"#oshardlink\">os.hardlink</a></li>\n<li><a href=\"#ossymlink\">os.symlink</a></li>\n<li><a href=\"#osfollowlink\">os.followLink</a></li>\n<li><a href=\"#ostemp\">os.temp</a></li>\n<li><a href=\"#ostempdir\">os.temp.dir</a></li>\n</ul>\n<p dir=\"auto\">Filesystem Metadata</p>\n<ul dir=\"auto\">\n<li><a href=\"#osstat\">os.stat</a></li>\n<li><a href=\"#osstatposix\">os.stat.posix</a></li>\n<li><a href=\"#osisfile\">os.isFile</a></li>\n<li><a href=\"#osisdir\">os.isDir</a></li>\n<li><a href=\"#osislink\">os.isLink</a></li>\n<li><a href=\"#ossize\">os.size</a></li>\n<li><a href=\"#osmtime\">os.mtime</a></li>\n</ul>\n<p dir=\"auto\">Filesystem Permissions</p>\n<ul dir=\"auto\">\n<li><a href=\"#osperms\">os.perms</a></li>\n<li><a href=\"#osowner\">os.owner</a></li>\n<li><a href=\"#osgroup\">os.group</a></li>\n</ul>\n<p dir=\"auto\">Spawning Subprocesses</p>\n<ul dir=\"auto\">\n<li><a href=\"#osproccall\">os.proc.call</a></li>\n<li><a href=\"#osprocspawn\">os.proc.spawn</a></li>\n</ul>\n<p dir=\"auto\">Watching for Changes</p>\n<ul dir=\"auto\">\n<li><a href=\"#oswatchwatch\">os.watch.watch</a></li>\n</ul>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"#data-types\">Data Types</a></p>\n<ul dir=\"auto\">\n<li><a href=\"#ospath\">os.Path</a>\n<ul dir=\"auto\">\n<li><a href=\"#osrelpath\">os.RelPath</a></li>\n<li><a href=\"#ossubpath\">os.SubPath</a></li>\n<li><a href=\"#osresourcepath\">os.ResourcePath</a></li>\n</ul>\n</li>\n<li><a href=\"#ossource\">os.Source</a></li>\n<li><a href=\"#osgenerator\">os.Generator</a></li>\n<li><a href=\"#ospermset\">os.PermSet</a></li>\n</ul>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"#changelog\">Changelog</a></p>\n</li>\n</ul>\n<h2 dir=\"auto\"><a id=\"user-content-getting-started\" class=\"anchor\" aria-hidden=\"true\" href=\"#getting-started\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Getting Started</h2>\n<p dir=\"auto\">To begin using OS-Lib, first add it as a dependency to your project's build:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// SBT\n&quot;com.lihaoyi&quot; %% &quot;os-lib&quot; % &quot;0.8.0&quot;\n// Mill\nivy&quot;com.lihaoyi::os-lib:0.8.0&quot;\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> SBT</span>\n<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.lihaoyi<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>os-lib<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0.8.0<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Mill</span>\n<span class=\"pl-k\">ivy</span><span class=\"pl-s\">\"</span><span class=\"pl-s\">com.lihaoyi::os-lib:0.8.0</span><span class=\"pl-s\">\"</span></pre></div>\n<h2 dir=\"auto\"><a id=\"user-content-cookbook\" class=\"anchor\" aria-hidden=\"true\" href=\"#cookbook\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Cookbook</h2>\n<p dir=\"auto\">Most operation in OS-Lib take place on <a href=\"#ospath\">os.Path</a>s, which are\nconstructed from a base path or working directory <code>wd</code>. Most often, the first\nthing to do is to define a <code>wd</code> path representing the folder you want to work\nwith:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val wd = os.pwd/&quot;my-test-folder&quot;\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">wd</span> <span class=\"pl-k\">=</span> os.pwd<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>my-test-folder<span class=\"pl-pds\">\"</span></span></pre></div>\n<p dir=\"auto\">You can of course multiple base paths, to use in different parts of your program\nwhere convenient, or simply work with one of the pre-defined paths <code>os.pwd</code>,\n<code>os.root</code>, or <code>os.home</code>.</p>\n<h3 dir=\"auto\"><a id=\"user-content-concatenate-text-files\" class=\"anchor\" aria-hidden=\"true\" href=\"#concatenate-text-files\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Concatenate text files</h3>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Find and concatenate all .txt files directly in the working directory\nos.write(\n  wd/&quot;all.txt&quot;,\n  os.list(wd).filter(_.ext == &quot;txt&quot;).map(os.read)\n)\n\nos.read(wd/&quot;all.txt&quot;) ==&gt;\n  &quot;&quot;&quot;I am cowI am cow\n    |Hear me moo\n    |I weigh twice as much as you\n    |And I look good on the barbecue&quot;&quot;&quot;.stripMargin\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> Find and concatenate all .txt files directly in the working directory</span>\nos.write(\n  wd<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>all.txt<span class=\"pl-pds\">\"</span></span>,\n  os.list(wd).filter(_.ext <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>txt<span class=\"pl-pds\">\"</span></span>).map(os.read)\n)\n\nos.read(wd<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>all.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span>\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>I am cowI am cow</span>\n<span class=\"pl-s\">    |Hear me moo</span>\n<span class=\"pl-s\">    |I weigh twice as much as you</span>\n<span class=\"pl-s\">    |And I look good on the barbecue<span class=\"pl-pds\">\"\"\"</span></span>.stripMargin</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-spawning-a-subprocess-on-multiple-files\" class=\"anchor\" aria-hidden=\"true\" href=\"#spawning-a-subprocess-on-multiple-files\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Spawning a subprocess on multiple files</h3>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Find and concatenate all .txt files directly in the working directory using `cat`\nos.proc(&quot;cat&quot;, os.list(wd).filter(_.ext == &quot;txt&quot;)).call(stdout = wd/&quot;all.txt&quot;)\n\nos.read(wd/&quot;all.txt&quot;) ==&gt;\n  &quot;&quot;&quot;I am cowI am cow\n    |Hear me moo\n    |I weigh twice as much as you\n    |And I look good on the barbecue&quot;&quot;&quot;.stripMargin\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> Find and concatenate all .txt files directly in the working directory using `cat`</span>\nos.proc(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cat<span class=\"pl-pds\">\"</span></span>, os.list(wd).filter(_.ext <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>txt<span class=\"pl-pds\">\"</span></span>)).call(stdout <span class=\"pl-k\">=</span> wd<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>all.txt<span class=\"pl-pds\">\"</span></span>)\n\nos.read(wd<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>all.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span>\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>I am cowI am cow</span>\n<span class=\"pl-s\">    |Hear me moo</span>\n<span class=\"pl-s\">    |I weigh twice as much as you</span>\n<span class=\"pl-s\">    |And I look good on the barbecue<span class=\"pl-pds\">\"\"\"</span></span>.stripMargin</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-curl-url-to-temporary-file\" class=\"anchor\" aria-hidden=\"true\" href=\"#curl-url-to-temporary-file\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Curl URL to temporary file</h3>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Curl to temporary file\nval temp = os.temp()\nos.proc(&quot;curl&quot;, &quot;-L&quot; , &quot;https://git.io/fpfTs&quot;).call(stdout = temp)\n\nos.size(temp) ==&gt; 53814\n\n// Curl to temporary file\nval temp2 = os.temp()\nval proc = os.proc(&quot;curl&quot;, &quot;-L&quot; , &quot;https://git.io/fpfTJ&quot;).spawn()\n\nos.write.over(temp2, proc.stdout)\nos.size(temp2) ==&gt; 53814\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> Curl to temporary file</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">temp</span> <span class=\"pl-k\">=</span> os.temp()\nos.proc(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>curl<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-L<span class=\"pl-pds\">\"</span></span> , <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://git.io/fpfTs<span class=\"pl-pds\">\"</span></span>).call(stdout <span class=\"pl-k\">=</span> temp)\n\nos.size(temp) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">53814</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Curl to temporary file</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">temp2</span> <span class=\"pl-k\">=</span> os.temp()\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">proc</span> <span class=\"pl-k\">=</span> os.proc(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>curl<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-L<span class=\"pl-pds\">\"</span></span> , <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://git.io/fpfTJ<span class=\"pl-pds\">\"</span></span>).spawn()\n\nos.write.over(temp2, proc.stdout)\nos.size(temp2) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">53814</span></pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-recursive-line-count\" class=\"anchor\" aria-hidden=\"true\" href=\"#recursive-line-count\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Recursive line count</h3>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Line-count of all .txt files recursively in wd\nval lineCount = os.walk(wd)\n  .filter(_.ext == &quot;txt&quot;)\n  .map(os.read.lines)\n  .map(_.size)\n  .sum\n\nlineCount ==&gt; 9\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> Line-count of all .txt files recursively in wd</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">lineCount</span> <span class=\"pl-k\">=</span> os.walk(wd)\n  .filter(_.ext <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>txt<span class=\"pl-pds\">\"</span></span>)\n  .map(os.read.lines)\n  .map(_.size)\n  .sum\n\nlineCount <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">9</span></pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-largest-three-files\" class=\"anchor\" aria-hidden=\"true\" href=\"#largest-three-files\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Largest Three Files</h3>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Find the largest three files in the given folder tree\nval largestThree = os.walk(wd)\n  .filter(os.isFile(_, followLinks = false))\n  .map(x =&gt; os.size(x) -&gt; x).sortBy(-_._1)\n  .take(3)\n\nlargestThree ==&gt; Seq(\n  (711, wd / &quot;misc&quot; / &quot;binary.png&quot;),\n  (81, wd / &quot;Multi Line.txt&quot;),\n  (22, wd / &quot;folder1&quot; / &quot;one.txt&quot;)\n)\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> Find the largest three files in the given folder tree</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">largestThree</span> <span class=\"pl-k\">=</span> os.walk(wd)\n  .filter(os.isFile(_, followLinks <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>))\n  .map(x <span class=\"pl-k\">=&gt;</span> os.size(x) <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> x).sortBy(<span class=\"pl-k\">-</span>_._1)\n  .take(<span class=\"pl-c1\">3</span>)\n\nlargestThree <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(\n  (<span class=\"pl-c1\">711</span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>binary.png<span class=\"pl-pds\">\"</span></span>),\n  (<span class=\"pl-c1\">81</span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Multi Line.txt<span class=\"pl-pds\">\"</span></span>),\n  (<span class=\"pl-c1\">22</span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>)\n)</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-moving-files-out-of-folder\" class=\"anchor\" aria-hidden=\"true\" href=\"#moving-files-out-of-folder\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Moving files out of folder</h3>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Move all files inside the &quot;misc&quot; folder out of it\nimport os.{GlobSyntax, /}\nos.list(wd/&quot;misc&quot;).map(os.move.matching{case p/&quot;misc&quot;/x =&gt; p/x })\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> Move all files inside the \"misc\" folder out of it</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">os</span>.{<span class=\"pl-en\">GlobSyntax</span>, <span class=\"pl-en\">/</span>}\nos.list(wd<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span>).map(os.move.matching{<span class=\"pl-k\">case</span> p<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">/</span>x <span class=\"pl-k\">=&gt;</span> p<span class=\"pl-k\">/</span>x })</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-calculate-word-frequencies\" class=\"anchor\" aria-hidden=\"true\" href=\"#calculate-word-frequencies\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Calculate word frequencies</h3>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Calculate the word frequency of all the text files in the folder tree\ndef txt = os.walk(wd).filter(_.ext == &quot;txt&quot;).map(os.read)\ndef freq(s: Seq[String]) = s groupBy (x =&gt; x) mapValues (_.length) toSeq\nval map = freq(txt.flatMap(_.split(&quot;[^a-zA-Z0-9_]&quot;))).sortBy(-_._2)\nmap\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> Calculate the word frequency of all the text files in the folder tree</span>\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">txt</span> <span class=\"pl-k\">=</span> os.walk(wd).filter(_.ext <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>txt<span class=\"pl-pds\">\"</span></span>).map(os.read)\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">freq</span>(<span class=\"pl-v\">s</span>: <span class=\"pl-en\">Seq</span>[<span class=\"pl-en\">String</span>]) <span class=\"pl-k\">=</span> s groupBy (x <span class=\"pl-k\">=&gt;</span> x) mapValues (_.length) toSeq\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">map</span> <span class=\"pl-k\">=</span> freq(txt.flatMap(_.split(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[^a-zA-Z0-9_]<span class=\"pl-pds\">\"</span></span>))).sortBy(<span class=\"pl-k\">-</span>_._2)\nmap</pre></div>\n<h2 dir=\"auto\"><a id=\"user-content-operations\" class=\"anchor\" aria-hidden=\"true\" href=\"#operations\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Operations</h2>\n<h3 dir=\"auto\"><a id=\"user-content-reading--writing\" class=\"anchor\" aria-hidden=\"true\" href=\"#reading--writing\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Reading &amp; Writing</h3>\n<h4 dir=\"auto\"><a id=\"user-content-osread\" class=\"anchor\" aria-hidden=\"true\" href=\"#osread\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.read</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.read(arg: os.ReadablePath): String\nos.read(arg: os.ReadablePath, charSet: Codec): String\nos.read(arg: os.Path,\n        offset: Long = 0,\n        count: Int = Int.MaxValue,\n        charSet: Codec = java.nio.charset.StandardCharsets.UTF_8): String\"><pre>os.read(<span class=\"pl-v\">arg</span>: os.<span class=\"pl-en\">ReadablePath</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">String</span>\nos.read(<span class=\"pl-v\">arg</span>: os.<span class=\"pl-en\">ReadablePath</span>, <span class=\"pl-v\">charSet</span>: <span class=\"pl-en\">Codec</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">String</span>\nos.read(<span class=\"pl-v\">arg</span>: os.<span class=\"pl-en\">Path</span>,\n        <span class=\"pl-v\">offset</span>: <span class=\"pl-en\">Long</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>,\n        <span class=\"pl-v\">count</span>: <span class=\"pl-en\">Int</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Int</span>.<span class=\"pl-en\">MaxValue</span>,\n        <span class=\"pl-v\">charSet</span>: <span class=\"pl-en\">Codec</span> <span class=\"pl-k\">=</span> java.nio.charset.<span class=\"pl-en\">StandardCharsets</span>.<span class=\"pl-en\">UTF_8</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">String</span></pre></div>\n<p dir=\"auto\">Reads the contents of a <a href=\"#ospath\">os.Path</a> or other <a href=\"#ossource\">os.Source</a> as a\n<code>java.lang.String</code>. Defaults to reading the entire file as UTF-8, but you can\nalso select a different <code>charSet</code> to use, and provide an <code>offset</code>/<code>count</code> to\nread from if the source supports seeking.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.read(wd / &quot;File.txt&quot;) ==&gt; &quot;I am cow&quot;\nos.read(wd / &quot;folder1&quot; / &quot;one.txt&quot;) ==&gt; &quot;Contents of folder one&quot;\nos.read(wd / &quot;Multi Line.txt&quot;) ==&gt;\n  &quot;&quot;&quot;I am cow\n    |Hear me moo\n    |I weigh twice as much as you\n    |And I look good on the barbecue&quot;&quot;&quot;.stripMargin\"><pre>os.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I am cow<span class=\"pl-pds\">\"</span></span>\nos.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Contents of folder one<span class=\"pl-pds\">\"</span></span>\nos.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Multi Line.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span>\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>I am cow</span>\n<span class=\"pl-s\">    |Hear me moo</span>\n<span class=\"pl-s\">    |I weigh twice as much as you</span>\n<span class=\"pl-s\">    |And I look good on the barbecue<span class=\"pl-pds\">\"\"\"</span></span>.stripMargin</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osreadbytes\" class=\"anchor\" aria-hidden=\"true\" href=\"#osreadbytes\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.read.bytes</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.read.bytes(arg: os.ReadablePath): Array[Byte]\nos.read.bytes(arg: os.Path, offset: Long, count: Int): Array[Byte]\"><pre>os.read.bytes(<span class=\"pl-v\">arg</span>: os.<span class=\"pl-en\">ReadablePath</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Array</span>[<span class=\"pl-en\">Byte</span>]\nos.read.bytes(<span class=\"pl-v\">arg</span>: os.<span class=\"pl-en\">Path</span>, <span class=\"pl-v\">offset</span>: <span class=\"pl-en\">Long</span>, <span class=\"pl-v\">count</span>: <span class=\"pl-en\">Int</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Array</span>[<span class=\"pl-en\">Byte</span>]</pre></div>\n<p dir=\"auto\">Reads the contents of a <a href=\"#ospath\">os.Path</a> or <a href=\"#ossource\">os.Source</a> as an\n<code>Array[Byte]</code>; you can provide an <code>offset</code>/<code>count</code> to read from if the source\nsupports seeking.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.read.bytes(wd / &quot;File.txt&quot;) ==&gt; &quot;I am cow&quot;.getBytes\nos.read.bytes(wd / &quot;misc&quot; / &quot;binary.png&quot;).length ==&gt; 711\"><pre>os.read.bytes(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I am cow<span class=\"pl-pds\">\"</span></span>.getBytes\nos.read.bytes(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>binary.png<span class=\"pl-pds\">\"</span></span>).length <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">711</span></pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osreadchunks\" class=\"anchor\" aria-hidden=\"true\" href=\"#osreadchunks\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.read.chunks</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.read.chunks(p: ReadablePath, chunkSize: Int): os.Generator[(Array[Byte], Int)]\nos.read.chunks(p: ReadablePath, buffer: Array[Byte]): os.Generator[(Array[Byte], Int)]\"><pre>os.read.chunks(<span class=\"pl-v\">p</span>: <span class=\"pl-en\">ReadablePath</span>, <span class=\"pl-v\">chunkSize</span>: <span class=\"pl-en\">Int</span>)<span class=\"pl-k\">:</span> os.<span class=\"pl-en\">Generator</span>[(<span class=\"pl-en\">Array</span>[<span class=\"pl-en\">Byte</span>], <span class=\"pl-en\">Int</span>)]\nos.read.chunks(<span class=\"pl-v\">p</span>: <span class=\"pl-en\">ReadablePath</span>, <span class=\"pl-v\">buffer</span>: <span class=\"pl-en\">Array</span>[<span class=\"pl-en\">Byte</span>])<span class=\"pl-k\">:</span> os.<span class=\"pl-en\">Generator</span>[(<span class=\"pl-en\">Array</span>[<span class=\"pl-en\">Byte</span>], <span class=\"pl-en\">Int</span>)]</pre></div>\n<p dir=\"auto\">Reads the contents of the given path in chunks of the given size;\nreturns a generator which provides a byte array and an offset into that\narray which contains the data for that chunk. All chunks will be of the\ngiven size, except for the last chunk which may be smaller.</p>\n<p dir=\"auto\">Note that the array returned by the generator is shared between each\ncallback; make sure you copy the bytes/array somewhere else if you want\nto keep them around.</p>\n<p dir=\"auto\">Optionally takes in a provided input <code>buffer</code> instead of a <code>chunkSize</code>,\nallowing you to re-use the buffer between invocations.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val chunks = os.read.chunks(wd / &quot;File.txt&quot;, chunkSize = 2)\n  .map{case (buf, n) =&gt; buf.take(n).toSeq } // copy the buffer to save the data\n  .toSeq\n\nchunks ==&gt; Seq(\n  Seq[Byte]('I', ' '),\n  Seq[Byte]('a', 'm'),\n  Seq[Byte](' ', 'c'),\n  Seq[Byte]('o', 'w')\n)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">chunks</span> <span class=\"pl-k\">=</span> os.read.chunks(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, chunkSize <span class=\"pl-k\">=</span> <span class=\"pl-c1\">2</span>)\n  .map{<span class=\"pl-k\">case</span> (buf, n) <span class=\"pl-k\">=&gt;</span> buf.take(n).toSeq } <span class=\"pl-c\"><span class=\"pl-c\">//</span> copy the buffer to save the data</span>\n  .toSeq\n\nchunks <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(\n  <span class=\"pl-en\">Seq</span>[<span class=\"pl-en\">Byte</span>](<span class=\"pl-s\">'I'</span>, <span class=\"pl-s\">' '</span>),\n  <span class=\"pl-en\">Seq</span>[<span class=\"pl-en\">Byte</span>](<span class=\"pl-s\">'a'</span>, <span class=\"pl-s\">'m'</span>),\n  <span class=\"pl-en\">Seq</span>[<span class=\"pl-en\">Byte</span>](<span class=\"pl-s\">' '</span>, <span class=\"pl-s\">'c'</span>),\n  <span class=\"pl-en\">Seq</span>[<span class=\"pl-en\">Byte</span>](<span class=\"pl-s\">'o'</span>, <span class=\"pl-s\">'w'</span>)\n)</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osreadlines\" class=\"anchor\" aria-hidden=\"true\" href=\"#osreadlines\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.read.lines</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.read.lines(arg: os.ReadablePath): IndexedSeq[String]\nos.read.lines(arg: os.ReadablePath, charSet: Codec): IndexedSeq[String]\"><pre>os.read.lines(<span class=\"pl-v\">arg</span>: os.<span class=\"pl-en\">ReadablePath</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">IndexedSeq</span>[<span class=\"pl-en\">String</span>]\nos.read.lines(<span class=\"pl-v\">arg</span>: os.<span class=\"pl-en\">ReadablePath</span>, <span class=\"pl-v\">charSet</span>: <span class=\"pl-en\">Codec</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">IndexedSeq</span>[<span class=\"pl-en\">String</span>]</pre></div>\n<p dir=\"auto\">Reads the given <a href=\"#ospath\">os.Path</a> or other <a href=\"#ossource\">os.Source</a> as a string\nand splits it into lines; defaults to reading as UTF-8, which you can override\nby specifying a <code>charSet</code>.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.read.lines(wd / &quot;File.txt&quot;) ==&gt; Seq(&quot;I am cow&quot;)\nos.read.lines(wd / &quot;Multi Line.txt&quot;) ==&gt; Seq(\n  &quot;I am cow&quot;,\n  &quot;Hear me moo&quot;,\n  &quot;I weigh twice as much as you&quot;,\n  &quot;And I look good on the barbecue&quot;\n)\"><pre>os.read.lines(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I am cow<span class=\"pl-pds\">\"</span></span>)\nos.read.lines(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Multi Line.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I am cow<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Hear me moo<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I weigh twice as much as you<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>And I look good on the barbecue<span class=\"pl-pds\">\"</span></span>\n)</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osreadlinesstream\" class=\"anchor\" aria-hidden=\"true\" href=\"#osreadlinesstream\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.read.lines.stream</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.read.lines(arg: os.ReadablePath): os.Generator[String]\nos.read.lines(arg: os.ReadablePath, charSet: Codec): os.Generator[String]\"><pre>os.read.lines(<span class=\"pl-v\">arg</span>: os.<span class=\"pl-en\">ReadablePath</span>)<span class=\"pl-k\">:</span> os.<span class=\"pl-en\">Generator</span>[<span class=\"pl-en\">String</span>]\nos.read.lines(<span class=\"pl-v\">arg</span>: os.<span class=\"pl-en\">ReadablePath</span>, <span class=\"pl-v\">charSet</span>: <span class=\"pl-en\">Codec</span>)<span class=\"pl-k\">:</span> os.<span class=\"pl-en\">Generator</span>[<span class=\"pl-en\">String</span>]</pre></div>\n<p dir=\"auto\">Identical to <a href=\"#osreadlines\">os.read.lines</a>, but streams the results back to you\nin a <a href=\"#osgenerator\">os.Generator</a> rather than accumulating them in memory.\nUseful if the file is large.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.read.lines.stream(wd / &quot;File.txt&quot;).count() ==&gt; 1\nos.read.lines.stream(wd / &quot;Multi Line.txt&quot;).count() ==&gt; 4\n\n// Streaming the lines to the console\nfor(line &lt;- os.read.lines.stream(wd / &quot;Multi Line.txt&quot;)){\n  println(line)\n}\"><pre>os.read.lines.stream(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>).count() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">1</span>\nos.read.lines.stream(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Multi Line.txt<span class=\"pl-pds\">\"</span></span>).count() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">4</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Streaming the lines to the console</span>\n<span class=\"pl-k\">for</span>(line <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">-</span> os.read.lines.stream(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Multi Line.txt<span class=\"pl-pds\">\"</span></span>)){\n  println(line)\n}</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osreadinputstream\" class=\"anchor\" aria-hidden=\"true\" href=\"#osreadinputstream\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.read.inputStream</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.read.inputStream(p: ReadablePath): java.io.InputStream\"><pre>os.read.inputStream(<span class=\"pl-v\">p</span>: <span class=\"pl-en\">ReadablePath</span>)<span class=\"pl-k\">:</span> java.io.<span class=\"pl-en\">InputStream</span></pre></div>\n<p dir=\"auto\">Opens a <code>java.io.InputStream</code> to read from the given file.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val is = os.read.inputStream(wd / &quot;File.txt&quot;) // ==&gt; &quot;I am cow&quot;\nis.read() ==&gt; 'I'\nis.read() ==&gt; ' '\nis.read() ==&gt; 'a'\nis.read() ==&gt; 'm'\nis.read() ==&gt; ' '\nis.read() ==&gt; 'c'\nis.read() ==&gt; 'o'\nis.read() ==&gt; 'w'\nis.read() ==&gt; -1\nis.close()\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">is</span> <span class=\"pl-k\">=</span> os.read.inputStream(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-c\"><span class=\"pl-c\">//</span> ==&gt; \"I am cow\"</span>\nis.read() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\">'I'</span>\nis.read() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\">' '</span>\nis.read() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\">'a'</span>\nis.read() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\">'m'</span>\nis.read() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\">' '</span>\nis.read() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\">'c'</span>\nis.read() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\">'o'</span>\nis.read() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\">'w'</span>\nis.read() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>\nis.close()</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osreadstream\" class=\"anchor\" aria-hidden=\"true\" href=\"#osreadstream\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.read.stream</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.read.stream(p: ReadablePath): geny.Readable\"><pre>os.read.stream(<span class=\"pl-v\">p</span>: <span class=\"pl-en\">ReadablePath</span>)<span class=\"pl-k\">:</span> geny.<span class=\"pl-en\">Readable</span></pre></div>\n<p dir=\"auto\">Opens a <a href=\"https://github.com/lihaoyi/geny#readable\">geny.Readable</a> to read from\nthe given file. This allows you to stream data to any other library that\nsupports <code>Readable</code> without buffering the data in memory, e.g. parsing it via\nFastParse, deserializing it via uPickle, uploading it via Requests-Scala, etc.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val readable: geny.Readable = os.read.stream(wd / &quot;File.json&quot;)\n\nrequests.post(&quot;https://httpbin.org/post&quot;, data = readable)\n\nupickle.default.read(readable)\n\nujson.read(readable)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">readable</span><span class=\"pl-k\">:</span> geny.<span class=\"pl-en\">Readable</span> <span class=\"pl-k\">=</span> os.read.stream(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.json<span class=\"pl-pds\">\"</span></span>)\n\nrequests.post(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/post<span class=\"pl-pds\">\"</span></span>, data <span class=\"pl-k\">=</span> readable)\n\nupickle.default.read(readable)\n\nujson.read(readable)</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-oswrite\" class=\"anchor\" aria-hidden=\"true\" href=\"#oswrite\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.write</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.write(target: Path,\n         data: os.Source,\n         perms: PermSet = null,\n         createFolders: Boolean = false): Unit\"><pre>os.write(<span class=\"pl-v\">target</span>: <span class=\"pl-en\">Path</span>,\n         <span class=\"pl-v\">data</span>: os.<span class=\"pl-en\">Source</span>,\n         <span class=\"pl-v\">perms</span>: <span class=\"pl-en\">PermSet</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>,\n         <span class=\"pl-v\">createFolders</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Writes data from the given file or <a href=\"#ossource\">os.Source</a> to a file at the\ntarget <a href=\"#ospath\">os.Path</a>. You can specify the filesystem permissions of the\nnewly created file by passing in a <a href=\"#ospermset\">os.PermSet</a>.</p>\n<p dir=\"auto\">This throws an exception if the file already exists. To over-write or append to\nan existing file, see <a href=\"#oswriteover\">os.write.over</a> or\n<a href=\"#oswriteappend\">os.write.append</a>.</p>\n<p dir=\"auto\">By default, this doesn't create enclosing folders; you can enable this\nbehavior by setting <code>createFolders = true</code></p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.write(wd / &quot;New File.txt&quot;, &quot;New File Contents&quot;)\nos.read(wd / &quot;New File.txt&quot;) ==&gt; &quot;New File Contents&quot;\n\nos.write(wd / &quot;NewBinary.bin&quot;, Array[Byte](0, 1, 2, 3))\nos.read.bytes(wd / &quot;NewBinary.bin&quot;) ==&gt; Array[Byte](0, 1, 2, 3)\"><pre>os.write(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>New File.txt<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>New File Contents<span class=\"pl-pds\">\"</span></span>)\nos.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>New File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>New File Contents<span class=\"pl-pds\">\"</span></span>\n\nos.write(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>NewBinary.bin<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-en\">Array</span>[<span class=\"pl-en\">Byte</span>](<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>))\nos.read.bytes(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>NewBinary.bin<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Array</span>[<span class=\"pl-en\">Byte</span>](<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>)</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-oswriteappend\" class=\"anchor\" aria-hidden=\"true\" href=\"#oswriteappend\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.write.append</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.write.append(target: Path,\n                data: os.Source,\n                perms: PermSet = null,\n                createFolders: Boolean = false): Unit\"><pre>os.write.append(<span class=\"pl-v\">target</span>: <span class=\"pl-en\">Path</span>,\n                <span class=\"pl-v\">data</span>: os.<span class=\"pl-en\">Source</span>,\n                <span class=\"pl-v\">perms</span>: <span class=\"pl-en\">PermSet</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>,\n                <span class=\"pl-v\">createFolders</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Similar to <a href=\"#oswrite\">os.write</a>, except if the file already exists this appends\nthe written data to the existing file contents.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.read(wd / &quot;File.txt&quot;) ==&gt; &quot;I am cow&quot;\n\nos.write.append(wd / &quot;File.txt&quot;, &quot;, hear me moo&quot;)\nos.read(wd / &quot;File.txt&quot;) ==&gt; &quot;I am cow, hear me moo&quot;\n\nos.write.append(wd / &quot;File.txt&quot;, &quot;,\\nI weigh twice as much as you&quot;)\nos.read(wd / &quot;File.txt&quot;) ==&gt;\n  &quot;I am cow, hear me moo,\\nI weigh twice as much as you&quot;\n\nos.read.bytes(wd / &quot;misc&quot; / &quot;binary.png&quot;).length ==&gt; 711\nos.write.append(wd / &quot;misc&quot; / &quot;binary.png&quot;, Array[Byte](1, 2, 3))\nos.read.bytes(wd / &quot;misc&quot; / &quot;binary.png&quot;).length ==&gt; 714\"><pre>os.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I am cow<span class=\"pl-pds\">\"</span></span>\n\nos.write.append(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>, hear me moo<span class=\"pl-pds\">\"</span></span>)\nos.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I am cow, hear me moo<span class=\"pl-pds\">\"</span></span>\n\nos.write.append(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>,<span class=\"pl-cce\">\\n</span>I weigh twice as much as you<span class=\"pl-pds\">\"</span></span>)\nos.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span>\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I am cow, hear me moo,<span class=\"pl-cce\">\\n</span>I weigh twice as much as you<span class=\"pl-pds\">\"</span></span>\n\nos.read.bytes(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>binary.png<span class=\"pl-pds\">\"</span></span>).length <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">711</span>\nos.write.append(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>binary.png<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-en\">Array</span>[<span class=\"pl-en\">Byte</span>](<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>))\nos.read.bytes(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>binary.png<span class=\"pl-pds\">\"</span></span>).length <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">714</span></pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-oswriteover\" class=\"anchor\" aria-hidden=\"true\" href=\"#oswriteover\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.write.over</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.write.over(target: Path,\n              data: os.Source,\n              perms: PermSet = null,\n              offset: Long = 0,\n              createFolders: Boolean = false,\n              truncate: Boolean = true): Unit\"><pre>os.write.over(<span class=\"pl-v\">target</span>: <span class=\"pl-en\">Path</span>,\n              <span class=\"pl-v\">data</span>: os.<span class=\"pl-en\">Source</span>,\n              <span class=\"pl-v\">perms</span>: <span class=\"pl-en\">PermSet</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>,\n              <span class=\"pl-v\">offset</span>: <span class=\"pl-en\">Long</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>,\n              <span class=\"pl-v\">createFolders</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n              <span class=\"pl-v\">truncate</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Similar to <a href=\"#oswrite\">os.write</a>, except if the file already exists this\nover-writes the existing file contents. You can also pass in <code>truncate = false</code>\nto avoid truncating the file if the new contents is shorter than the old\ncontents, and an <code>offset</code> to the file you want to write to.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.read(wd / &quot;File.txt&quot;) ==&gt; &quot;I am cow&quot;\nos.write.over(wd / &quot;File.txt&quot;, &quot;You are cow&quot;)\n\nos.read(wd / &quot;File.txt&quot;) ==&gt; &quot;You are cow&quot;\n\nos.write.over(wd / &quot;File.txt&quot;, &quot;We &quot;, truncate = false)\nos.read(wd / &quot;File.txt&quot;) ==&gt; &quot;We  are cow&quot;\n\nos.write.over(wd / &quot;File.txt&quot;, &quot;s&quot;, offset = 8, truncate = false)\nos.read(wd / &quot;File.txt&quot;) ==&gt; &quot;We  are sow&quot;\"><pre>os.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I am cow<span class=\"pl-pds\">\"</span></span>\nos.write.over(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>You are cow<span class=\"pl-pds\">\"</span></span>)\n\nos.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>You are cow<span class=\"pl-pds\">\"</span></span>\n\nos.write.over(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>We <span class=\"pl-pds\">\"</span></span>, truncate <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>)\nos.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>We  are cow<span class=\"pl-pds\">\"</span></span>\n\nos.write.over(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>s<span class=\"pl-pds\">\"</span></span>, offset <span class=\"pl-k\">=</span> <span class=\"pl-c1\">8</span>, truncate <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>)\nos.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>We  are sow<span class=\"pl-pds\">\"</span></span></pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-oswriteoutputstream\" class=\"anchor\" aria-hidden=\"true\" href=\"#oswriteoutputstream\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.write.outputStream</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.write.outputStream(target: Path,\n                      perms: PermSet = null,\n                      createFolders: Boolean = false,\n                      openOptions: Seq[OpenOption] = Seq(CREATE, WRITE))\"><pre>os.write.outputStream(<span class=\"pl-v\">target</span>: <span class=\"pl-en\">Path</span>,\n                      <span class=\"pl-v\">perms</span>: <span class=\"pl-en\">PermSet</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>,\n                      <span class=\"pl-v\">createFolders</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n                      <span class=\"pl-v\">openOptions</span>: <span class=\"pl-en\">Seq</span>[<span class=\"pl-en\">OpenOption</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">Seq</span>(<span class=\"pl-en\">CREATE</span>, <span class=\"pl-en\">WRITE</span>))</pre></div>\n<p dir=\"auto\">Open a <code>java.io.OutputStream</code> to write to the given file.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val out = os.write.outputStream(wd / &quot;New File.txt&quot;)\nout.write('H')\nout.write('e')\nout.write('l')\nout.write('l')\nout.write('o')\nout.close()\n\nos.read(wd / &quot;New File.txt&quot;) ==&gt; &quot;Hello&quot;\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">out</span> <span class=\"pl-k\">=</span> os.write.outputStream(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>New File.txt<span class=\"pl-pds\">\"</span></span>)\nout.write(<span class=\"pl-s\">'H'</span>)\nout.write(<span class=\"pl-s\">'e'</span>)\nout.write(<span class=\"pl-s\">'l'</span>)\nout.write(<span class=\"pl-s\">'l'</span>)\nout.write(<span class=\"pl-s\">'o'</span>)\nout.close()\n\nos.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>New File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Hello<span class=\"pl-pds\">\"</span></span></pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-ostruncate\" class=\"anchor\" aria-hidden=\"true\" href=\"#ostruncate\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.truncate</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.truncate(p: Path, size: Long): Unit\"><pre>os.truncate(<span class=\"pl-v\">p</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">size</span>: <span class=\"pl-en\">Long</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Truncate the given file to the given size. If the file is smaller than the\ngiven size, does nothing.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.read(wd / &quot;File.txt&quot;) ==&gt; &quot;I am cow&quot;\n\nos.truncate(wd / &quot;File.txt&quot;, 4)\nos.read(wd / &quot;File.txt&quot;) ==&gt; &quot;I am&quot;\"><pre>os.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I am cow<span class=\"pl-pds\">\"</span></span>\n\nos.truncate(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">4</span>)\nos.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I am<span class=\"pl-pds\">\"</span></span></pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-listing--walking\" class=\"anchor\" aria-hidden=\"true\" href=\"#listing--walking\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Listing &amp; Walking</h3>\n<h4 dir=\"auto\"><a id=\"user-content-oslist\" class=\"anchor\" aria-hidden=\"true\" href=\"#oslist\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.list</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.list(p: Path): IndexedSeq[Path]\nos.list(p: Path, sort: Boolean = true): IndexedSeq[Path]\"><pre>os.list(<span class=\"pl-v\">p</span>: <span class=\"pl-en\">Path</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">IndexedSeq</span>[<span class=\"pl-en\">Path</span>]\nos.list(<span class=\"pl-v\">p</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">sort</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">IndexedSeq</span>[<span class=\"pl-en\">Path</span>]</pre></div>\n<p dir=\"auto\">Returns all the files and folders directly within the given folder. If the given\npath is not a folder, raises an error. Can be called via\n<a href=\"#osliststream\">os.list.stream</a> to stream the results. To list files recursively,\nuse <a href=\"#oswalk\">os.walk</a>.</p>\n<p dir=\"auto\">For convenience <code>os.list</code> sorts the entries in the folder before returning\nthem. You can disable sorted by passing in the flag <code>sort = false</code>.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.list(wd / &quot;folder1&quot;) ==&gt; Seq(wd / &quot;folder1&quot; / &quot;one.txt&quot;)\nos.list(wd / &quot;folder2&quot;) ==&gt; Seq(\n  wd / &quot;folder2&quot; / &quot;nestedA&quot;,\n  wd / &quot;folder2&quot; / &quot;nestedB&quot;\n)\"><pre>os.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>)\nos.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span>\n)</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osliststream\" class=\"anchor\" aria-hidden=\"true\" href=\"#osliststream\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.list.stream</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.list.stream(p: Path): os.Generator[Path]\"><pre>os.list.stream(<span class=\"pl-v\">p</span>: <span class=\"pl-en\">Path</span>)<span class=\"pl-k\">:</span> os.<span class=\"pl-en\">Generator</span>[<span class=\"pl-en\">Path</span>]</pre></div>\n<p dir=\"auto\">Similar to <a href=\"#oslist\">os.list</a>, except provides a <a href=\"#osgenerator\">os.Generator</a> of\nresults rather than accumulating all of them in memory. Useful if the result set\nis large.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.list.stream(wd / &quot;folder2&quot;).count() ==&gt; 2\n\n// Streaming the listed files to the console\nfor(line &lt;- os.list.stream(wd / &quot;folder2&quot;)){\n  println(line)\n}\"><pre>os.list.stream(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>).count() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">2</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Streaming the listed files to the console</span>\n<span class=\"pl-k\">for</span>(line <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">-</span> os.list.stream(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>)){\n  println(line)\n}</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-oswalk\" class=\"anchor\" aria-hidden=\"true\" href=\"#oswalk\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.walk</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.walk(path: Path,\n        skip: Path =&gt; Boolean = _ =&gt; false,\n        preOrder: Boolean = true,\n        followLinks: Boolean = false,\n        maxDepth: Int = Int.MaxValue,\n        includeTarget: Boolean = false): IndexedSeq[Path]\"><pre>os.walk(<span class=\"pl-v\">path</span>: <span class=\"pl-en\">Path</span>,\n        <span class=\"pl-v\">skip</span>: <span class=\"pl-en\">Path</span> <span class=\"pl-k\">=&gt;</span> <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> _ <span class=\"pl-k\">=&gt;</span> <span class=\"pl-c1\">false</span>,\n        <span class=\"pl-v\">preOrder</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>,\n        <span class=\"pl-v\">followLinks</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n        <span class=\"pl-v\">maxDepth</span>: <span class=\"pl-en\">Int</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Int</span>.<span class=\"pl-en\">MaxValue</span>,\n        <span class=\"pl-v\">includeTarget</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">IndexedSeq</span>[<span class=\"pl-en\">Path</span>]</pre></div>\n<p dir=\"auto\">Recursively walks the given folder and returns the paths of every file or folder\nwithin.</p>\n<p dir=\"auto\">You can pass in a <code>skip</code> callback to skip files or folders you are not\ninterested in. This can avoid walking entire parts of the folder hierarchy,\nsaving time as compared to filtering them after the fact.</p>\n<p dir=\"auto\">By default, the paths are returned as a pre-order traversal: the enclosing\nfolder is occurs first before any of it's contents. You can pass in <code>preOrder = false</code> to turn it into a post-order traversal, such that the enclosing folder\noccurs last after all it's contents.</p>\n<p dir=\"auto\"><code>os.walk</code> returns but does not follow symlinks; pass in <code>followLinks = true</code> to\noverride that behavior. You can also specify a maximum depth you wish to walk\nvia the <code>maxDepth</code> parameter.</p>\n<p dir=\"auto\"><code>os.walk</code> does not include the path given to it as part of the traversal by\ndefault. Pass in <code>includeTarget = true</code> to make it do so. The path appears at\nthe start of the traversal of <code>preOrder = true</code>, and at the end of the traversal\nif <code>preOrder = false</code>.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.walk(wd / &quot;folder1&quot;) ==&gt; Seq(wd / &quot;folder1&quot; / &quot;one.txt&quot;)\n\nos.walk(wd / &quot;folder1&quot;, includeTarget = true) ==&gt; Seq(\n  wd / &quot;folder1&quot;,\n  wd / &quot;folder1&quot; / &quot;one.txt&quot;\n)\n\nos.walk(wd / &quot;folder2&quot;) ==&gt; Seq(\n  wd / &quot;folder2&quot; / &quot;nestedA&quot;,\n  wd / &quot;folder2&quot; / &quot;nestedA&quot; / &quot;a.txt&quot;,\n  wd / &quot;folder2&quot; / &quot;nestedB&quot;,\n  wd / &quot;folder2&quot; / &quot;nestedB&quot; / &quot;b.txt&quot;\n)\n\nos.walk(wd / &quot;folder2&quot;, preOrder = false) ==&gt; Seq(\n  wd / &quot;folder2&quot; / &quot;nestedA&quot; / &quot;a.txt&quot;,\n  wd / &quot;folder2&quot; / &quot;nestedA&quot;,\n  wd / &quot;folder2&quot; / &quot;nestedB&quot; / &quot;b.txt&quot;,\n  wd / &quot;folder2&quot; / &quot;nestedB&quot;\n)\n\nos.walk(wd / &quot;folder2&quot;, maxDepth = 1) ==&gt; Seq(\n  wd / &quot;folder2&quot; / &quot;nestedA&quot;,\n  wd / &quot;folder2&quot; / &quot;nestedB&quot;\n)\n\nos.walk(wd / &quot;folder2&quot;, skip = _.last == &quot;nestedA&quot;) ==&gt; Seq(\n  wd / &quot;folder2&quot; / &quot;nestedB&quot;,\n  wd / &quot;folder2&quot; / &quot;nestedB&quot; / &quot;b.txt&quot;\n)\"><pre>os.walk(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>)\n\nos.walk(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>, includeTarget <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>\n)\n\nos.walk(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a.txt<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b.txt<span class=\"pl-pds\">\"</span></span>\n)\n\nos.walk(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>, preOrder <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a.txt<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b.txt<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span>\n)\n\nos.walk(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>, maxDepth <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span>\n)\n\nos.walk(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>, skip <span class=\"pl-k\">=</span> _.last <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b.txt<span class=\"pl-pds\">\"</span></span>\n)</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-oswalkattrs\" class=\"anchor\" aria-hidden=\"true\" href=\"#oswalkattrs\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.walk.attrs</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.walk.attrs(path: Path,\n              skip: (Path, os.StatInfo) =&gt; Boolean = (_, _) =&gt; false,\n              preOrder: Boolean = true,\n              followLinks: Boolean = false,\n              maxDepth: Int = Int.MaxValue,\n              includeTarget: Boolean = false): IndexedSeq[(Path, os.StatInfo)]\"><pre>os.walk.attrs(<span class=\"pl-v\">path</span>: <span class=\"pl-en\">Path</span>,\n              <span class=\"pl-v\">skip</span>: (<span class=\"pl-en\">Path</span>, os.<span class=\"pl-en\">StatInfo</span>) <span class=\"pl-k\">=&gt;</span> <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> (_, _) <span class=\"pl-k\">=&gt;</span> <span class=\"pl-c1\">false</span>,\n              <span class=\"pl-v\">preOrder</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>,\n              <span class=\"pl-v\">followLinks</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n              <span class=\"pl-v\">maxDepth</span>: <span class=\"pl-en\">Int</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Int</span>.<span class=\"pl-en\">MaxValue</span>,\n              <span class=\"pl-v\">includeTarget</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">IndexedSeq</span>[(<span class=\"pl-en\">Path</span>, os.<span class=\"pl-en\">StatInfo</span>)]</pre></div>\n<p dir=\"auto\">Similar to <a href=\"#oswalk\">os.walk</a>, except it also provides the <code>os.StatInfo</code>\nfilesystem metadata of every path that it returns. Can save time by allowing you\nto avoid querying the filesystem for metadata later. Note that <code>os.StatInfo</code>\ndoes not include filesystem ownership and permissions data; use <code>os.stat.posix</code> on\nthe path if you need those attributes.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val filesSortedBySize = os.walk.attrs(wd / &quot;misc&quot;, followLinks = true)\n  .sortBy{case (p, attrs) =&gt; attrs.size}\n  .collect{case (p, attrs) if attrsisFile =&gt; p}\n\nfilesSortedBySize ==&gt; Seq(\n  wd / &quot;misc&quot; / &quot;echo&quot;,\n  wd / &quot;misc&quot; / &quot;file-symlink&quot;,\n  wd / &quot;misc&quot; / &quot;echo_with_wd&quot;,\n  wd / &quot;misc&quot; / &quot;folder-symlink&quot; / &quot;one.txt&quot;,\n  wd / &quot;misc&quot; / &quot;binary.png&quot;\n)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">filesSortedBySize</span> <span class=\"pl-k\">=</span> os.walk.attrs(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span>, followLinks <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>)\n  .sortBy{<span class=\"pl-k\">case</span> (p, attrs) <span class=\"pl-k\">=&gt;</span> attrs.size}\n  .collect{<span class=\"pl-k\">case</span> (p, attrs) <span class=\"pl-k\">if</span> attrsisFile <span class=\"pl-k\">=&gt;</span> p}\n\nfilesSortedBySize <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>echo<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file-symlink<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>echo_with_wd<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder-symlink<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>binary.png<span class=\"pl-pds\">\"</span></span>\n)</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-oswalkstream\" class=\"anchor\" aria-hidden=\"true\" href=\"#oswalkstream\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.walk.stream</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.walk.stream(path: Path,\n              skip: Path =&gt; Boolean = _ =&gt; false,\n              preOrder: Boolean = true,\n              followLinks: Boolean = false,\n              maxDepth: Int = Int.MaxValue,\n              includeTarget: Boolean = false): os.Generator[Path]\"><pre>os.walk.stream(<span class=\"pl-v\">path</span>: <span class=\"pl-en\">Path</span>,\n              <span class=\"pl-v\">skip</span>: <span class=\"pl-en\">Path</span> <span class=\"pl-k\">=&gt;</span> <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> _ <span class=\"pl-k\">=&gt;</span> <span class=\"pl-c1\">false</span>,\n              <span class=\"pl-v\">preOrder</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>,\n              <span class=\"pl-v\">followLinks</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n              <span class=\"pl-v\">maxDepth</span>: <span class=\"pl-en\">Int</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Int</span>.<span class=\"pl-en\">MaxValue</span>,\n              <span class=\"pl-v\">includeTarget</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>)<span class=\"pl-k\">:</span> os.<span class=\"pl-en\">Generator</span>[<span class=\"pl-en\">Path</span>]</pre></div>\n<p dir=\"auto\">Similar to <a href=\"#oswalk\">os.walk</a>, except returns a <a href=\"#osgenerator\">os.Generator</a> of\nthe results rather than accumulating them in memory. Useful if you are walking\nvery large folder hierarchies, or if you wish to begin processing the output\neven before the walk has completed.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.walk.stream(wd / &quot;folder1&quot;).count() ==&gt; 1\n\nos.walk.stream(wd / &quot;folder2&quot;).count() ==&gt; 4\n\nos.walk.stream(wd / &quot;folder2&quot;, skip = _.last == &quot;nestedA&quot;).count() ==&gt; 2\"><pre>os.walk.stream(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>).count() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">1</span>\n\nos.walk.stream(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>).count() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">4</span>\n\nos.walk.stream(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>, skip <span class=\"pl-k\">=</span> _.last <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span>).count() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">2</span></pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-oswalkstreamattrs\" class=\"anchor\" aria-hidden=\"true\" href=\"#oswalkstreamattrs\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.walk.stream.attrs</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.walk.stream.attrs(path: Path,\n                     skip: (Path, os.StatInfo) =&gt; Boolean = (_, _) =&gt; false,\n                     preOrder: Boolean = true,\n                     followLinks: Boolean = false,\n                     maxDepth: Int = Int.MaxValue,\n                     includeTarget: Boolean = false): os.Generator[(Path, os.StatInfo)]\"><pre>os.walk.stream.attrs(<span class=\"pl-v\">path</span>: <span class=\"pl-en\">Path</span>,\n                     <span class=\"pl-v\">skip</span>: (<span class=\"pl-en\">Path</span>, os.<span class=\"pl-en\">StatInfo</span>) <span class=\"pl-k\">=&gt;</span> <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> (_, _) <span class=\"pl-k\">=&gt;</span> <span class=\"pl-c1\">false</span>,\n                     <span class=\"pl-v\">preOrder</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>,\n                     <span class=\"pl-v\">followLinks</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n                     <span class=\"pl-v\">maxDepth</span>: <span class=\"pl-en\">Int</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Int</span>.<span class=\"pl-en\">MaxValue</span>,\n                     <span class=\"pl-v\">includeTarget</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>)<span class=\"pl-k\">:</span> os.<span class=\"pl-en\">Generator</span>[(<span class=\"pl-en\">Path</span>, os.<span class=\"pl-en\">StatInfo</span>)]</pre></div>\n<p dir=\"auto\">Similar to <a href=\"#oswalkstream\">os.walk.stream</a>, except it also provides the filesystem\nmetadata of every path that it returns. Can save time by allowing you to avoid\nquerying the filesystem for metadata later.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"def totalFileSizes(p: os.Path) = os.walk.stream.attrs(p)\n  .collect{case (p, attrs) if attrs.isFile =&gt; attrs.size}\n  .sum\n\ntotalFileSizes(wd / &quot;folder1&quot;) ==&gt; 22\ntotalFileSizes(wd / &quot;folder2&quot;) ==&gt; 40\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">totalFileSizes</span>(<span class=\"pl-v\">p</span>: os.<span class=\"pl-en\">Path</span>) <span class=\"pl-k\">=</span> os.walk.stream.attrs(p)\n  .collect{<span class=\"pl-k\">case</span> (p, attrs) <span class=\"pl-k\">if</span> attrs.isFile <span class=\"pl-k\">=&gt;</span> attrs.size}\n  .sum\n\ntotalFileSizes(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">22</span>\ntotalFileSizes(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">40</span></pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-manipulating-files--folders\" class=\"anchor\" aria-hidden=\"true\" href=\"#manipulating-files--folders\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Manipulating Files &amp; Folders</h3>\n<h4 dir=\"auto\"><a id=\"user-content-osexists\" class=\"anchor\" aria-hidden=\"true\" href=\"#osexists\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.exists</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.exists(p: Path, followLinks: Boolean = true): Boolean\"><pre>os.exists(<span class=\"pl-v\">p</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">followLinks</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Boolean</span></pre></div>\n<p dir=\"auto\">Checks if a file or folder exists at the specified path</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.exists(wd / &quot;File.txt&quot;) ==&gt; true\nos.exists(wd / &quot;folder1&quot;) ==&gt; true\nos.exists(wd / &quot;doesnt-exist&quot;) ==&gt; false\n\nos.exists(wd / &quot;misc&quot; / &quot;file-symlink&quot;) ==&gt; true\nos.exists(wd / &quot;misc&quot; / &quot;folder-symlink&quot;) ==&gt; true\nos.exists(wd / &quot;misc&quot; / &quot;broken-symlink&quot;) ==&gt; false\nos.exists(wd / &quot;misc&quot; / &quot;broken-symlink&quot;, followLinks = false) ==&gt; true\"><pre>os.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span>\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span>\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>doesnt-exist<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span>\n\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span>\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span>\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>broken-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span>\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>broken-symlink<span class=\"pl-pds\">\"</span></span>, followLinks <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span></pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osmove\" class=\"anchor\" aria-hidden=\"true\" href=\"#osmove\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.move</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.move(from: Path, to: Path): Unit\nos.move(from: Path, to: Path, createFolders: Boolean): Unit\"><pre>os.move(<span class=\"pl-v\">from</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">to</span>: <span class=\"pl-en\">Path</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span>\nos.move(<span class=\"pl-v\">from</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">to</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">createFolders</span>: <span class=\"pl-en\">Boolean</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Moves a file or folder from one path to another. Errors out if the destination\npath already exists, or is within the source path.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.list(wd / &quot;folder1&quot;) ==&gt; Seq(wd / &quot;folder1&quot; / &quot;one.txt&quot;)\nos.move(wd / &quot;folder1&quot; / &quot;one.txt&quot;, wd / &quot;folder1&quot; / &quot;first.txt&quot;)\nos.list(wd / &quot;folder1&quot;) ==&gt; Seq(wd / &quot;folder1&quot; / &quot;first.txt&quot;)\n\nos.list(wd / &quot;folder2&quot;) ==&gt; Seq(wd / &quot;folder2&quot; / &quot;nestedA&quot;, wd / &quot;folder2&quot; / &quot;nestedB&quot;)\nos.move(wd / &quot;folder2&quot; / &quot;nestedA&quot;, wd / &quot;folder2&quot; / &quot;nestedC&quot;)\nos.list(wd / &quot;folder2&quot;) ==&gt; Seq(wd / &quot;folder2&quot; / &quot;nestedB&quot;, wd / &quot;folder2&quot; / &quot;nestedC&quot;)\n\nos.read(wd / &quot;File.txt&quot;) ==&gt; &quot;I am cow&quot;\nos.move(wd / &quot;Multi Line.txt&quot;, wd / &quot;File.txt&quot;, replaceExisting = true)\nos.read(wd / &quot;File.txt&quot;) ==&gt;\n  &quot;&quot;&quot;I am cow\n    |Hear me moo\n    |I weigh twice as much as you\n    |And I look good on the barbecue&quot;&quot;&quot;.stripMargin\"><pre>os.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>)\nos.move(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>first.txt<span class=\"pl-pds\">\"</span></span>)\nos.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>first.txt<span class=\"pl-pds\">\"</span></span>)\n\nos.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span>)\nos.move(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedC<span class=\"pl-pds\">\"</span></span>)\nos.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedC<span class=\"pl-pds\">\"</span></span>)\n\nos.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I am cow<span class=\"pl-pds\">\"</span></span>\nos.move(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Multi Line.txt<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, replaceExisting <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>)\nos.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span>\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>I am cow</span>\n<span class=\"pl-s\">    |Hear me moo</span>\n<span class=\"pl-s\">    |I weigh twice as much as you</span>\n<span class=\"pl-s\">    |And I look good on the barbecue<span class=\"pl-pds\">\"\"\"</span></span>.stripMargin</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osmovematching\" class=\"anchor\" aria-hidden=\"true\" href=\"#osmovematching\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.move.matching</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.move.matching(t: PartialFunction[Path, Path]): PartialFunction[Path, Unit]\"><pre>os.move.matching(<span class=\"pl-v\">t</span>: <span class=\"pl-en\">PartialFunction</span>[<span class=\"pl-en\">Path</span>, <span class=\"pl-en\">Path</span>])<span class=\"pl-k\">:</span> <span class=\"pl-en\">PartialFunction</span>[<span class=\"pl-en\">Path</span>, <span class=\"pl-en\">Unit</span>]</pre></div>\n<p dir=\"auto\"><code>os.move</code> can also be used as a transformer, via <code>os.move.matching</code>. This lets\nyou use <code>.map</code> or <code>.collect</code> on a list of paths, and move all of them at once,\ne.g. to rename all <code>.txt</code> files within a folder tree to <code>.data</code>:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import os.{GlobSyntax, /}\nos.walk(wd / &quot;folder2&quot;) ==&gt; Seq(\n  wd / &quot;folder2&quot; / &quot;nestedA&quot;,\n  wd / &quot;folder2&quot; / &quot;nestedA&quot; / &quot;a.txt&quot;,\n  wd / &quot;folder2&quot; / &quot;nestedB&quot;,\n  wd / &quot;folder2&quot; / &quot;nestedB&quot; / &quot;b.txt&quot;\n)\n\nos.walk(wd/'folder2).collect(os.move.matching{case p/g&quot;$x.txt&quot; =&gt; p/g&quot;$x.data&quot;})\n\nos.walk(wd / &quot;folder2&quot;) ==&gt; Seq(\n  wd / &quot;folder2&quot; / &quot;nestedA&quot;,\n  wd / &quot;folder2&quot; / &quot;nestedA&quot; / &quot;a.data&quot;,\n  wd / &quot;folder2&quot; / &quot;nestedB&quot;,\n  wd / &quot;folder2&quot; / &quot;nestedB&quot; / &quot;b.data&quot;\n)\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">os</span>.{<span class=\"pl-en\">GlobSyntax</span>, <span class=\"pl-en\">/</span>}\nos.walk(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a.txt<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b.txt<span class=\"pl-pds\">\"</span></span>\n)\n\nos.walk(wd<span class=\"pl-k\">/</span><span class=\"pl-c1\">'folder2</span>).collect(os.move.matching{<span class=\"pl-k\">case</span> p<span class=\"pl-k\">/</span><span class=\"pl-k\">g</span><span class=\"pl-s\">\"</span>$x<span class=\"pl-s\">.txt</span><span class=\"pl-s\">\"</span> <span class=\"pl-k\">=&gt;</span> p<span class=\"pl-k\">/</span><span class=\"pl-k\">g</span><span class=\"pl-s\">\"</span>$x<span class=\"pl-s\">.data</span><span class=\"pl-s\">\"</span>})\n\nos.walk(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a.data<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b.data<span class=\"pl-pds\">\"</span></span>\n)</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osmoveinto\" class=\"anchor\" aria-hidden=\"true\" href=\"#osmoveinto\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.move.into</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.move.into(from: Path, to: Path): Unit\"><pre>os.move.into(<span class=\"pl-v\">from</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">to</span>: <span class=\"pl-en\">Path</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Move the given file or folder <em>into</em> the destination folder</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.list(wd / &quot;folder1&quot;) ==&gt; Seq(wd / &quot;folder1&quot; / &quot;one.txt&quot;)\nos.move.into(wd / &quot;File.txt&quot;, wd / &quot;folder1&quot;)\nos.list(wd / &quot;folder1&quot;) ==&gt; Seq(wd / &quot;folder1&quot; / &quot;File.txt&quot;, wd / &quot;folder1&quot; / &quot;one.txt&quot;)\"><pre>os.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>)\nos.move.into(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>)\nos.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osmoveover\" class=\"anchor\" aria-hidden=\"true\" href=\"#osmoveover\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.move.over</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.move.over(from: Path, to: Path): Unit\"><pre>os.move.over(<span class=\"pl-v\">from</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">to</span>: <span class=\"pl-en\">Path</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Move a file or folder from one path to another, and <em>overwrite</em> any file or\nfolder than may already be present at that path</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.list(wd / &quot;folder2&quot;) ==&gt; Seq(wd / &quot;folder2&quot; / &quot;nestedA&quot;, wd / &quot;folder2&quot; / &quot;nestedB&quot;)\nos.move.over(wd / &quot;folder1&quot;, wd / &quot;folder2&quot;)\nos.list(wd / &quot;folder2&quot;) ==&gt; Seq(wd / &quot;folder2&quot; / &quot;one.txt&quot;)\"><pre>os.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span>)\nos.move.over(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>)\nos.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-oscopy\" class=\"anchor\" aria-hidden=\"true\" href=\"#oscopy\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.copy</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.copy(from: Path, to: Path): Unit\nos.copy(from: Path, to: Path, createFolders: Boolean): Unit\"><pre>os.copy(<span class=\"pl-v\">from</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">to</span>: <span class=\"pl-en\">Path</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span>\nos.copy(<span class=\"pl-v\">from</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">to</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">createFolders</span>: <span class=\"pl-en\">Boolean</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Copy a file or folder from one path to another. Recursively copies folders with\nall their contents. Errors out if the destination path already exists, or is\nwithin the source path.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.list(wd / &quot;folder1&quot;) ==&gt; Seq(wd / &quot;folder1&quot; / &quot;one.txt&quot;)\nos.copy(wd / &quot;folder1&quot; / &quot;one.txt&quot;, wd / &quot;folder1&quot; / &quot;first.txt&quot;)\nos.list(wd / &quot;folder1&quot;) ==&gt; Seq(wd / &quot;folder1&quot; / &quot;first.txt&quot;, wd / &quot;folder1&quot; / &quot;one.txt&quot;)\n\nos.list(wd / &quot;folder2&quot;) ==&gt; Seq(wd / &quot;folder2&quot; / &quot;nestedA&quot;, wd / &quot;folder2&quot; / &quot;nestedB&quot;)\nos.copy(wd / &quot;folder2&quot; / &quot;nestedA&quot;, wd / &quot;folder2&quot; / &quot;nestedC&quot;)\nos.list(wd / &quot;folder2&quot;) ==&gt; Seq(\n  wd / &quot;folder2&quot; / &quot;nestedA&quot;,\n  wd / &quot;folder2&quot; / &quot;nestedB&quot;,\n  wd / &quot;folder2&quot; / &quot;nestedC&quot;\n)\n\nos.read(wd / &quot;File.txt&quot;) ==&gt; &quot;I am cow&quot;\nos.copy(wd / &quot;Multi Line.txt&quot;, wd / &quot;File.txt&quot;, replaceExisting = true)\nos.read(wd / &quot;File.txt&quot;) ==&gt;\n  &quot;&quot;&quot;I am cow\n    |Hear me moo\n    |I weigh twice as much as you\n    |And I look good on the barbecue&quot;&quot;&quot;.stripMargin\n    ```\n\n`os.copy` can also be used as a transformer:\n\n```scala\nos.copy.matching(t: PartialFunction[Path, Path]): PartialFunction[Path, Unit]\"><pre>os.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>)\nos.copy(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>first.txt<span class=\"pl-pds\">\"</span></span>)\nos.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>first.txt<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>)\n\nos.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span>)\nos.copy(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedC<span class=\"pl-pds\">\"</span></span>)\nos.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span>,\n  wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedC<span class=\"pl-pds\">\"</span></span>\n)\n\nos.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I am cow<span class=\"pl-pds\">\"</span></span>\nos.copy(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Multi Line.txt<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, replaceExisting <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>)\nos.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span>\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>I am cow</span>\n<span class=\"pl-s\">    |Hear me moo</span>\n<span class=\"pl-s\">    |I weigh twice as much as you</span>\n<span class=\"pl-s\">    |And I look good on the barbecue<span class=\"pl-pds\">\"\"\"</span></span>.stripMargin\n    ```\n\n`os.copy` can also be used as a <span class=\"pl-v\">transformer</span>:\n\n```scala\nos.copy.matching(<span class=\"pl-v\">t</span>: <span class=\"pl-en\">PartialFunction</span>[<span class=\"pl-en\">Path</span>, <span class=\"pl-en\">Path</span>])<span class=\"pl-k\">:</span> <span class=\"pl-en\">PartialFunction</span>[<span class=\"pl-en\">Path</span>, <span class=\"pl-en\">Unit</span>]</pre></div>\n<p dir=\"auto\">This lets you use <code>.map</code> or <code>.collect</code> on a list of paths, and copy all of them\nat once:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"paths.map(os.copy.matching{case p/&quot;scala&quot;/file =&gt; p/&quot;java&quot;/file})\"><pre>paths.map(os.copy.matching{<span class=\"pl-k\">case</span> p<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>scala<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">/</span>file <span class=\"pl-k\">=&gt;</span> p<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>java<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">/</span>file})</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-oscopyinto\" class=\"anchor\" aria-hidden=\"true\" href=\"#oscopyinto\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.copy.into</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.copy.into(from: Path, to: Path): Unit\"><pre>os.copy.into(<span class=\"pl-v\">from</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">to</span>: <span class=\"pl-en\">Path</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Copy the given file or folder <em>into</em> the destination folder</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.list(wd / &quot;folder1&quot;) ==&gt; Seq(wd / &quot;folder1&quot; / &quot;one.txt&quot;)\nos.copy.into(wd / &quot;File.txt&quot;, wd / &quot;folder1&quot;)\nos.list(wd / &quot;folder1&quot;) ==&gt; Seq(wd / &quot;folder1&quot; / &quot;File.txt&quot;, wd / &quot;folder1&quot; / &quot;one.txt&quot;)\"><pre>os.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>)\nos.copy.into(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>)\nos.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-oscopyover\" class=\"anchor\" aria-hidden=\"true\" href=\"#oscopyover\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.copy.over</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.copy.over(from: Path, to: Path): Unit\"><pre>os.copy.over(<span class=\"pl-v\">from</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">to</span>: <span class=\"pl-en\">Path</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Similar to <a href=\"#oscopy\">os.copy</a>, but if the destination file already exists then\noverwrite it instead of erroring out.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.list(wd / &quot;folder2&quot;) ==&gt; Seq(wd / &quot;folder2&quot; / &quot;nestedA&quot;, wd / &quot;folder2&quot; / &quot;nestedB&quot;)\nos.copy.over(wd / &quot;folder1&quot;, wd / &quot;folder2&quot;)\nos.list(wd / &quot;folder2&quot;) ==&gt; Seq(wd / &quot;folder2&quot; / &quot;one.txt&quot;)\"><pre>os.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span>)\nos.copy.over(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>)\nos.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-oscopy-with-mergefolders\" class=\"anchor\" aria-hidden=\"true\" href=\"#oscopy-with-mergefolders\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.copy with <code>mergeFolders</code></h4>\n<p dir=\"auto\"><em>Since 0.7.5</em></p>\n<p dir=\"auto\">If you want to copy a directory over another but don't want to overwrite the whole destination directory (and loose it's content),\nyou can use the <code>mergeFolders</code> option of <a href=\"#oscopy\">os.copy</a>.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.list(wd / &quot;folder1&quot;) ==&gt; Seq(wd / &quot;folder1&quot; / &quot;one.txt&quot;)\nos.list(wd / &quot;folder2&quot;) ==&gt; Seq(wd / &quot;folder2&quot; / &quot;nestedA&quot;, wd / &quot;folder2&quot; / &quot;nestedB&quot;)\nos.copy(wd / &quot;folder1&quot;, wd / &quot;folder2&quot;, mergeFolders = true)\nos.list(wd / &quot;folder2&quot;) ==&gt; Seq(wd / &quot;folder2&quot; / &quot;one.txt&quot;, wd / &quot;folder2&quot; / &quot;nestedA&quot;, wd / &quot;folder2&quot; / &quot;nestedB&quot;)\"><pre>os.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>)\nos.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span>)\nos.copy(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>, mergeFolders <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>)\nos.list(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osmakedir\" class=\"anchor\" aria-hidden=\"true\" href=\"#osmakedir\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.makeDir</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.makeDir(path: Path): Unit\nos.makeDir(path: Path, perms: PermSet): Unit\"><pre>os.makeDir(<span class=\"pl-v\">path</span>: <span class=\"pl-en\">Path</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span>\nos.makeDir(<span class=\"pl-v\">path</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">perms</span>: <span class=\"pl-en\">PermSet</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Create a single directory at the specified path. Optionally takes in a\n<a href=\"#ospermset\">os.PermSet</a> to specify the filesystem permissions of the created\ndirectory.</p>\n<p dir=\"auto\">Errors out if the directory already exists, or if the parent directory of the\nspecified path does not exist. To automatically create enclosing directories and\nignore the destination if it already exists, using\n<a href=\"#osmakedirall\">os.makeDir.all</a></p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.exists(wd / &quot;new_folder&quot;) ==&gt; false\nos.makeDir(wd / &quot;new_folder&quot;)\nos.exists(wd / &quot;new_folder&quot;) ==&gt; true\"><pre>os.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>new_folder<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span>\nos.makeDir(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>new_folder<span class=\"pl-pds\">\"</span></span>)\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>new_folder<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span></pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osmakedirall\" class=\"anchor\" aria-hidden=\"true\" href=\"#osmakedirall\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.makeDir.all</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.makeDir.all(path: Path): Unit\nos.makeDir.all(path: Path,\n               perms: PermSet = null,\n               acceptLinkedDirectory: Boolean = true): Unit\"><pre>os.makeDir.all(<span class=\"pl-v\">path</span>: <span class=\"pl-en\">Path</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span>\nos.makeDir.all(<span class=\"pl-v\">path</span>: <span class=\"pl-en\">Path</span>,\n               <span class=\"pl-v\">perms</span>: <span class=\"pl-en\">PermSet</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>,\n               <span class=\"pl-v\">acceptLinkedDirectory</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Similar to <a href=\"#osmakedir\">os.makeDir</a>, but automatically creates any necessary\nenclosing directories if they do not exist, and does not raise an error if the\ndestination path already containts a directory. Also does not raise an error if\nthe destination path contains a symlink to a directory, though you can force it\nto error out in that case by passing in <code>acceptLinkedDirectory = false</code></p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.exists(wd / &quot;new_folder&quot;) ==&gt; false\nos.makeDir.all(wd / &quot;new_folder&quot; / &quot;inner&quot; / &quot;deep&quot;)\nos.exists(wd / &quot;new_folder&quot; / &quot;inner&quot; / &quot;deep&quot;) ==&gt; true\"><pre>os.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>new_folder<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span>\nos.makeDir.all(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>new_folder<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>inner<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>deep<span class=\"pl-pds\">\"</span></span>)\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>new_folder<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>inner<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>deep<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span></pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osremove\" class=\"anchor\" aria-hidden=\"true\" href=\"#osremove\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.remove</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.remove(target: Path): Unit\"><pre>os.remove(<span class=\"pl-v\">target</span>: <span class=\"pl-en\">Path</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Remove the target file or folder. Folders need to be empty to be removed; if you\nwant to remove a folder tree recursively, use <a href=\"#osremoveall\">os.remove.all</a></p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.exists(wd / &quot;File.txt&quot;) ==&gt; true\nos.remove(wd / &quot;File.txt&quot;)\nos.exists(wd / &quot;File.txt&quot;) ==&gt; false\n\nos.exists(wd / &quot;folder1&quot; / &quot;one.txt&quot;) ==&gt; true\nos.remove(wd / &quot;folder1&quot; / &quot;one.txt&quot;)\nos.remove(wd / &quot;folder1&quot;)\nos.exists(wd / &quot;folder1&quot; / &quot;one.txt&quot;) ==&gt; false\nos.exists(wd / &quot;folder1&quot;) ==&gt; false\"><pre>os.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span>\nos.remove(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>)\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span>\n\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span>\nos.remove(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>)\nos.remove(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>)\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span>\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span></pre></div>\n<p dir=\"auto\">When removing symbolic links, it is the link that gets removed, and not it's\ndestination:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.remove(wd / &quot;misc&quot; / &quot;file-symlink&quot;)\nos.exists(wd / &quot;misc&quot; / &quot;file-symlink&quot;, followLinks = false) ==&gt; false\nos.exists(wd / &quot;File.txt&quot;, followLinks = false) ==&gt; true\n\nos.remove(wd / &quot;misc&quot; / &quot;folder-symlink&quot;)\nos.exists(wd / &quot;misc&quot; / &quot;folder-symlink&quot;, followLinks = false) ==&gt; false\nos.exists(wd / &quot;folder1&quot;, followLinks = false) ==&gt; true\nos.exists(wd / &quot;folder1&quot; / &quot;one.txt&quot;, followLinks = false) ==&gt; true\n\nos.remove(wd / &quot;misc&quot; / &quot;broken-symlink&quot;)\nos.exists(wd / &quot;misc&quot; / &quot;broken-symlink&quot;, followLinks = false) ==&gt; false\"><pre>os.remove(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file-symlink<span class=\"pl-pds\">\"</span></span>)\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file-symlink<span class=\"pl-pds\">\"</span></span>, followLinks <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span>\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, followLinks <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span>\n\nos.remove(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder-symlink<span class=\"pl-pds\">\"</span></span>)\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder-symlink<span class=\"pl-pds\">\"</span></span>, followLinks <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span>\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>, followLinks <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span>\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>, followLinks <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span>\n\nos.remove(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>broken-symlink<span class=\"pl-pds\">\"</span></span>)\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>broken-symlink<span class=\"pl-pds\">\"</span></span>, followLinks <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span></pre></div>\n<p dir=\"auto\">If you wish to remove the destination of a symlink, use\n<a href=\"#osreadlink\">os.readLink</a>.</p>\n<h4 dir=\"auto\"><a id=\"user-content-osremoveall\" class=\"anchor\" aria-hidden=\"true\" href=\"#osremoveall\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.remove.all</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.remove.all(target: Path): Unit\"><pre>os.remove.all(<span class=\"pl-v\">target</span>: <span class=\"pl-en\">Path</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Remove the target file or folder; if it is a folder and not empty, recursively\nremoving all it's contents before deleting it.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.exists(wd / &quot;folder1&quot; / &quot;one.txt&quot;) ==&gt; true\nos.remove.all(wd / &quot;folder1&quot;)\nos.exists(wd / &quot;folder1&quot; / &quot;one.txt&quot;) ==&gt; false\nos.exists(wd / &quot;folder1&quot;) ==&gt; false\"><pre>os.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span>\nos.remove.all(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>)\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span>\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span></pre></div>\n<p dir=\"auto\">When removing symbolic links, it is the links that gets removed, and not it's\ndestination:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.remove.all(wd / &quot;misc&quot; / &quot;file-symlink&quot;)\nos.exists(wd / &quot;misc&quot; / &quot;file-symlink&quot;, followLinks = false) ==&gt; false\nos.exists(wd / &quot;File.txt&quot;, followLinks = false) ==&gt; true\n\nos.remove.all(wd / &quot;misc&quot; / &quot;folder-symlink&quot;)\nos.exists(wd / &quot;misc&quot; / &quot;folder-symlink&quot;, followLinks = false) ==&gt; false\nos.exists(wd / &quot;folder1&quot;, followLinks = false) ==&gt; true\nos.exists(wd / &quot;folder1&quot; / &quot;one.txt&quot;, followLinks = false) ==&gt; true\n\nos.remove.all(wd / &quot;misc&quot; / &quot;broken-symlink&quot;)\nos.exists(wd / &quot;misc&quot; / &quot;broken-symlink&quot;, followLinks = false) ==&gt; false\"><pre>os.remove.all(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file-symlink<span class=\"pl-pds\">\"</span></span>)\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file-symlink<span class=\"pl-pds\">\"</span></span>, followLinks <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span>\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, followLinks <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span>\n\nos.remove.all(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder-symlink<span class=\"pl-pds\">\"</span></span>)\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder-symlink<span class=\"pl-pds\">\"</span></span>, followLinks <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span>\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>, followLinks <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span>\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>one.txt<span class=\"pl-pds\">\"</span></span>, followLinks <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span>\n\nos.remove.all(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>broken-symlink<span class=\"pl-pds\">\"</span></span>)\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>broken-symlink<span class=\"pl-pds\">\"</span></span>, followLinks <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span></pre></div>\n<p dir=\"auto\">If you wish to remove the destination of a symlink, use\n<a href=\"#osreadlink\">os.readLink</a>.</p>\n<h4 dir=\"auto\"><a id=\"user-content-oshardlink\" class=\"anchor\" aria-hidden=\"true\" href=\"#oshardlink\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.hardlink</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.hardlink(src: Path, dest: Path, perms): Unit\"><pre>os.hardlink(<span class=\"pl-v\">src</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">dest</span>: <span class=\"pl-en\">Path</span>, perms)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Create a hardlink to the source path from the destination path</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.hardlink(wd / &quot;File.txt&quot;, wd / &quot;Linked.txt&quot;)\nos.exists(wd / &quot;Linked.txt&quot;)\nos.read(wd / &quot;Linked.txt&quot;) ==&gt; &quot;I am cow&quot;\nos.isLink(wd / &quot;Linked.txt&quot;) ==&gt; false\"><pre>os.hardlink(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Linked.txt<span class=\"pl-pds\">\"</span></span>)\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Linked.txt<span class=\"pl-pds\">\"</span></span>)\nos.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Linked.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I am cow<span class=\"pl-pds\">\"</span></span>\nos.isLink(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Linked.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span></pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-ossymlink\" class=\"anchor\" aria-hidden=\"true\" href=\"#ossymlink\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.symlink</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.symlink(link: Path, dest: FilePath, perms: PermSet = null): Unit\"><pre>os.symlink(<span class=\"pl-v\">link</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">dest</span>: <span class=\"pl-en\">FilePath</span>, <span class=\"pl-v\">perms</span>: <span class=\"pl-en\">PermSet</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Create a symbolic to the source path from the destination path. Optionally takes\na <a href=\"#ospermset\">os.PermSet</a> to customize the filesystem permissions of the symbolic\nlink.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.symlink(wd / &quot;File.txt&quot;, wd / &quot;Linked.txt&quot;)\nos.exists(wd / &quot;Linked.txt&quot;)\nos.read(wd / &quot;Linked.txt&quot;) ==&gt; &quot;I am cow&quot;\nos.isLink(wd / &quot;Linked.txt&quot;) ==&gt; true\"><pre>os.symlink(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Linked.txt<span class=\"pl-pds\">\"</span></span>)\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Linked.txt<span class=\"pl-pds\">\"</span></span>)\nos.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Linked.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I am cow<span class=\"pl-pds\">\"</span></span>\nos.isLink(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Linked.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span></pre></div>\n<p dir=\"auto\">You can create symlinks with either absolute <code>os.Path</code>s or relative <code>os.RelPath</code>s:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.symlink(wd / &quot;File.txt&quot;, os.rel/ &quot;Linked2.txt&quot;)\nos.exists(wd / &quot;Linked2.txt&quot;)\nos.read(wd / &quot;Linked2.txt&quot;) ==&gt; &quot;I am cow&quot;\nos.isLink(wd / &quot;Linked2.txt&quot;) ==&gt; true\"><pre>os.symlink(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, os.rel<span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Linked2.txt<span class=\"pl-pds\">\"</span></span>)\nos.exists(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Linked2.txt<span class=\"pl-pds\">\"</span></span>)\nos.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Linked2.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I am cow<span class=\"pl-pds\">\"</span></span>\nos.isLink(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Linked2.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span></pre></div>\n<p dir=\"auto\">Creating absolute and relative symlinks respectively. Relative symlinks are\nresolved relative to the enclosing folder of the link.</p>\n<h4 dir=\"auto\"><a id=\"user-content-osreadlink\" class=\"anchor\" aria-hidden=\"true\" href=\"#osreadlink\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.readLink</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.readLink(src: Path): os.FilePath\nos.readLink.absolute(src: Path): os.Path\"><pre>os.readLink(<span class=\"pl-v\">src</span>: <span class=\"pl-en\">Path</span>)<span class=\"pl-k\">:</span> os.<span class=\"pl-en\">FilePath</span>\nos.readLink.absolute(<span class=\"pl-v\">src</span>: <span class=\"pl-en\">Path</span>)<span class=\"pl-k\">:</span> os.<span class=\"pl-en\">Path</span></pre></div>\n<p dir=\"auto\">Returns the immediate destination of the given symbolic link.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.readLink(wd / &quot;misc&quot; / &quot;file-symlink&quot;) ==&gt; os.up / &quot;File.txt&quot;\nos.readLink(wd / &quot;misc&quot; / &quot;folder-symlink&quot;) ==&gt; os.up / &quot;folder1&quot;\nos.readLink(wd / &quot;misc&quot; / &quot;broken-symlink&quot;) ==&gt; os.rel / &quot;broken&quot;\nos.readLink(wd / &quot;misc&quot; / &quot;broken-abs-symlink&quot;) ==&gt; os.root / &quot;doesnt&quot; / &quot;exist&quot;\"><pre>os.readLink(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> os.up <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>\nos.readLink(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> os.up <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>\nos.readLink(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>broken-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> os.rel <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>broken<span class=\"pl-pds\">\"</span></span>\nos.readLink(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>broken-abs-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> os.root <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>doesnt<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>exist<span class=\"pl-pds\">\"</span></span></pre></div>\n<p dir=\"auto\">Note that symbolic links can be either absolute <code>os.Path</code>s or relative\n<code>os.RelPath</code>s, represented by <code>os.FilePath</code>. You can also use <code>os.readLink.all</code>\nto automatically resolve relative symbolic links to their absolute destination:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.readLink.absolute(wd / &quot;misc&quot; / &quot;file-symlink&quot;) ==&gt; wd / &quot;File.txt&quot;\nos.readLink.absolute(wd / &quot;misc&quot; / &quot;folder-symlink&quot;) ==&gt; wd / &quot;folder1&quot;\nos.readLink.absolute(wd / &quot;misc&quot; / &quot;broken-symlink&quot;) ==&gt; wd / &quot;misc&quot; / &quot;broken&quot;\nos.readLink.absolute(wd / &quot;misc&quot; / &quot;broken-abs-symlink&quot;) ==&gt; os.root / &quot;doesnt&quot; / &quot;exist&quot;\"><pre>os.readLink.absolute(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>\nos.readLink.absolute(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>\nos.readLink.absolute(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>broken-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>broken<span class=\"pl-pds\">\"</span></span>\nos.readLink.absolute(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>broken-abs-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> os.root <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>doesnt<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>exist<span class=\"pl-pds\">\"</span></span></pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osfollowlink\" class=\"anchor\" aria-hidden=\"true\" href=\"#osfollowlink\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.followLink</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.followLink(src: Path): Option[Path]\"><pre>os.followLink(<span class=\"pl-v\">src</span>: <span class=\"pl-en\">Path</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Option</span>[<span class=\"pl-en\">Path</span>]</pre></div>\n<p dir=\"auto\">Attempts to any deference symbolic links in the given path, recursively, and return the\ncanonical path. Returns <code>None</code> if the path cannot be resolved (i.e. some\nsymbolic link in the given path is broken)</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.followLink(wd / &quot;misc&quot; / &quot;file-symlink&quot;) ==&gt; Some(wd / &quot;File.txt&quot;)\nos.followLink(wd / &quot;misc&quot; / &quot;folder-symlink&quot;) ==&gt; Some(wd / &quot;folder1&quot;)\nos.followLink(wd / &quot;misc&quot; / &quot;broken-symlink&quot;) ==&gt; None\"><pre>os.followLink(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Some</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>)\nos.followLink(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Some</span>(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>)\nos.followLink(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>broken-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">None</span></pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-ostemp\" class=\"anchor\" aria-hidden=\"true\" href=\"#ostemp\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.temp</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.temp(contents: os.Source = null,\n        dir: Path = null,\n        prefix: String = null,\n        suffix: String = null,\n        deleteOnExit: Boolean = true,\n        perms: PermSet = null): Path\"><pre>os.temp(<span class=\"pl-v\">contents</span>: os.<span class=\"pl-en\">Source</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>,\n        <span class=\"pl-v\">dir</span>: <span class=\"pl-en\">Path</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>,\n        <span class=\"pl-v\">prefix</span>: <span class=\"pl-en\">String</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>,\n        <span class=\"pl-v\">suffix</span>: <span class=\"pl-en\">String</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>,\n        <span class=\"pl-v\">deleteOnExit</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>,\n        <span class=\"pl-v\">perms</span>: <span class=\"pl-en\">PermSet</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Path</span></pre></div>\n<p dir=\"auto\">Creates a temporary file. You can optionally provide a <code>dir</code> to specify where\nthis file lives, file-<code>prefix</code> and file-<code>suffix</code> to customize what it looks\nlike, and a <a href=\"#ospermset\">os.PermSet</a> to customize its filesystem permissions.</p>\n<p dir=\"auto\">Passing in a <a href=\"#ossource\">os.Source</a> will initialize the contents of that file to\nthe provided data; otherwise it is created empty.</p>\n<p dir=\"auto\">By default, temporary files are deleted on JVM exit. You can disable that\nbehavior by setting <code>deleteOnExit = false</code></p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val tempOne = os.temp(&quot;default content&quot;)\nos.read(tempOne) ==&gt; &quot;default content&quot;\nos.write.over(tempOne, &quot;Hello&quot;)\nos.read(tempOne) ==&gt; &quot;Hello&quot;\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">tempOne</span> <span class=\"pl-k\">=</span> os.temp(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>default content<span class=\"pl-pds\">\"</span></span>)\nos.read(tempOne) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>default content<span class=\"pl-pds\">\"</span></span>\nos.write.over(tempOne, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Hello<span class=\"pl-pds\">\"</span></span>)\nos.read(tempOne) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Hello<span class=\"pl-pds\">\"</span></span></pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-ostempdir\" class=\"anchor\" aria-hidden=\"true\" href=\"#ostempdir\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.temp.dir</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.temp.dir(dir: Path = null,\n            prefix: String = null,\n            deleteOnExit: Boolean = true,\n            perms: PermSet = null): Path\"><pre>os.temp.dir(<span class=\"pl-v\">dir</span>: <span class=\"pl-en\">Path</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>,\n            <span class=\"pl-v\">prefix</span>: <span class=\"pl-en\">String</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>,\n            <span class=\"pl-v\">deleteOnExit</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>,\n            <span class=\"pl-v\">perms</span>: <span class=\"pl-en\">PermSet</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Path</span></pre></div>\n<p dir=\"auto\">Creates a temporary directory. You can optionally provide a <code>dir</code> to specify\nwhere this file lives, a <code>prefix</code> to customize what it looks like, and a\n<a href=\"#ospermset\">os.PermSet</a> to customize its filesystem permissions.</p>\n<p dir=\"auto\">By default, temporary directories are deleted on JVM exit. You can disable that\nbehavior by setting <code>deleteOnExit = false</code></p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val tempDir = os.temp.dir()\nos.list(tempDir) ==&gt; Nil\nos.write(tempDir / &quot;file&quot;, &quot;Hello&quot;)\nos.list(tempDir) ==&gt; Seq(tempDir / &quot;file&quot;)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">tempDir</span> <span class=\"pl-k\">=</span> os.temp.dir()\nos.list(tempDir) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Nil</span>\nos.write(tempDir <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Hello<span class=\"pl-pds\">\"</span></span>)\nos.list(tempDir) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(tempDir <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-filesystem-metadata\" class=\"anchor\" aria-hidden=\"true\" href=\"#filesystem-metadata\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Filesystem Metadata</h3>\n<h4 dir=\"auto\"><a id=\"user-content-osstat\" class=\"anchor\" aria-hidden=\"true\" href=\"#osstat\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.stat</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.stat(p: os.Path, followLinks: Boolean = true): os.StatInfo\"><pre>os.stat(<span class=\"pl-v\">p</span>: os.<span class=\"pl-en\">Path</span>, <span class=\"pl-v\">followLinks</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>)<span class=\"pl-k\">:</span> os.<span class=\"pl-en\">StatInfo</span></pre></div>\n<p dir=\"auto\">Reads in the basic filesystem metadata for the given file. By default follows\nsymbolic links to read the metadata of whatever the link is pointing at; set\n<code>followLinks = false</code> to disable that and instead read the metadata of the\nsymbolic link itself.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.stat(wd / &quot;File.txt&quot;).size ==&gt; 8\nos.stat(wd / &quot;Multi Line.txt&quot;).size ==&gt; 81\nos.stat(wd / &quot;folder1&quot;).fileType ==&gt; os.FileType.Dir\"><pre>os.stat(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>).size <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">8</span>\nos.stat(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Multi Line.txt<span class=\"pl-pds\">\"</span></span>).size <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">81</span>\nos.stat(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>).fileType <span class=\"pl-k\">==&gt;</span> os.<span class=\"pl-en\">FileType</span>.<span class=\"pl-en\">Dir</span></pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osstatposix\" class=\"anchor\" aria-hidden=\"true\" href=\"#osstatposix\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.stat.posix</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.stat.posix(p: os.Path, followLinks: Boolean = true): os.PosixStatInfo\"><pre>os.stat.posix(<span class=\"pl-v\">p</span>: os.<span class=\"pl-en\">Path</span>, <span class=\"pl-v\">followLinks</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>)<span class=\"pl-k\">:</span> os.<span class=\"pl-en\">PosixStatInfo</span></pre></div>\n<p dir=\"auto\">Reads in the posix filesystem metadata for the given file, providing\ninformation on permissions and ownership. By default follows symbolic\nlinks to read the metadata of whatever the link is pointing at; set\n<code>followLinks = false</code> to disable that and instead read the metadata of\nthe symbolic link itself.</p>\n<h4 dir=\"auto\"><a id=\"user-content-osisfile\" class=\"anchor\" aria-hidden=\"true\" href=\"#osisfile\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.isFile</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.isFile(p: Path, followLinks: Boolean = true): Boolean\"><pre>os.isFile(<span class=\"pl-v\">p</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">followLinks</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Boolean</span></pre></div>\n<p dir=\"auto\">Returns <code>true</code> if the given path is a file. Follows symbolic links by default,\npass in <code>followLinks = false</code> to not do so.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.isFile(wd / &quot;File.txt&quot;) ==&gt; true\nos.isFile(wd / &quot;folder1&quot;) ==&gt; false\n\nos.isFile(wd / &quot;misc&quot; / &quot;file-symlink&quot;) ==&gt; true\nos.isFile(wd / &quot;misc&quot; / &quot;folder-symlink&quot;) ==&gt; false\nos.isFile(wd / &quot;misc&quot; / &quot;file-symlink&quot;, followLinks = false) ==&gt; false\"><pre>os.isFile(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span>\nos.isFile(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span>\n\nos.isFile(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span>\nos.isFile(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span>\nos.isFile(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file-symlink<span class=\"pl-pds\">\"</span></span>, followLinks <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span></pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osisdir\" class=\"anchor\" aria-hidden=\"true\" href=\"#osisdir\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.isDir</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.isDir(p: Path, followLinks: Boolean = true): Boolean\"><pre>os.isDir(<span class=\"pl-v\">p</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">followLinks</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Boolean</span></pre></div>\n<p dir=\"auto\">Returns <code>true</code> if the given path is a folder. Follows symbolic links by default,\npass in <code>followLinks = false</code> to not do so.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.isDir(wd / &quot;File.txt&quot;) ==&gt; false\nos.isDir(wd / &quot;folder1&quot;) ==&gt; true\n\nos.isDir(wd / &quot;misc&quot; / &quot;file-symlink&quot;) ==&gt; false\nos.isDir(wd / &quot;misc&quot; / &quot;folder-symlink&quot;) ==&gt; true\nos.isDir(wd / &quot;misc&quot; / &quot;folder-symlink&quot;, followLinks = false) ==&gt; false\"><pre>os.isDir(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span>\nos.isDir(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span>\n\nos.isDir(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span>\nos.isDir(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span>\nos.isDir(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder-symlink<span class=\"pl-pds\">\"</span></span>, followLinks <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span></pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osislink\" class=\"anchor\" aria-hidden=\"true\" href=\"#osislink\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.isLink</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.isLink(p: Path, followLinks: Boolean = true): Boolean\"><pre>os.isLink(<span class=\"pl-v\">p</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">followLinks</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Boolean</span></pre></div>\n<p dir=\"auto\">Returns <code>true</code> if the given path is a symbolic link. Follows symbolic links by\ndefault, pass in <code>followLinks = false</code> to not do so.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.isLink(wd / &quot;misc&quot; / &quot;file-symlink&quot;) ==&gt; true\nos.isLink(wd / &quot;misc&quot; / &quot;folder-symlink&quot;) ==&gt; true\nos.isLink(wd / &quot;folder1&quot;) ==&gt; false\"><pre>os.isLink(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span>\nos.isLink(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">true</span>\nos.isLink(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder1<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">false</span></pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-ossize\" class=\"anchor\" aria-hidden=\"true\" href=\"#ossize\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.size</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.size(p: Path): Long\"><pre>os.size(<span class=\"pl-v\">p</span>: <span class=\"pl-en\">Path</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Long</span></pre></div>\n<p dir=\"auto\">Returns the size of the given file, in bytes</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.size(wd / &quot;File.txt&quot;) ==&gt; 8\nos.size(wd / &quot;Multi Line.txt&quot;) ==&gt; 81\"><pre>os.size(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">8</span>\nos.size(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Multi Line.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">81</span></pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osmtime\" class=\"anchor\" aria-hidden=\"true\" href=\"#osmtime\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.mtime</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.mtime(p: Path): Long\nos.mtime.set(p: Path, millis: Long): Unit\"><pre>os.mtime(<span class=\"pl-v\">p</span>: <span class=\"pl-en\">Path</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Long</span>\nos.mtime.set(<span class=\"pl-v\">p</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">millis</span>: <span class=\"pl-en\">Long</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Gets or sets the last-modified timestamp of the given file, in milliseconds</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.mtime.set(wd / &quot;File.txt&quot;, 0)\nos.mtime(wd / &quot;File.txt&quot;) ==&gt; 0\n\nos.mtime.set(wd / &quot;File.txt&quot;, 90000)\nos.mtime(wd / &quot;File.txt&quot;) ==&gt; 90000\nos.mtime(wd / &quot;misc&quot; / &quot;file-symlink&quot;) ==&gt; 90000\n\nos.mtime.set(wd / &quot;misc&quot; / &quot;file-symlink&quot;, 70000)\nos.mtime(wd / &quot;File.txt&quot;) ==&gt; 70000\nos.mtime(wd / &quot;misc&quot; / &quot;file-symlink&quot;) ==&gt; 70000\nassert(os.mtime(wd / &quot;misc&quot; / &quot;file-symlink&quot;, followLinks = false) != 40000)\"><pre>os.mtime.set(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">0</span>)\nos.mtime(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">0</span>\n\nos.mtime.set(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">90000</span>)\nos.mtime(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">90000</span>\nos.mtime(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">90000</span>\n\nos.mtime.set(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file-symlink<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">70000</span>)\nos.mtime(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">70000</span>\nos.mtime(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file-symlink<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">70000</span>\nassert(os.mtime(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>misc<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file-symlink<span class=\"pl-pds\">\"</span></span>, followLinks <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>) <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">40000</span>)</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-filesystem-permissions\" class=\"anchor\" aria-hidden=\"true\" href=\"#filesystem-permissions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Filesystem Permissions</h3>\n<h4 dir=\"auto\"><a id=\"user-content-osperms\" class=\"anchor\" aria-hidden=\"true\" href=\"#osperms\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.perms</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.perms(p: Path, followLinks: Boolean = true): PermSet\nos.perms.set(p: Path, arg2: PermSet): Unit\"><pre>os.perms(<span class=\"pl-v\">p</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">followLinks</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">PermSet</span>\nos.perms.set(<span class=\"pl-v\">p</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">arg2</span>: <span class=\"pl-en\">PermSet</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Gets or sets the filesystem permissions of the given file or folder, as an\n<a href=\"#ospermset\">os.PermSet</a>.</p>\n<p dir=\"auto\">Note that if you want to create a file or folder with a given set of\npermissions, you can pass in an <a href=\"#ospermset\">os.PermSet</a> to <a href=\"#oswrite\">os.write</a>\nor <a href=\"#osmakedir\">os.makeDir</a>. That will ensure the file or folder is created\natomically with the given permissions, rather than being created with the\ndefault set of permissions and having <code>os.perms.set</code> over-write them later</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.perms.set(wd / &quot;File.txt&quot;, &quot;rwxrwxrwx&quot;)\nos.perms(wd / &quot;File.txt&quot;).toString() ==&gt; &quot;rwxrwxrwx&quot;\nos.perms(wd / &quot;File.txt&quot;).toInt() ==&gt; Integer.parseInt(&quot;777&quot;, 8)\n\nos.perms.set(wd / &quot;File.txt&quot;, Integer.parseInt(&quot;755&quot;, 8))\nos.perms(wd / &quot;File.txt&quot;).toString() ==&gt; &quot;rwxr-xr-x&quot;\n\nos.perms.set(wd / &quot;File.txt&quot;, &quot;r-xr-xr-x&quot;)\nos.perms.set(wd / &quot;File.txt&quot;, Integer.parseInt(&quot;555&quot;, 8))\"><pre>os.perms.set(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>rwxrwxrwx<span class=\"pl-pds\">\"</span></span>)\nos.perms(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>).toString() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>rwxrwxrwx<span class=\"pl-pds\">\"</span></span>\nos.perms(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>).toInt() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Integer</span>.parseInt(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>777<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">8</span>)\n\nos.perms.set(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-en\">Integer</span>.parseInt(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>755<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">8</span>))\nos.perms(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>).toString() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>rwxr-xr-x<span class=\"pl-pds\">\"</span></span>\n\nos.perms.set(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>r-xr-xr-x<span class=\"pl-pds\">\"</span></span>)\nos.perms.set(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-en\">Integer</span>.parseInt(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>555<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">8</span>))</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osowner\" class=\"anchor\" aria-hidden=\"true\" href=\"#osowner\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.owner</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.owner(p: Path, followLinks: Boolean = true): UserPrincipal\nos.owner.set(arg1: Path, arg2: UserPrincipal): Unit\nos.owner.set(arg1: Path, arg2: String): Unit\"><pre>os.owner(<span class=\"pl-v\">p</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">followLinks</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">UserPrincipal</span>\nos.owner.set(<span class=\"pl-v\">arg1</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">arg2</span>: <span class=\"pl-en\">UserPrincipal</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span>\nos.owner.set(<span class=\"pl-v\">arg1</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">arg2</span>: <span class=\"pl-en\">String</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Gets or sets the owner of the given file or folder. Note that your process needs\nto be running as the <code>root</code> user in order to do this.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val originalOwner = os.owner(wd / &quot;File.txt&quot;)\n\nos.owner.set(wd / &quot;File.txt&quot;, &quot;nobody&quot;)\nos.owner(wd / &quot;File.txt&quot;).getName ==&gt; &quot;nobody&quot;\n\nos.owner.set(wd / &quot;File.txt&quot;, originalOwner)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">originalOwner</span> <span class=\"pl-k\">=</span> os.owner(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>)\n\nos.owner.set(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nobody<span class=\"pl-pds\">\"</span></span>)\nos.owner(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>).getName <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nobody<span class=\"pl-pds\">\"</span></span>\n\nos.owner.set(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, originalOwner)</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osgroup\" class=\"anchor\" aria-hidden=\"true\" href=\"#osgroup\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.group</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.group(p: Path, followLinks: Boolean = true): GroupPrincipal\nos.group.set(arg1: Path, arg2: GroupPrincipal): Unit\nos.group.set(arg1: Path, arg2: String): Unit\"><pre>os.group(<span class=\"pl-v\">p</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">followLinks</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">GroupPrincipal</span>\nos.group.set(<span class=\"pl-v\">arg1</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">arg2</span>: <span class=\"pl-en\">GroupPrincipal</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span>\nos.group.set(<span class=\"pl-v\">arg1</span>: <span class=\"pl-en\">Path</span>, <span class=\"pl-v\">arg2</span>: <span class=\"pl-en\">String</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<p dir=\"auto\">Gets or sets the owning group of the given file or folder. Note that your\nprocess needs to be running as the <code>root</code> user in order to do this.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val originalOwner = os.owner(wd / &quot;File.txt&quot;)\n\nos.owner.set(wd / &quot;File.txt&quot;, &quot;nobody&quot;)\nos.owner(wd / &quot;File.txt&quot;).getName ==&gt; &quot;nobody&quot;\n\nos.owner.set(wd / &quot;File.txt&quot;, originalOwner)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">originalOwner</span> <span class=\"pl-k\">=</span> os.owner(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>)\n\nos.owner.set(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nobody<span class=\"pl-pds\">\"</span></span>)\nos.owner(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>).getName <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nobody<span class=\"pl-pds\">\"</span></span>\n\nos.owner.set(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, originalOwner)</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-spawning-subprocesses\" class=\"anchor\" aria-hidden=\"true\" href=\"#spawning-subprocesses\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Spawning Subprocesses</h3>\n<p dir=\"auto\">Subprocess are spawned using <code>os.proc(command: os.Shellable*).foo(...)</code> calls,\nwhere the <code>command: Shellable*</code> sets up the basic command you wish to run and\n<code>.foo(...)</code> specifies how you want to run it. <code>os.Shellable</code> represents a value\nthat can make up part of your subprocess command, and the following values can\nbe used as <code>os.Shellable</code>s:</p>\n<ul dir=\"auto\">\n<li><code>java.lang.String</code></li>\n<li><code>scala.Symbol</code></li>\n<li><code>os.Path</code></li>\n<li><code>os.RelPath</code></li>\n<li><code>T: Numeric</code></li>\n<li><code>Iterable[T]</code>s of any of the above</li>\n</ul>\n<p dir=\"auto\">Most of the subprocess commands also let you redirect the subprocess's\n<code>stdin</code>/<code>stdout</code>/<code>stderr</code> streams via <code>os.ProcessInput</code> or <code>os.ProcessOutput</code>\nvalues: whether to inherit them from the parent process, stream them into\nbuffers, or output them to files. The following values are common to both input\nand output:</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code>os.Pipe</code>: the default, this connects the subprocess's stream to the parent\nprocess via pipes; if used on its stdin this lets the parent process write to\nthe subprocess via <code>os.SubProcess#stdin</code>, and if used on its stdout it lets the\nparent process read from the subprocess via <code>os.SubProcess#stdout</code>\nand <code>os.SubProcess#stderr</code>.</p>\n</li>\n<li>\n<p dir=\"auto\"><code>os.Inherit</code>: inherits the stream from the parent process. This lets the\nsubprocess read directly from the paren process's standard input or write\ndirectly to the parent process's standard output or error</p>\n</li>\n<li>\n<p dir=\"auto\"><code>os.Path</code>: connects the subprocess's stream to the given filesystem\npath, reading it's standard input from a file or writing it's standard\noutput/error to the file.</p>\n</li>\n</ul>\n<p dir=\"auto\">In addition, you can pass any <a href=\"#ossource\">os.Source</a>s to a Subprocess's <code>stdin</code>\n(<code>String</code>s, <code>InputStream</code>s, <code>Array[Byte]</code>s, ...), and pass in a\n<code>os.ProcessOutput</code> value to <code>stdout</code>/<code>stderr</code> to register callbacks that are run\nwhen output is received on those streams.</p>\n<p dir=\"auto\">Often, if you are only interested in capturing the standard output of the\nsubprocess but want any errors sent to the console, you might set <code>stderr = os.Inherit</code> while leaving <code>stdout = os.Pipe</code>.</p>\n<h4 dir=\"auto\"><a id=\"user-content-osproccall\" class=\"anchor\" aria-hidden=\"true\" href=\"#osproccall\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.proc.call</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.proc(command: os.Shellable*)\n  .call(cwd: Path = null,\n        env: Map[String, String] = null,\n        stdin: ProcessInput = Pipe,\n        stdout: ProcessOutput = Pipe,\n        stderr: ProcessOutput = Pipe,\n        mergeErrIntoOut: Boolean = false,\n        timeout: Long = Long.MaxValue,\n        check: Boolean = true,\n        propagateEnv: Boolean = true): os.CommandResult\"><pre>os.proc(<span class=\"pl-v\">command</span>: os.<span class=\"pl-en\">Shellable</span><span class=\"pl-k\">*</span>)\n  .call(<span class=\"pl-v\">cwd</span>: <span class=\"pl-en\">Path</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>,\n        <span class=\"pl-v\">env</span>: <span class=\"pl-en\">Map</span>[<span class=\"pl-en\">String</span>, <span class=\"pl-en\">String</span>] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>,\n        <span class=\"pl-v\">stdin</span>: <span class=\"pl-en\">ProcessInput</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Pipe</span>,\n        <span class=\"pl-v\">stdout</span>: <span class=\"pl-en\">ProcessOutput</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Pipe</span>,\n        <span class=\"pl-v\">stderr</span>: <span class=\"pl-en\">ProcessOutput</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Pipe</span>,\n        <span class=\"pl-v\">mergeErrIntoOut</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n        <span class=\"pl-v\">timeout</span>: <span class=\"pl-en\">Long</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Long</span>.<span class=\"pl-en\">MaxValue</span>,\n        <span class=\"pl-v\">check</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>,\n        <span class=\"pl-v\">propagateEnv</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>)<span class=\"pl-k\">:</span> os.<span class=\"pl-en\">CommandResult</span></pre></div>\n<p dir=\"auto\">Invokes the given subprocess like a function, passing in input and returning a\n<code>CommandResult</code>. You can then call <code>result.exitCode</code> to see how it exited, or\n<code>result.out.bytes</code> or <code>result.err.string</code> to access the aggregated stdout and\nstderr of the subprocess in a number of convenient ways.</p>\n<p dir=\"auto\"><code>call</code> provides a number of parameters that let you configure how the subprocess\nis run:</p>\n<ul dir=\"auto\">\n<li><code>cwd</code>: the working directory of the subprocess</li>\n<li><code>env</code>: any additional environment variables you wish to set in the subprocess</li>\n<li><code>stdin</code>: any data you wish to pass to the subprocess's standard input</li>\n<li><code>stdout</code>/<code>stderr</code>: these are <code>os.Redirect</code>s that let you configure how the\nprocesses output/error streams are configured.</li>\n<li><code>mergeErrIntoOut</code>: merges the subprocess's stderr stream into it's stdout</li>\n<li><code>timeout</code>: how long to wait for the subprocess to complete</li>\n<li><code>check</code>: disable this to avoid throwing an exception if the subprocess fails\nwith a non-zero exit code</li>\n<li><code>propagateEnv</code>: disable this to avoid passing in this parent process's\nenvironment variables to the subprocess</li>\n</ul>\n<p dir=\"auto\">Note that redirecting <code>stdout</code>/<code>stderr</code> elsewhere means that the respective\n<code>CommandResult#out</code>/<code>CommandResult#err</code> values will be empty.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val res = os.proc('ls, wd/&quot;folder2&quot;).call()\n\nres.exitCode ==&gt; 0\n\nres.out.string ==&gt;\n  &quot;&quot;&quot;nestedA\n    |nestedB\n    |&quot;&quot;&quot;.stripMargin\n\nres.out.trim ==&gt;\n  &quot;&quot;&quot;nestedA\n    |nestedB&quot;&quot;&quot;.stripMargin\n\nres.out.lines ==&gt; Seq(\n  &quot;nestedA&quot;,\n  &quot;nestedB&quot;\n)\n\nres.out.bytes\n\n\n// Non-zero exit codes throw an exception by default\nval thrown = intercept[os.SubprocessException]{\n  os.proc('ls, &quot;doesnt-exist&quot;).call(cwd = wd)\n}\n\nassert(thrown.result.exitCode != 0)\n\n// Though you can avoid throwing by setting `check = false`\nval fail = os.proc('ls, &quot;doesnt-exist&quot;).call(cwd = wd, check = false)\n\nassert(fail.exitCode != 0)\n\n\nfail.out.string ==&gt; &quot;&quot;\n\nassert(fail.err.string.contains(&quot;No such file or directory&quot;))\n\n// You can pass in data to a subprocess' stdin\nval hash = os.proc(&quot;shasum&quot;, &quot;-a&quot;, &quot;256&quot;).call(stdin = &quot;Hello World&quot;)\nhash.out.trim ==&gt; &quot;a591a6d40bf420404a011733cfb7b190d62c65bf0bcda32b57b277d9ad9f146e  -&quot;\n\n// Taking input from a file and directing output to another file\nos.proc(&quot;base64&quot;).call(stdin = wd / &quot;File.txt&quot;, stdout = wd / &quot;File.txt.b64&quot;)\n\nos.read(wd / &quot;File.txt.b64&quot;) ==&gt; &quot;SSBhbSBjb3c=&quot;\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">res</span> <span class=\"pl-k\">=</span> os.proc(<span class=\"pl-c1\">'ls</span>, wd<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder2<span class=\"pl-pds\">\"</span></span>).call()\n\nres.exitCode <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">0</span>\n\nres.out.string <span class=\"pl-k\">==&gt;</span>\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>nestedA</span>\n<span class=\"pl-s\">    |nestedB</span>\n<span class=\"pl-s\">    |<span class=\"pl-pds\">\"\"\"</span></span>.stripMargin\n\nres.out.trim <span class=\"pl-k\">==&gt;</span>\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>nestedA</span>\n<span class=\"pl-s\">    |nestedB<span class=\"pl-pds\">\"\"\"</span></span>.stripMargin\n\nres.out.lines <span class=\"pl-k\">==&gt;</span> <span class=\"pl-en\">Seq</span>(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedA<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nestedB<span class=\"pl-pds\">\"</span></span>\n)\n\nres.out.bytes\n\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Non-zero exit codes throw an exception by default</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">thrown</span> <span class=\"pl-k\">=</span> intercept[os.<span class=\"pl-en\">SubprocessException</span>]{\n  os.proc(<span class=\"pl-c1\">'ls</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>doesnt-exist<span class=\"pl-pds\">\"</span></span>).call(cwd <span class=\"pl-k\">=</span> wd)\n}\n\nassert(thrown.result.exitCode <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">0</span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Though you can avoid throwing by setting `check = false`</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">fail</span> <span class=\"pl-k\">=</span> os.proc(<span class=\"pl-c1\">'ls</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>doesnt-exist<span class=\"pl-pds\">\"</span></span>).call(cwd <span class=\"pl-k\">=</span> wd, check <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>)\n\nassert(fail.exitCode <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">0</span>)\n\n\nfail.out.string <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>\n\nassert(fail.err.string.contains(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>No such file or directory<span class=\"pl-pds\">\"</span></span>))\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> You can pass in data to a subprocess' stdin</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">hash</span> <span class=\"pl-k\">=</span> os.proc(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>shasum<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-a<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>256<span class=\"pl-pds\">\"</span></span>).call(stdin <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Hello World<span class=\"pl-pds\">\"</span></span>)\nhash.out.trim <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a591a6d40bf420404a011733cfb7b190d62c65bf0bcda32b57b277d9ad9f146e  -<span class=\"pl-pds\">\"</span></span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Taking input from a file and directing output to another file</span>\nos.proc(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>base64<span class=\"pl-pds\">\"</span></span>).call(stdin <span class=\"pl-k\">=</span> wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt<span class=\"pl-pds\">\"</span></span>, stdout <span class=\"pl-k\">=</span> wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt.b64<span class=\"pl-pds\">\"</span></span>)\n\nos.read(wd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File.txt.b64<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>SSBhbSBjb3c=<span class=\"pl-pds\">\"</span></span></pre></div>\n<p dir=\"auto\">If you want to spawn an interactive subprocess, such as <code>vim</code>, <code>less</code>, or a\n<code>python</code> shell, set all of <code>stdin</code>/<code>stdout</code>/<code>stderr</code> to <code>os.Inherit</code>:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.proc(&quot;vim&quot;).call(stdin = os.Inherit, stdout = os.Inherit, stderr = os.Inherit)\"><pre>os.proc(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>vim<span class=\"pl-pds\">\"</span></span>).call(stdin <span class=\"pl-k\">=</span> os.<span class=\"pl-en\">Inherit</span>, stdout <span class=\"pl-k\">=</span> os.<span class=\"pl-en\">Inherit</span>, stderr <span class=\"pl-k\">=</span> os.<span class=\"pl-en\">Inherit</span>)</pre></div>\n<p dir=\"auto\">Note that by customizing <code>stdout</code> and <code>stderr</code>, you can use the results\nof <code>os.proc.call</code> in a streaming fashion, either on groups of bytes:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"var lineCount = 1\nos.proc('find, &quot;.&quot;).call(\n  cwd = wd,\n  stdout = os.ProcessOutput(\n    (buf, len) =&gt; lineCount += buf.slice(0, len).count(_ == '\\n')\n  ),\n)\"><pre><span class=\"pl-k\">var</span> <span class=\"pl-smi\">lineCount</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>\nos.proc(<span class=\"pl-c1\">'find</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.<span class=\"pl-pds\">\"</span></span>).call(\n  cwd <span class=\"pl-k\">=</span> wd,\n  stdout <span class=\"pl-k\">=</span> os.<span class=\"pl-en\">ProcessOutput</span>(\n    (buf, len) <span class=\"pl-k\">=&gt;</span> lineCount <span class=\"pl-k\">+</span><span class=\"pl-k\">=</span> buf.slice(<span class=\"pl-c1\">0</span>, len).count(_ <span class=\"pl-k\">==</span> <span class=\"pl-s\">'<span class=\"pl-cce\">\\n</span>'</span>)\n  ),\n)</pre></div>\n<p dir=\"auto\">Or on lines of output:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"lineCount ==&gt; 22\nvar lineCount = 1\nos.proc('find, &quot;.&quot;).call(\n  cwd = wd,\n  stdout = os.ProcessOutput.Readlines(\n    line =&gt; lineCount += 1\n  ),\n)\nlineCount ==&gt; 22\"><pre>lineCount <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">22</span>\n<span class=\"pl-k\">var</span> <span class=\"pl-smi\">lineCount</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>\nos.proc(<span class=\"pl-c1\">'find</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.<span class=\"pl-pds\">\"</span></span>).call(\n  cwd <span class=\"pl-k\">=</span> wd,\n  stdout <span class=\"pl-k\">=</span> os.<span class=\"pl-en\">ProcessOutput</span>.<span class=\"pl-en\">Readlines</span>(\n    line <span class=\"pl-k\">=&gt;</span> lineCount <span class=\"pl-k\">+</span><span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>\n  ),\n)\nlineCount <span class=\"pl-k\">==&gt;</span> <span class=\"pl-c1\">22</span></pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-osprocspawn\" class=\"anchor\" aria-hidden=\"true\" href=\"#osprocspawn\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.proc.spawn</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.proc(command: os.Shellable*)\n  .spawn(cwd: Path = null,\n         env: Map[String, String] = null,\n         stdin: os.ProcessInput = os.Pipe,\n         stdout: os.ProcessOutput = os.Pipe,\n         stderr: os.ProcessOutput = os.Pipe,\n         mergeErrIntoOut: Boolean = false,\n         propagateEnv: Boolean = true): os.SubProcess\"><pre>os.proc(<span class=\"pl-v\">command</span>: os.<span class=\"pl-en\">Shellable</span><span class=\"pl-k\">*</span>)\n  .spawn(<span class=\"pl-v\">cwd</span>: <span class=\"pl-en\">Path</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>,\n         <span class=\"pl-v\">env</span>: <span class=\"pl-en\">Map</span>[<span class=\"pl-en\">String</span>, <span class=\"pl-en\">String</span>] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>,\n         <span class=\"pl-v\">stdin</span>: os.<span class=\"pl-en\">ProcessInput</span> <span class=\"pl-k\">=</span> os.<span class=\"pl-en\">Pipe</span>,\n         <span class=\"pl-v\">stdout</span>: os.<span class=\"pl-en\">ProcessOutput</span> <span class=\"pl-k\">=</span> os.<span class=\"pl-en\">Pipe</span>,\n         <span class=\"pl-v\">stderr</span>: os.<span class=\"pl-en\">ProcessOutput</span> <span class=\"pl-k\">=</span> os.<span class=\"pl-en\">Pipe</span>,\n         <span class=\"pl-v\">mergeErrIntoOut</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n         <span class=\"pl-v\">propagateEnv</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>)<span class=\"pl-k\">:</span> os.<span class=\"pl-en\">SubProcess</span></pre></div>\n<p dir=\"auto\">The most flexible of the <code>os.proc</code> calls, <code>os.proc.spawn</code> simply configures and\nstarts a subprocess, and returns it as a <code>os.SubProcess</code>. <code>os.SubProcess</code> is a\nsimple wrapper around <code>java.lang.Process</code>, which provides <code>stdin</code>, <code>stdout</code>, and\n<code>stderr</code> streams for you to interact with however you like. e.g. You can sending\ncommands to it's <code>stdin</code> and reading from it's <code>stdout</code>.</p>\n<p dir=\"auto\">To implement pipes, you can spawn a process, take it's stdout, and pass it\nas the stdin of a second spawned process.</p>\n<p dir=\"auto\">Note that if you provide <code>ProcessOutput</code> callbacks to <code>stdout</code>/<code>stderr</code>, the\ncalls to those callbacks take place on newly spawned threads that execute in\nparallel with the main thread. Thus make sure any data processing you do in\nthose callbacks is thread safe! For simpler cases, it may be easier to use\n<a href=\"#osprocstream\">os.proc.stream</a> which triggers it's <code>onOut</code>/<code>onErr</code> callbacks\nall on the calling thread, avoiding needing to think about multithreading and\nconcurrency issues.</p>\n<p dir=\"auto\"><code>stdin</code>, <code>stdout</code> and <code>stderr</code> are <code>java.lang.OutputStream</code>s and\n<code>java.lang.InputStream</code>s enhanced with the <code>.writeLine(s: String)</code>/<code>.readLine()</code>\nmethods for easy reading and writing of character and line-based data.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Start a long-lived python process which you can communicate with\nval sub = os.proc(&quot;python&quot;, &quot;-u&quot;, &quot;-c&quot;, &quot;while True: print(eval(raw_input()))&quot;)\n            .spawn(cwd = wd)\n\n// Sending some text to the subprocess\nsub.stdin.write(&quot;1 + 2&quot;)\nsub.stdin.writeLine(&quot;+ 4&quot;)\nsub.stdin.flush()\nsub.stdout.readLine() ==&gt; &quot;7&quot;\n\nsub.stdin.write(&quot;'1' + '2'&quot;)\nsub.stdin.writeLine(&quot;+ '4'&quot;)\nsub.stdin.flush()\nsub.stdout.readLine() ==&gt; &quot;124&quot;\n\n// Sending some bytes to the subprocess\nsub.stdin.write(&quot;1 * 2&quot;.getBytes)\nsub.stdin.write(&quot;* 4\\n&quot;.getBytes)\nsub.stdin.flush()\nsub.stdout.read() ==&gt; '8'.toByte\n\nsub.destroy()\n\n// You can chain multiple subprocess' stdin/stdout together\nval curl = os.proc(&quot;curl&quot;, &quot;-L&quot; , &quot;https://git.io/fpfTs&quot;).spawn(stderr = os.Inherit)\nval gzip = os.proc(&quot;gzip&quot;, &quot;-n&quot;).spawn(stdin = curl.stdout)\nval sha = os.proc(&quot;shasum&quot;, &quot;-a&quot;, &quot;256&quot;).spawn(stdin = gzip.stdout)\nsha.stdout.trim ==&gt; &quot;acc142175fa520a1cb2be5b97cbbe9bea092e8bba3fe2e95afa645615908229e  -&quot;\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> Start a long-lived python process which you can communicate with</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">sub</span> <span class=\"pl-k\">=</span> os.proc(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>python<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-u<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-c<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>while True: print(eval(raw_input()))<span class=\"pl-pds\">\"</span></span>)\n            .spawn(cwd <span class=\"pl-k\">=</span> wd)\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Sending some text to the subprocess</span>\nsub.stdin.write(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1 + 2<span class=\"pl-pds\">\"</span></span>)\nsub.stdin.writeLine(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>+ 4<span class=\"pl-pds\">\"</span></span>)\nsub.stdin.flush()\nsub.stdout.readLine() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>7<span class=\"pl-pds\">\"</span></span>\n\nsub.stdin.write(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>'1' + '2'<span class=\"pl-pds\">\"</span></span>)\nsub.stdin.writeLine(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>+ '4'<span class=\"pl-pds\">\"</span></span>)\nsub.stdin.flush()\nsub.stdout.readLine() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>124<span class=\"pl-pds\">\"</span></span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Sending some bytes to the subprocess</span>\nsub.stdin.write(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1 * 2<span class=\"pl-pds\">\"</span></span>.getBytes)\nsub.stdin.write(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>* 4<span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">\"</span></span>.getBytes)\nsub.stdin.flush()\nsub.stdout.read() <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\">'8'</span>.toByte\n\nsub.destroy()\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> You can chain multiple subprocess' stdin/stdout together</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">curl</span> <span class=\"pl-k\">=</span> os.proc(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>curl<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-L<span class=\"pl-pds\">\"</span></span> , <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://git.io/fpfTs<span class=\"pl-pds\">\"</span></span>).spawn(stderr <span class=\"pl-k\">=</span> os.<span class=\"pl-en\">Inherit</span>)\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">gzip</span> <span class=\"pl-k\">=</span> os.proc(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>gzip<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-n<span class=\"pl-pds\">\"</span></span>).spawn(stdin <span class=\"pl-k\">=</span> curl.stdout)\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">sha</span> <span class=\"pl-k\">=</span> os.proc(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>shasum<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-a<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>256<span class=\"pl-pds\">\"</span></span>).spawn(stdin <span class=\"pl-k\">=</span> gzip.stdout)\nsha.stdout.trim <span class=\"pl-k\">==&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>acc142175fa520a1cb2be5b97cbbe9bea092e8bba3fe2e95afa645615908229e  -<span class=\"pl-pds\">\"</span></span></pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-watching-for-changes\" class=\"anchor\" aria-hidden=\"true\" href=\"#watching-for-changes\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Watching for Changes</h3>\n<h4 dir=\"auto\"><a id=\"user-content-oswatchwatch\" class=\"anchor\" aria-hidden=\"true\" href=\"#oswatchwatch\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.watch.watch</h4>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.watch.watch(roots: Seq[os.Path], onEvent: Set[os.Path] =&gt; Unit): Unit\"><pre>os.watch.watch(<span class=\"pl-v\">roots</span>: <span class=\"pl-en\">Seq</span>[os.<span class=\"pl-en\">Path</span>], <span class=\"pl-v\">onEvent</span>: <span class=\"pl-en\">Set</span>[os.<span class=\"pl-en\">Path</span>] <span class=\"pl-k\">=&gt;</span> <span class=\"pl-en\">Unit</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span></pre></div>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// SBT\n&quot;com.lihaoyi&quot; %% &quot;os-lib-watch&quot; % &quot;0.4.2&quot;\n// Mill\nivy&quot;com.lihaoyi::os-lib-watch:0.4.2&quot;\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> SBT</span>\n<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.lihaoyi<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>os-lib-watch<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0.4.2<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Mill</span>\n<span class=\"pl-k\">ivy</span><span class=\"pl-s\">\"</span><span class=\"pl-s\">com.lihaoyi::os-lib-watch:0.4.2</span><span class=\"pl-s\">\"</span></pre></div>\n<p dir=\"auto\">Efficiently watches the given <code>roots</code> folders for changes. Any time the\nfilesystem is modified within those folders, the <code>onEvent</code> callback is\ncalled with the paths to the changed files or folders. Note that\n<code>os.watch.watch</code> is under a different artifact than the rest of the\n<code>os.*</code> functions, and you need to add a separate dependency to\n<code>os-lib-watch</code> in order to pull it in.</p>\n<p dir=\"auto\">Once the call to <code>watch</code> returns, <code>onEvent</code> is guaranteed to receive a\nan event containing the path for:</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Every file or folder that gets created, deleted, updated or moved\nwithin the watched folders</p>\n</li>\n<li>\n<p dir=\"auto\">For copied or moved folders, the path of the new folder as well as\nevery file or folder within it.</p>\n</li>\n<li>\n<p dir=\"auto\">For deleted or moved folders, the root folder which was deleted/moved,\nbut <em>without</em> the paths of every file that was within it at the\noriginal location</p>\n</li>\n</ul>\n<p dir=\"auto\">Note that <code>watch</code> does not provide any additional information about the\nchanges happening within the watched roots folder, apart from the path\nat which the change happened. It is up to the <code>onEvent</code> handler to query\nthe filesystem and figure out what happened, and what it wants to do.</p>\n<p dir=\"auto\">Here is an example of use from the Ammonite REPL:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@ import $ivy.`com.lihaoyi::os-lib-watch:0.4.2`\n\n@ os.watch.watch(Seq(os.pwd / &quot;out&quot;), paths =&gt; println(&quot;paths changed: &quot; + paths.mkString(&quot;, &quot;)))\n\n@ os.write(os.pwd / &quot;out&quot; / &quot;i am&quot;, &quot;cow&quot;)\n\npaths changed: /Users/lihaoyi/Github/Ammonite/out/i am\n\n@ os.move(os.pwd / &quot;out&quot;/ &quot;i am&quot;, os.pwd / &quot;out&quot; / &quot;hear me&quot;)\n\npaths changed: /Users/lihaoyi/Github/Ammonite/out/i am,/Users/lihaoyi/Github/Ammonite/out/hear me\n\n@ os.remove.all(os.pwd / &quot;out&quot; / &quot;version&quot;)\n\npaths changed: /Users/lihaoyi/Github/Ammonite/out/version/log,/Users/lihaoyi/Github/Ammonite/out/version/meta.json,/Users/lihaoyi/Github/Ammonite/out/version\"><pre><span class=\"pl-k\">@</span> <span class=\"pl-k\">import</span> <span class=\"pl-en\">$ivy</span>.<span class=\"pl-en\">`com.lihaoyi::os-lib-watch:0.4.2`</span>\n\n<span class=\"pl-k\">@</span> os.watch.watch(<span class=\"pl-en\">Seq</span>(os.pwd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>out<span class=\"pl-pds\">\"</span></span>), paths <span class=\"pl-k\">=&gt;</span> println(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>paths changed: <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> paths.mkString(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>, <span class=\"pl-pds\">\"</span></span>)))\n\n<span class=\"pl-k\">@</span> os.write(os.pwd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>out<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>i am<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cow<span class=\"pl-pds\">\"</span></span>)\n\npaths <span class=\"pl-v\">changed</span>: <span class=\"pl-k\">/</span><span class=\"pl-en\">Users</span><span class=\"pl-k\">/</span>lihaoyi<span class=\"pl-k\">/</span><span class=\"pl-en\">Github</span><span class=\"pl-k\">/</span><span class=\"pl-en\">Ammonite</span><span class=\"pl-k\">/</span>out<span class=\"pl-k\">/</span>i am\n\n<span class=\"pl-k\">@</span> os.move(os.pwd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>out<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>i am<span class=\"pl-pds\">\"</span></span>, os.pwd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>out<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hear me<span class=\"pl-pds\">\"</span></span>)\n\npaths <span class=\"pl-v\">changed</span>: <span class=\"pl-k\">/</span><span class=\"pl-en\">Users</span><span class=\"pl-k\">/</span>lihaoyi<span class=\"pl-k\">/</span><span class=\"pl-en\">Github</span><span class=\"pl-k\">/</span><span class=\"pl-en\">Ammonite</span><span class=\"pl-k\">/</span>out<span class=\"pl-k\">/</span>i am,<span class=\"pl-k\">/</span><span class=\"pl-en\">Users</span><span class=\"pl-k\">/</span>lihaoyi<span class=\"pl-k\">/</span><span class=\"pl-en\">Github</span><span class=\"pl-k\">/</span><span class=\"pl-en\">Ammonite</span><span class=\"pl-k\">/</span>out<span class=\"pl-k\">/</span>hear me\n\n<span class=\"pl-k\">@</span> os.remove.all(os.pwd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>out<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>version<span class=\"pl-pds\">\"</span></span>)\n\npaths <span class=\"pl-v\">changed</span>: <span class=\"pl-k\">/</span><span class=\"pl-en\">Users</span><span class=\"pl-k\">/</span>lihaoyi<span class=\"pl-k\">/</span><span class=\"pl-en\">Github</span><span class=\"pl-k\">/</span><span class=\"pl-en\">Ammonite</span><span class=\"pl-k\">/</span>out<span class=\"pl-k\">/</span>version<span class=\"pl-k\">/</span>log,<span class=\"pl-k\">/</span><span class=\"pl-en\">Users</span><span class=\"pl-k\">/</span>lihaoyi<span class=\"pl-k\">/</span><span class=\"pl-en\">Github</span><span class=\"pl-k\">/</span><span class=\"pl-en\">Ammonite</span><span class=\"pl-k\">/</span>out<span class=\"pl-k\">/</span>version<span class=\"pl-k\">/</span>meta.json,<span class=\"pl-k\">/</span><span class=\"pl-en\">Users</span><span class=\"pl-k\">/</span>lihaoyi<span class=\"pl-k\">/</span><span class=\"pl-en\">Github</span><span class=\"pl-k\">/</span><span class=\"pl-en\">Ammonite</span><span class=\"pl-k\">/</span>out<span class=\"pl-k\">/</span>version</pre></div>\n<p dir=\"auto\"><code>watch</code> currently only supports Linux and Mac-OSX, and not Windows.</p>\n<h2 dir=\"auto\"><a id=\"user-content-data-types\" class=\"anchor\" aria-hidden=\"true\" href=\"#data-types\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Data Types</h2>\n<h3 dir=\"auto\"><a id=\"user-content-ospath\" class=\"anchor\" aria-hidden=\"true\" href=\"#ospath\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.Path</h3>\n<p dir=\"auto\">OS-Lib uses strongly-typed data-structures to represent filesystem paths. The\ntwo basic versions are:</p>\n<ul dir=\"auto\">\n<li><a href=\"#ospath\">os.Path</a>: an absolute path, starting from the root</li>\n<li><a href=\"#osrelpath\">os.RelPath</a>: a relative path, not rooted anywhere</li>\n<li><a href=\"#ossubpath\">os.SubPath</a>: a sub path, without any <code>..</code> segments, not\nrooted anywhere</li>\n</ul>\n<p dir=\"auto\">Generally, almost all commands take absolute <code>os.Path</code>s. These are\nbasically <code>java.nio.file.Path</code>s with additional guarantees:</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code>os.Path</code>s are always absolute. Relative paths are a separate type\n<a href=\"#osrelpath\">os.RelPath</a></p>\n</li>\n<li>\n<p dir=\"auto\"><code>os.Path</code>s are always canonical. You will never find <code>.</code> or <code>..</code> segments in\nthem, and never need to worry about calling <code>.normalize</code> before operations.</p>\n</li>\n</ul>\n<p dir=\"auto\">Absolute paths can be created in a few ways:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Get the process' Current Working Directory. As a convention\n// the directory that &quot;this&quot; code cares about (which may differ\n// from the pwd) is called `wd`\nval wd = os.pwd\n\n// A path nested inside `wd`\nwd/'folder/'file\n\n// A path starting from the root\nos.root/'folder/'file\n\n// A path with spaces or other special characters\nwd/&quot;My Folder&quot;/&quot;My File.txt&quot;\n\n// Up one level from the wd\nwd/os.up\n\n// Up two levels from the wd\nwd/os.up/os.up\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> Get the process' Current Working Directory. As a convention</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> the directory that \"this\" code cares about (which may differ</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> from the pwd) is called `wd`</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">wd</span> <span class=\"pl-k\">=</span> os.pwd\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> A path nested inside `wd`</span>\nwd<span class=\"pl-k\">/</span><span class=\"pl-c1\">'folder</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'file</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> A path starting from the root</span>\nos.root<span class=\"pl-k\">/</span><span class=\"pl-c1\">'folder</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'file</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> A path with spaces or other special characters</span>\nwd<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>My Folder<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>My File.txt<span class=\"pl-pds\">\"</span></span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Up one level from the wd</span>\nwd<span class=\"pl-k\">/</span>os.up\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Up two levels from the wd</span>\nwd<span class=\"pl-k\">/</span>os.up<span class=\"pl-k\">/</span>os.up</pre></div>\n<p dir=\"auto\">Note that there are no in-built operations to change the <code>os.pwd</code>. In general\nyou should not need to: simply defining a new path, e.g.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val target = os.pwd/'target\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">target</span> <span class=\"pl-k\">=</span> os.pwd<span class=\"pl-k\">/</span><span class=\"pl-c1\">'target</span></pre></div>\n<p dir=\"auto\">Should be sufficient for most needs.</p>\n<p dir=\"auto\">Above, we made use of the <code>os.pwd</code> built-in path. There are a number of Paths\nbuilt into OS-Lib:</p>\n<ul dir=\"auto\">\n<li><code>os.pwd</code>: The current working directory of the process. This can't be changed\nin Java, so if you need another path to work with the convention is to define\na <code>os.wd</code> variable.</li>\n<li><code>os.root</code>: The root of the filesystem.</li>\n<li><code>os.home</code>: The home directory of the current user.</li>\n<li><code>os.temp()</code>/<code>os.temp.dir()</code>: Creates a temporary file/folder and returns the\npath.</li>\n</ul>\n<h4 dir=\"auto\"><a id=\"user-content-osrelpath\" class=\"anchor\" aria-hidden=\"true\" href=\"#osrelpath\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.RelPath</h4>\n<p dir=\"auto\"><code>os.RelPath</code>s represent relative paths. These are basically defined as:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"class RelPath private[ops] (segments0: Array[String], val ups: Int)\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-en\">RelPath</span> <span class=\"pl-k\">private</span>[ops] (<span class=\"pl-v\">segments0</span>: <span class=\"pl-en\">Array</span>[<span class=\"pl-en\">String</span>], <span class=\"pl-k\">val</span> <span class=\"pl-smi\">ups</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Int</span>)</pre></div>\n<p dir=\"auto\">The same data structure as Paths, except that they can represent a number of ups\nbefore the relative path is applied. They can be created in the following ways:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// The path &quot;folder/file&quot;\nval rel1 = os.rel/'folder/'file\nval rel2 = os.rel/&quot;folder&quot;/&quot;file&quot;\n\n// The path &quot;file&quot;\nval rel3 = os.rel/'file\n\n// The relative difference between two paths\nval target = os.pwd/'target/'file\nassert((target.relativeTo(os.pwd)) == os.rel/'target/'file)\n\n// `up`s get resolved automatically\nval minus = os.pwd.relativeTo(target)\nval ups = os.up/os.up\nassert(minus == ups)\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> The path \"folder/file\"</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">rel1</span> <span class=\"pl-k\">=</span> os.rel<span class=\"pl-k\">/</span><span class=\"pl-c1\">'folder</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'file</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">rel2</span> <span class=\"pl-k\">=</span> os.rel<span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file<span class=\"pl-pds\">\"</span></span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> The path \"file\"</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">rel3</span> <span class=\"pl-k\">=</span> os.rel<span class=\"pl-k\">/</span><span class=\"pl-c1\">'file</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> The relative difference between two paths</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">target</span> <span class=\"pl-k\">=</span> os.pwd<span class=\"pl-k\">/</span><span class=\"pl-c1\">'target</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'file</span>\nassert((target.relativeTo(os.pwd)) <span class=\"pl-k\">==</span> os.rel<span class=\"pl-k\">/</span><span class=\"pl-c1\">'target</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'file</span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> `up`s get resolved automatically</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">minus</span> <span class=\"pl-k\">=</span> os.pwd.relativeTo(target)\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">ups</span> <span class=\"pl-k\">=</span> os.up<span class=\"pl-k\">/</span>os.up\nassert(minus <span class=\"pl-k\">==</span> ups)</pre></div>\n<p dir=\"auto\">In general, very few APIs take relative paths. Their main purpose is to be\ncombined with absolute paths in order to create new absolute paths. e.g.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val target = os.pwd/'target/'file\nval difference = target.relativeTo(os.pwd)\nval newBase = os.root/'code/'server\nassert(newBase/difference == os.root/'code/'server/'target/'file)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">target</span> <span class=\"pl-k\">=</span> os.pwd<span class=\"pl-k\">/</span><span class=\"pl-c1\">'target</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'file</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">difference</span> <span class=\"pl-k\">=</span> target.relativeTo(os.pwd)\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">newBase</span> <span class=\"pl-k\">=</span> os.root<span class=\"pl-k\">/</span><span class=\"pl-c1\">'code</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'server</span>\nassert(newBase<span class=\"pl-k\">/</span>difference <span class=\"pl-k\">==</span> os.root<span class=\"pl-k\">/</span><span class=\"pl-c1\">'code</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'server</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'target</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'file</span>)</pre></div>\n<p dir=\"auto\"><code>os.up</code> is a relative path that comes in-built:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val target = os.root/'target/'file\nassert(target/os.up == os.root/'target)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">target</span> <span class=\"pl-k\">=</span> os.root<span class=\"pl-k\">/</span><span class=\"pl-c1\">'target</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'file</span>\nassert(target<span class=\"pl-k\">/</span>os.up <span class=\"pl-k\">==</span> os.root<span class=\"pl-k\">/</span><span class=\"pl-c1\">'target</span>)</pre></div>\n<p dir=\"auto\">Note that all paths, both relative and absolute, are always expressed in a\ncanonical manner:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"assert((os.root/'folder/'file/up).toString == &quot;/folder&quot;)\n// not &quot;/folder/file/..&quot;\n\nassert(('folder/'file/up).toString == &quot;folder&quot;)\n// not &quot;folder/file/..&quot;\"><pre>assert((os.root<span class=\"pl-k\">/</span><span class=\"pl-c1\">'folder</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'file</span><span class=\"pl-k\">/</span>up).toString <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/folder<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> not \"/folder/file/..\"</span>\n\nassert((<span class=\"pl-c1\">'folder</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'file</span><span class=\"pl-k\">/</span>up).toString <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>folder<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> not \"folder/file/..\"</span></pre></div>\n<p dir=\"auto\">So you don't need to worry about canonicalizing your paths before comparing them\nfor equality or otherwise manipulating them.</p>\n<h4 dir=\"auto\"><a id=\"user-content-ossubpath\" class=\"anchor\" aria-hidden=\"true\" href=\"#ossubpath\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.SubPath</h4>\n<p dir=\"auto\"><code>os.SubPath</code>s represent relative paths without any <code>..</code> segments. These\nare basically defined as:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"class SubPath private[ops] (segments0: Array[String])\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-en\">SubPath</span> <span class=\"pl-k\">private</span>[ops] (<span class=\"pl-v\">segments0</span>: <span class=\"pl-en\">Array</span>[<span class=\"pl-en\">String</span>])</pre></div>\n<p dir=\"auto\">They can be created in the following ways:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// The path &quot;folder/file&quot;\nval sub1 = os.sub/'folder/'file\nval sub2 = os.sub/'folder/'file\n\n// The relative difference between two paths\nval target = os.pwd/'out/'scratch/'file\nassert((target subRelativeTo os.pwd) == os.sub/'out/'scratch/'file)\n\n// Converting os.RelPath to os.SubPath\nval rel3 = os.rel/'folder/'file\nval sub3 = rel3.asSubPath\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> The path \"folder/file\"</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">sub1</span> <span class=\"pl-k\">=</span> os.sub<span class=\"pl-k\">/</span><span class=\"pl-c1\">'folder</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'file</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">sub2</span> <span class=\"pl-k\">=</span> os.sub<span class=\"pl-k\">/</span><span class=\"pl-c1\">'folder</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'file</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> The relative difference between two paths</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">target</span> <span class=\"pl-k\">=</span> os.pwd<span class=\"pl-k\">/</span><span class=\"pl-c1\">'out</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'scratch</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'file</span>\nassert((target subRelativeTo os.pwd) <span class=\"pl-k\">==</span> os.sub<span class=\"pl-k\">/</span><span class=\"pl-c1\">'out</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'scratch</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'file</span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Converting os.RelPath to os.SubPath</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">rel3</span> <span class=\"pl-k\">=</span> os.rel<span class=\"pl-k\">/</span><span class=\"pl-c1\">'folder</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'file</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">sub3</span> <span class=\"pl-k\">=</span> rel3.asSubPath</pre></div>\n<p dir=\"auto\"><code>os.SubPath</code>s are useful for representing paths within a particular\nfolder or directory. You can combine them with absolute <code>os.Path</code>s to\nresolve paths within them, without needing to worry about <a href=\"https://en.wikipedia.org/wiki/Directory_traversal_attack\" rel=\"nofollow\">Directory\nTraversal Attacks</a>\ndu to accidentally accessing paths outside the destination folder.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val target = os.pwd/'target/'file\nval difference = target.relativeTo(os.pwd)\nval newBase = os.root/'code/'server\nassert(newBase/difference == os.root/'code/'server/'target/'file)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">target</span> <span class=\"pl-k\">=</span> os.pwd<span class=\"pl-k\">/</span><span class=\"pl-c1\">'target</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'file</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">difference</span> <span class=\"pl-k\">=</span> target.relativeTo(os.pwd)\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">newBase</span> <span class=\"pl-k\">=</span> os.root<span class=\"pl-k\">/</span><span class=\"pl-c1\">'code</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'server</span>\nassert(newBase<span class=\"pl-k\">/</span>difference <span class=\"pl-k\">==</span> os.root<span class=\"pl-k\">/</span><span class=\"pl-c1\">'code</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'server</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'target</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'file</span>)</pre></div>\n<p dir=\"auto\">Attempting to construct an <code>os.SubPath</code> with <code>..</code> segments results in an\nexception being thrown:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val target = os.pwd/'out/'scratch/\n\n// `up`s are not allowed in sub paths\nintercept[Exception](os.pwd subRelativeTo target)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">target</span> <span class=\"pl-k\">=</span> os.pwd<span class=\"pl-k\">/</span><span class=\"pl-c1\">'out</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'scratch</span><span class=\"pl-k\">/</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> `up`s are not allowed in sub paths</span>\nintercept[<span class=\"pl-en\">Exception</span>](os.pwd subRelativeTo target)</pre></div>\n<p dir=\"auto\">Like <code>os.Path</code>s and <code>os.RelPath</code>, <code>os.SubPath</code>s are always canonicalized\nand can be compared for equality without worrying about different\nrepresentations.</p>\n<h4 dir=\"auto\"><a id=\"user-content-path-operations\" class=\"anchor\" aria-hidden=\"true\" href=\"#path-operations\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Path Operations</h4>\n<p dir=\"auto\">OS-Lib's paths are transparent data-structures, and you can always access the\nsegments and ups directly. Nevertheless, OS-Lib defines a number of useful\noperations that handle the common cases of dealing with these paths:</p>\n<p dir=\"auto\">In this definition, ThisType represents the same type as the current path; e.g.\na Path's / returns a Path while a RelPath's / returns a RelPath. Similarly, you\ncan only compare or subtract paths of the same type.</p>\n<p dir=\"auto\">Apart from <a href=\"#osrelpath\">os.RelPath</a>s themselves, a number of other data\nstructures are convertible into <a href=\"#osrelpath\">os.RelPath</a>s when spliced into a\npath using <code>/</code>:</p>\n<ul dir=\"auto\">\n<li><code>String</code>s</li>\n<li><code>Symbol</code>s</li>\n<li><code>Array[T]</code>s where <code>T</code> is convertible into a RelPath</li>\n<li><code>Seq[T]</code>s where <code>T</code> is convertible into a RelPath</li>\n</ul>\n<h4 dir=\"auto\"><a id=\"user-content-constructing-paths\" class=\"anchor\" aria-hidden=\"true\" href=\"#constructing-paths\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Constructing Paths</h4>\n<p dir=\"auto\">Apart from built-ins like <code>os.pwd</code> or <code>os.root</code> or <code>os.home</code>, you can also\nconstruct Paths from <code>String</code>s, <code>java.io.File</code>s or <code>java.nio.file.Path</code>s:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val relStr = &quot;hello/cow/world/..&quot; val absStr = &quot;/hello/world&quot;\n\nassert(\n  RelPath(relStr) == 'hello/'cow,\n  // Path(...) also allows paths starting with ~,\n  // which is expanded to become your home directory\n  Path(absStr) == root/'hello/'world\n)\n\n// You can also pass in java.io.File and java.nio.file.Path\n// objects instead of Strings when constructing paths\nval relIoFile = new java.io.File(relStr)\nval absNioFile = java.nio.file.Paths.get(absStr)\n\nassert(\n  RelPath(relIoFile) == 'hello/'cow,\n  Path(absNioFile) == root/'hello/'world,\n  Path(relIoFile, root/'base) == root/'base/'hello/'cow\n)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">relStr</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hello/cow/world/..<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">absStr</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/hello/world<span class=\"pl-pds\">\"</span></span>\n\nassert(\n  <span class=\"pl-en\">RelPath</span>(relStr) <span class=\"pl-k\">==</span> <span class=\"pl-c1\">'hello</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'cow</span>,\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> Path(...) also allows paths starting with ~,</span>\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> which is expanded to become your home directory</span>\n  <span class=\"pl-en\">Path</span>(absStr) <span class=\"pl-k\">==</span> root<span class=\"pl-k\">/</span><span class=\"pl-c1\">'hello</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'world</span>\n)\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> You can also pass in java.io.File and java.nio.file.Path</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> objects instead of Strings when constructing paths</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">relIoFile</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> java.io.<span class=\"pl-en\">File</span>(relStr)\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">absNioFile</span> <span class=\"pl-k\">=</span> java.nio.file.<span class=\"pl-en\">Paths</span>.get(absStr)\n\nassert(\n  <span class=\"pl-en\">RelPath</span>(relIoFile) <span class=\"pl-k\">==</span> <span class=\"pl-c1\">'hello</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'cow</span>,\n  <span class=\"pl-en\">Path</span>(absNioFile) <span class=\"pl-k\">==</span> root<span class=\"pl-k\">/</span><span class=\"pl-c1\">'hello</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'world</span>,\n  <span class=\"pl-en\">Path</span>(relIoFile, root<span class=\"pl-k\">/</span><span class=\"pl-c1\">'base</span>) <span class=\"pl-k\">==</span> root<span class=\"pl-k\">/</span><span class=\"pl-c1\">'base</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'hello</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'cow</span>\n)</pre></div>\n<p dir=\"auto\">Trying to construct invalid paths fails with exceptions:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val relStr = &quot;hello/..&quot;\nintercept[java.lang.IllegalArgumentException]{\n  Path(relStr)\n}\n\nval absStr = &quot;/hello&quot;\nintercept[java.lang.IllegalArgumentException]{\n  RelPath(absStr)\n}\n\nval tooManyUpsStr = &quot;/hello/../..&quot;\nintercept[PathError.AbsolutePathOutsideRoot.type]{\n  Path(tooManyUpsStr)\n}\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">relStr</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hello/..<span class=\"pl-pds\">\"</span></span>\nintercept[java.lang.<span class=\"pl-en\">IllegalArgumentException</span>]{\n  <span class=\"pl-en\">Path</span>(relStr)\n}\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">absStr</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/hello<span class=\"pl-pds\">\"</span></span>\nintercept[java.lang.<span class=\"pl-en\">IllegalArgumentException</span>]{\n  <span class=\"pl-en\">RelPath</span>(absStr)\n}\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">tooManyUpsStr</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/hello/../..<span class=\"pl-pds\">\"</span></span>\nintercept[<span class=\"pl-en\">PathError</span>.<span class=\"pl-en\">AbsolutePathOutsideRoot</span>.<span class=\"pl-k\">type</span>]{\n  <span class=\"pl-en\">Path</span>(tooManyUpsStr)\n}</pre></div>\n<p dir=\"auto\">As you can see, attempting to parse a relative path with <a href=\"#ospath\">os.Path</a> or\nan absolute path with <a href=\"#osrelpath\">os.RelPath</a> throws an exception. If you're\nuncertain about what kind of path you are getting, you could use <code>BasePath</code> to\nparse it :</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val relStr = &quot;hello/cow/world/..&quot;\nval absStr = &quot;/hello/world&quot;\nassert(\n  FilePath(relStr) == 'hello/'cow,\n  FilePath(absStr) == root/'hello/'world\n)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">relStr</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hello/cow/world/..<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">absStr</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/hello/world<span class=\"pl-pds\">\"</span></span>\nassert(\n  <span class=\"pl-en\">FilePath</span>(relStr) <span class=\"pl-k\">==</span> <span class=\"pl-c1\">'hello</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'cow</span>,\n  <span class=\"pl-en\">FilePath</span>(absStr) <span class=\"pl-k\">==</span> root<span class=\"pl-k\">/</span><span class=\"pl-c1\">'hello</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'world</span>\n)</pre></div>\n<p dir=\"auto\">This converts it into a <code>BasePath</code>, which is either a <a href=\"#ospath\">os.Path</a> or\n<a href=\"#osrelpath\">os.RelPath</a>. It's then up to you to pattern-match on the types and\ndecide what you want to do in each case.</p>\n<p dir=\"auto\">You can also pass in a second argument to <code>Path(..., base)</code>. If the path being\nparsed is a relative path, this base will be used to coerce it into an absolute\npath:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val relStr = &quot;hello/cow/world/..&quot;\nval absStr = &quot;/hello/world&quot;\nval basePath: FilePath = FilePath(relStr)\nassert(\n  os.Path(relStr, os.root/'base) == os.root/'base/'hello/'cow,\n  os.Path(absStr, os.root/'base) == os.root/'hello/'world,\n  os.Path(basePath, os.root/'base) == os.root/'base/'hello/'cow,\n  os.Path(&quot;.&quot;, os.pwd).last != &quot;&quot;\n)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">relStr</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hello/cow/world/..<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">absStr</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/hello/world<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">basePath</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">FilePath</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">FilePath</span>(relStr)\nassert(\n  os.<span class=\"pl-en\">Path</span>(relStr, os.root<span class=\"pl-k\">/</span><span class=\"pl-c1\">'base</span>) <span class=\"pl-k\">==</span> os.root<span class=\"pl-k\">/</span><span class=\"pl-c1\">'base</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'hello</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'cow</span>,\n  os.<span class=\"pl-en\">Path</span>(absStr, os.root<span class=\"pl-k\">/</span><span class=\"pl-c1\">'base</span>) <span class=\"pl-k\">==</span> os.root<span class=\"pl-k\">/</span><span class=\"pl-c1\">'hello</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'world</span>,\n  os.<span class=\"pl-en\">Path</span>(basePath, os.root<span class=\"pl-k\">/</span><span class=\"pl-c1\">'base</span>) <span class=\"pl-k\">==</span> os.root<span class=\"pl-k\">/</span><span class=\"pl-c1\">'base</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'hello</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'cow</span>,\n  os.<span class=\"pl-en\">Path</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.<span class=\"pl-pds\">\"</span></span>, os.pwd).last <span class=\"pl-k\">!=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>\n)</pre></div>\n<p dir=\"auto\">For example, if you wanted the common behavior of converting relative paths to\nabsolute based on your current working directory, you can pass in <code>os.pwd</code> as\nthe second argument to <code>Path(...)</code>. Apart from passing in Strings or\njava.io.Files or java.nio.file.Paths, you can also pass in BasePaths you parsed\nearly as a convenient way of converting it to a absolute path, if it isn't\nalready one.</p>\n<p dir=\"auto\">In general, OS-Lib is very picky about the distinction between relative and\nabsolute paths, and doesn't allow \"automatic\" conversion between them based on\ncurrent-working-directory the same way many other filesystem APIs (Bash, Java,\nPython, ...) do. Even in cases where it's uncertain, e.g. you're taking user\ninput as a String, you have to either handle both possibilities with BasePath or\nexplicitly choose to convert relative paths to absolute using some base.</p>\n<h4 dir=\"auto\"><a id=\"user-content-osresourcepath\" class=\"anchor\" aria-hidden=\"true\" href=\"#osresourcepath\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.ResourcePath</h4>\n<p dir=\"auto\">In addition to manipulating paths on the filesystem, you can also manipulate\n<code>os.ResourcePath</code> in order to read resources off of the Java classpath. By\ndefault, the path used to load resources is absolute, using the\n<code>Thread.currentThread().getContextClassLoader</code>.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val contents = os.read(os.resource/'test/'ammonite/'ops/'folder/&quot;file.txt&quot;)\nassert(contents.contains(&quot;file contents lols&quot;))\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">contents</span> <span class=\"pl-k\">=</span> os.read(os.resource<span class=\"pl-k\">/</span><span class=\"pl-c1\">'test</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'ammonite</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'ops</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'folder</span><span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file.txt<span class=\"pl-pds\">\"</span></span>)\nassert(contents.contains(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file contents lols<span class=\"pl-pds\">\"</span></span>))</pre></div>\n<p dir=\"auto\">You can also pass in a classloader explicitly to the resource call:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val cl = getClass.getClassLoader\nval contents2 = os.read(os.resource(cl)/'test/'ammonite/'ops/'folder/&quot;file.txt&quot;)\nassert(contents2.contains(&quot;file contents lols&quot;))\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">cl</span> <span class=\"pl-k\">=</span> getClass.getClassLoader\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">contents2</span> <span class=\"pl-k\">=</span> os.read(os.resource(cl)<span class=\"pl-k\">/</span><span class=\"pl-c1\">'test</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'ammonite</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'ops</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">'folder</span><span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file.txt<span class=\"pl-pds\">\"</span></span>)\nassert(contents2.contains(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file contents lols<span class=\"pl-pds\">\"</span></span>))</pre></div>\n<p dir=\"auto\">If you want to load resources relative to a particular class, pass in a class\nfor the resource to be relative, or getClass to get something relative to the\ncurrent class.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val cls = classOf[test.os.Testing]\nval contents = os.read(os.resource(cls)/'folder/&quot;file.txt&quot;)\nassert(contents.contains(&quot;file contents lols&quot;))\n\nval contents2 = os.read(os.resource(getClass)/'folder/&quot;file.txt&quot;)\nassert(contents2.contains(&quot;file contents lols&quot;))\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">cls</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">classOf</span>[test.os.<span class=\"pl-en\">Testing</span>]\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">contents</span> <span class=\"pl-k\">=</span> os.read(os.resource(cls)<span class=\"pl-k\">/</span><span class=\"pl-c1\">'folder</span><span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file.txt<span class=\"pl-pds\">\"</span></span>)\nassert(contents.contains(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file contents lols<span class=\"pl-pds\">\"</span></span>))\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">contents2</span> <span class=\"pl-k\">=</span> os.read(os.resource(getClass)<span class=\"pl-k\">/</span><span class=\"pl-c1\">'folder</span><span class=\"pl-k\">/</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file.txt<span class=\"pl-pds\">\"</span></span>)\nassert(contents2.contains(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file contents lols<span class=\"pl-pds\">\"</span></span>))</pre></div>\n<p dir=\"auto\">In both cases, reading resources is performed as if you did not pass a leading\nslash into the <code>getResource(\"foo/bar\")</code> call. In the case of\n<code>ClassLoader#getResource</code>, passing in a leading slash is never valid, and in the\ncase of <code>Class#getResource</code>, passing in a leading slash is equivalent to calling\n<code>getResource</code> on the ClassLoader.</p>\n<p dir=\"auto\">OS-Lib ensures you only use the two valid cases in the API, without a leading\nslash, and not the two cases with a leading slash which are redundant (in the\ncase of <code>Class#getResource</code>, which can be replaced by <code>ClassLoader#getResource</code>)\nor invalid (a leading slash with <code>ClassLoader#getResource</code>)</p>\n<p dir=\"auto\">Note that you can only use <code>os.read</code> from resource paths; you can't write to them or\nperform any other filesystem operations on them, since they're not really files.</p>\n<p dir=\"auto\">Note also that resources belong to classloaders, and you may have multiple\nclassloaders in your application e.g. if you are running in a servlet or REPL.\nMake sure you use the correct classloader (or a class belonging to the correct\nclassloader) to load the resources you want, or else it might not find them.</p>\n<h3 dir=\"auto\"><a id=\"user-content-ossource\" class=\"anchor\" aria-hidden=\"true\" href=\"#ossource\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.Source</h3>\n<p dir=\"auto\">Many operations in OS-Lib operate on <code>os.Source</code>s. These represent values that\ncan provide data which you can then use to write, transmit, etc.</p>\n<p dir=\"auto\">By default, the following types of values can be used where-ever <code>os.Source</code>s\nare required:</p>\n<ul dir=\"auto\">\n<li>Any <code>geny.Writable</code> data type:\n<ul dir=\"auto\">\n<li><code>Array[Byte]</code></li>\n<li><code>java.lang.String</code> (these are treated as UTF-8)</li>\n<li><code>java.io.InputStream</code></li>\n</ul>\n</li>\n<li><code>java.nio.channels.SeekableByteChannel</code></li>\n<li>Any <code>TraversableOnce[T]</code> of the above: e.g. <code>Seq[String]</code>,\n<code>List[Array[Byte]]</code>, etc.</li>\n</ul>\n<p dir=\"auto\">Some operations only work on <code>os.SeekableSource</code>, because they need the ability\nto seek to specific offsets in the data. Only the following types of values can\nbe used where <code>os.SeekableSource</code> is required:</p>\n<ul dir=\"auto\">\n<li><code>java.nio.channels.SeekableByteChannel</code></li>\n</ul>\n<p dir=\"auto\"><code>os.Source</code> also supports anything that implements the\n<a href=\"https://github.com/lihaoyi/geny#writable\">Writable</a> interface, such as\n<a href=\"http://www.lihaoyi.com/upickle/#uJson\" rel=\"nofollow\">ujson.Value</a>s,\n<a href=\"http://www.lihaoyi.com/upickle\" rel=\"nofollow\">uPickle</a>'s <code>upickle.default.writable</code> values,\nor <a href=\"http://www.lihaoyi.com/scalatags/\" rel=\"nofollow\">Scalatags</a>'s <code>Tag</code>s</p>\n<p dir=\"auto\">You can also convert an <code>os.Path</code> or <code>os.ResourcePath</code> to an <code>os.Source</code> via\n<code>.toSource</code>.</p>\n<h3 dir=\"auto\"><a id=\"user-content-osgenerator\" class=\"anchor\" aria-hidden=\"true\" href=\"#osgenerator\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.Generator</h3>\n<p dir=\"auto\">Taken from the <a href=\"https://github.com/lihaoyi/geny\">geny</a> library, <code>os.Generator</code>s\nare similar to iterators except instead of providing:</p>\n<ul dir=\"auto\">\n<li><code>def hasNext(): Boolean</code></li>\n<li><code>def next(): T</code></li>\n</ul>\n<p dir=\"auto\"><code>os.Generator</code>s provide:</p>\n<ul dir=\"auto\">\n<li><code>def generate(handleItem: A =&gt; Generator.Action): Generator.Action</code></li>\n</ul>\n<p dir=\"auto\">In general, you should not notice much of a difference using <code>Generator</code>s vs\nusing <code>Iterators</code>: you can use the same <code>.map</code>/<code>.filter</code>/<code>.reduce</code>/etc.\noperations on them, and convert them to collections via the same\n<code>.toList</code>/<code>.toArray</code>/etc. conversions. The main difference is that <code>Generator</code>s\ncan enforce cleanup after traversal completes, so we can ensure open files are\nclosed and resources are released without any accidental leaks.</p>\n<h3 dir=\"auto\"><a id=\"user-content-ospermset\" class=\"anchor\" aria-hidden=\"true\" href=\"#ospermset\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>os.PermSet</h3>\n<p dir=\"auto\"><code>os.PermSet</code>s represent the filesystem permissions on a single file or folder.\nAnywhere an <code>os.PermSet</code> is required, you can pass in values of these types:</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code>java.lang.String</code>s of the form <code>\"rw-r-xrwx\"</code>, with <code>r</code>/<code>w</code>/<code>x</code> representing\nthe permissions that are present or dashes <code>-</code> representing the permissions\nwhich are absent</p>\n</li>\n<li>\n<p dir=\"auto\">Octal <code>Int</code>s of the form <code>Integer.parseInt(\"777\", 8)</code>, matching the octal\n<code>755</code> or <code>666</code> syntax used on the command line</p>\n</li>\n<li>\n<p dir=\"auto\"><code>Set[PosixFilePermission]</code></p>\n</li>\n</ul>\n<p dir=\"auto\">In places where <code>os.PermSet</code>s are returned to you, you can then extract the\nstring, int or set representations of the <code>os.PermSet</code> via:</p>\n<ul dir=\"auto\">\n<li><code>perms.toInt(): Int</code></li>\n<li><code>perms.toString(): String</code></li>\n<li><code>perms.value: Set[PosixFilePermission]</code></li>\n</ul>\n<h2 dir=\"auto\"><a id=\"user-content-changelog\" class=\"anchor\" aria-hidden=\"true\" href=\"#changelog\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Changelog</h2>\n<h3 dir=\"auto\"><a id=\"user-content-080---2021-12-11\" class=\"anchor\" aria-hidden=\"true\" href=\"#080---2021-12-11\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.8.0 - 2021-12-11</h3>\n<ul dir=\"auto\">\n<li>Avoid throwing an exception when sorting identical paths <a href=\"https://github.com/com-lihaoyi/os-lib/pull/90\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/com-lihaoyi/os-lib/pull/90/hovercard\">#90</a></li>\n<li>Make <code>os.remove</code> behave more like <code>Files.deleteIfExists</code> <a href=\"https://github.com/com-lihaoyi/os-lib/pull/89\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/com-lihaoyi/os-lib/pull/89/hovercard\">#89</a></li>\n<li>Make <code>.ext</code> on empty paths return <code>\"\"</code> rather than crashing <a href=\"https://github.com/com-lihaoyi/os-lib/pull/87\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/com-lihaoyi/os-lib/pull/87/hovercard\">#87</a></li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-078---2021-05-27\" class=\"anchor\" aria-hidden=\"true\" href=\"#078---2021-05-27\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.7.8 - 2021-05-27</h3>\n<ul dir=\"auto\">\n<li>Restored binary compatibility in <code>os.copy</code> and <code>os.copy.into</code> to os-lib versions before 0.7.5</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-077---2021-05-14\" class=\"anchor\" aria-hidden=\"true\" href=\"#077---2021-05-14\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.7.7 - 2021-05-14</h3>\n<ul dir=\"auto\">\n<li>Add support for Scala 3.0.0</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-076---2021-04-28\" class=\"anchor\" aria-hidden=\"true\" href=\"#076---2021-04-28\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.7.6 - 2021-04-28</h3>\n<ul dir=\"auto\">\n<li>Add support for Scala 3.0.0-RC3</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-075---2021-04-21\" class=\"anchor\" aria-hidden=\"true\" href=\"#075---2021-04-21\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.7.5 - 2021-04-21</h3>\n<ul dir=\"auto\">\n<li>Re-added support for Scala 2.11</li>\n<li>Added new option <code>mergeFolders</code> to <code>os.copy</code></li>\n<li>os.copy now honors <code>followLinks</code> when copying symbolic links to directories</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-074\" class=\"anchor\" aria-hidden=\"true\" href=\"#074\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.7.4</h3>\n<ul dir=\"auto\">\n<li>Add support for Scala 3.0.0-RC2</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-073\" class=\"anchor\" aria-hidden=\"true\" href=\"#073\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.7.3</h3>\n<ul dir=\"auto\">\n<li>Add support for Scala 3.0.0-RC1</li>\n<li>Migration of the CI system from Travis CI to GitHub Actions</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-072\" class=\"anchor\" aria-hidden=\"true\" href=\"#072\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.7.2</h3>\n<ul dir=\"auto\">\n<li>Add support for Scala 3.0.0-M3</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-071\" class=\"anchor\" aria-hidden=\"true\" href=\"#071\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.7.1</h3>\n<ul dir=\"auto\">\n<li>Improve performance of <code>os.write</code> by buffering output stream to files</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-062\" class=\"anchor\" aria-hidden=\"true\" href=\"#062\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.6.2</h3>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Moved the <code>os.Bytes</code>, <code>os.StreamValue</code> (now named <code>ByteData</code>) interfaces into\n<code>geny</code> package, for sharing with Requests-Scala</p>\n</li>\n<li>\n<p dir=\"auto\">Add <code>os.read.stream</code> function, that returns a <code>geny.Readable</code></p>\n</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-050\" class=\"anchor\" aria-hidden=\"true\" href=\"#050\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.5.0</h3>\n<ul dir=\"auto\">\n<li><code>os.Source</code> now supports any data type that is <code>geny.Writable</code></li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-042\" class=\"anchor\" aria-hidden=\"true\" href=\"#042\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.4.2</h3>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Added a new <a href=\"#ossubpath\">os.SubPath</a> data type, for safer handling of\nsub-paths within a directory.</p>\n</li>\n<li>\n<p dir=\"auto\">Removed <code>os.proc.stream</code>, since you can now customize the <code>stdout</code> or\n<code>stderr</code> of <code>os.proc.call</code> to handle output in a streaming fashion</p>\n</li>\n<li>\n<p dir=\"auto\"><code>stderr</code> in <code>os.proc.call</code> and <code>os.proc.spawn</code> defaults to\n<code>os.Inherit</code> rather than <code>os.Pipe</code>; pass in <code>stderr = os.Pipe</code>\nexplicitly to get back the old behavior</p>\n</li>\n<li>\n<p dir=\"auto\">Fix timeout not working with <code>os.proc.call</code>\n<a href=\"https://github.com/lihaoyi/os-lib/issues/27\" data-hovercard-type=\"issue\" data-hovercard-url=\"/com-lihaoyi/os-lib/issues/27/hovercard\">#27</a></p>\n</li>\n<li>\n<p dir=\"auto\">Attempt to fix crasher accessing <code>os.pwd</code>\n<a href=\"https://github.com/lihaoyi/os-lib/issues/24\" data-hovercard-type=\"issue\" data-hovercard-url=\"/com-lihaoyi/os-lib/issues/24/hovercard\">#24</a></p>\n</li>\n<li>\n<p dir=\"auto\">Added an <a href=\"#oswatchwatch\">os-lib-watch</a> package, which can be used to\nefficiently recursively watch folders for updates\n<a href=\"https://github.com/lihaoyi/os-lib/issues/23\" data-hovercard-type=\"issue\" data-hovercard-url=\"/com-lihaoyi/os-lib/issues/23/hovercard\">#23</a></p>\n</li>\n<li>\n<p dir=\"auto\"><code>os.stat</code> no longer provides POSIX owner/permissions related metadata\nby default <a href=\"https://github.com/lihaoyi/os-lib/issues/15\" data-hovercard-type=\"issue\" data-hovercard-url=\"/com-lihaoyi/os-lib/issues/15/hovercard\">#15</a>, use\n<code>os.stat.posix</code> to fetch that separately</p>\n</li>\n<li>\n<p dir=\"auto\"><code>os.stat.full</code> has been superseded by <code>os.stat</code> and <code>os.stat.posix</code></p>\n</li>\n<li>\n<p dir=\"auto\">Removed <code>os.BasicStatInfo</code>, which has been superseded by <code>os.StatInfo</code></p>\n</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-030\" class=\"anchor\" aria-hidden=\"true\" href=\"#030\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.3.0</h3>\n<ul dir=\"auto\">\n<li>Support for Scala 2.13.0 final</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-028\" class=\"anchor\" aria-hidden=\"true\" href=\"#028\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.2.8</h3>\n<ul dir=\"auto\">\n<li><code>os.ProcessOutput</code> trait is no longer sealed</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-027\" class=\"anchor\" aria-hidden=\"true\" href=\"#027\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.2.7</h3>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Narrow return type of <code>readLink.absolute</code> from <code>FilePath</code> to <code>Path</code></p>\n</li>\n<li>\n<p dir=\"auto\">Fix handling of standaline <code>\\r</code> in <code>os.SubProcess#stdout.readLine</code></p>\n</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-026\" class=\"anchor\" aria-hidden=\"true\" href=\"#026\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.2.6</h3>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Remove <code>os.StatInfo#name</code>, <code>os.BasicStatInfo#name</code> and <code>os.FullStatInfo#name</code>,\nsince it is just the last path segment of the stat call and doesn't properly\nreflect the actual name of the file on disk (e.g. on case-insensitive filesystems)</p>\n</li>\n<li>\n<p dir=\"auto\"><code>os.walk.attrs</code> and <code>os.walk.stream.attrs</code> now provides a <code>os.BasicFileInfo</code>\nto the <code>skip</code> predicate.</p>\n</li>\n<li>\n<p dir=\"auto\">Add <code>os.BasePath#baseName</code>, which returns the section of the path before the\n<code>os.BasePath#ext</code> extension.</p>\n</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-025\" class=\"anchor\" aria-hidden=\"true\" href=\"#025\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.2.5</h3>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">New <code>os.readLink</code>/<code>os.readLink.absolute</code> methods to read the contents of\nsymbolic links without dereferencing them.</p>\n</li>\n<li>\n<p dir=\"auto\">New <code>os.read.chunked(p: Path, chunkSize: Int): os.Generator[(Array[Byte], Int)]</code> method for conveniently iterating over chunks of a file</p>\n</li>\n<li>\n<p dir=\"auto\">New <code>os.truncate(p: Path, size: Int)</code> method</p>\n</li>\n<li>\n<p dir=\"auto\"><code>SubProcess</code> streams now implement <code>java.io.DataInput</code>/<code>DataOutput</code> for convenience</p>\n</li>\n<li>\n<p dir=\"auto\"><code>SubProcess</code> streams are now synchronized for thread-safety</p>\n</li>\n<li>\n<p dir=\"auto\"><code>os.write</code> now has <code>createFolders</code> default to <code>false</code></p>\n</li>\n<li>\n<p dir=\"auto\"><code>os.Generator</code> now has a <code>.withFilter</code> method</p>\n</li>\n<li>\n<p dir=\"auto\"><code>os.symlink</code> now allows relative paths</p>\n</li>\n<li>\n<p dir=\"auto\"><code>os.remove.all</code> now properly removes broken symlinks, and no longer recurses\ninto the symlink's contents</p>\n</li>\n<li>\n<p dir=\"auto\"><code>os.SubProcess</code> now implements <code>java.lang.AutoCloseable</code></p>\n</li>\n<li>\n<p dir=\"auto\">New <code>write.channel</code> counterpart to <code>read.channel</code> (and <code>write.over.channel</code>\nand <code>write.append.channel</code>)</p>\n</li>\n<li>\n<p dir=\"auto\"><code>os.PermSet</code> is now modelled internally as a boxed <code>Int</code> for performance, and\nis a case class with proper <code>equals</code>/<code>hashcode</code></p>\n</li>\n<li>\n<p dir=\"auto\"><code>os.read.bytes(arg: Path, offset: Long, count: Int)</code> no longer leaks open file\nchannels</p>\n</li>\n<li>\n<p dir=\"auto\">Reversed the order of arguments in <code>os.symlink</code> and <code>os.hardlink</code>, to match\nthe order of the underlying java NIO functions.</p>\n</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-022\" class=\"anchor\" aria-hidden=\"true\" href=\"#022\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.2.2</h3>\n<ul dir=\"auto\">\n<li>Allow chaining of multiple subprocesses <code>stdin</code>/<code>stdout</code></li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-020\" class=\"anchor\" aria-hidden=\"true\" href=\"#020\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.2.0</h3>\n<ul dir=\"auto\">\n<li>First release</li>\n</ul>\n</article></div>",
    "contributors" : [
      {
        "login" : "lihaoyi",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/934140?v=4",
        "url" : "https://github.com/lihaoyi",
        "contributions" : 180
      },
      {
        "login" : "lefou",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1321393?v=4",
        "url" : "https://github.com/lefou",
        "contributions" : 16
      },
      {
        "login" : "sake92",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/12010694?v=4",
        "url" : "https://github.com/sake92",
        "contributions" : 15
      },
      {
        "login" : "jodersky",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1007012?v=4",
        "url" : "https://github.com/jodersky",
        "contributions" : 14
      },
      {
        "login" : "lolgab",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/5793054?v=4",
        "url" : "https://github.com/lolgab",
        "contributions" : 10
      },
      {
        "login" : "anatoliykmetyuk",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2614813?v=4",
        "url" : "https://github.com/anatoliykmetyuk",
        "contributions" : 9
      },
      {
        "login" : "lihaoyi-databricks",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/32282535?v=4",
        "url" : "https://github.com/lihaoyi-databricks",
        "contributions" : 8
      },
      {
        "login" : "Flowdalic",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/432385?v=4",
        "url" : "https://github.com/Flowdalic",
        "contributions" : 3
      },
      {
        "login" : "utgheith",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/7417030?v=4",
        "url" : "https://github.com/utgheith",
        "contributions" : 3
      },
      {
        "login" : "rwpenney",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/8206669?v=4",
        "url" : "https://github.com/rwpenney",
        "contributions" : 2
      },
      {
        "login" : "ajrnz",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1515832?v=4",
        "url" : "https://github.com/ajrnz",
        "contributions" : 2
      },
      {
        "login" : "alexarchambault",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/7063723?v=4",
        "url" : "https://github.com/alexarchambault",
        "contributions" : 1
      },
      {
        "login" : "ckipp01",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/13974112?v=4",
        "url" : "https://github.com/ckipp01",
        "contributions" : 1
      },
      {
        "login" : "manuzhang",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1191767?v=4",
        "url" : "https://github.com/manuzhang",
        "contributions" : 1
      },
      {
        "login" : "nightscape",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/35170?v=4",
        "url" : "https://github.com/nightscape",
        "contributions" : 1
      },
      {
        "login" : "odersky",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/795990?v=4",
        "url" : "https://github.com/odersky",
        "contributions" : 1
      },
      {
        "login" : "sksamuel",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/743706?v=4",
        "url" : "https://github.com/sksamuel",
        "contributions" : 1
      },
      {
        "login" : "mr-cloud",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/10112657?v=4",
        "url" : "https://github.com/mr-cloud",
        "contributions" : 1
      },
      {
        "login" : "nafg",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/98384?v=4",
        "url" : "https://github.com/nafg",
        "contributions" : 1
      }
    ],
    "commits" : 270,
    "topics" : [
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "chatroom" : null,
    "openIssues" : [
      {
        "number" : 83,
        "title" : "More info in SubprocessException",
        "url" : "https://github.com/com-lihaoyi/os-lib/issues/83"
      },
      {
        "number" : 78,
        "title" : "File.getCanonicalFile \"normalizes\" more than Path.normalize on Windows",
        "url" : "https://github.com/com-lihaoyi/os-lib/issues/78"
      },
      {
        "number" : 59,
        "title" : "Segfault on Scala native when writing",
        "url" : "https://github.com/com-lihaoyi/os-lib/issues/59"
      },
      {
        "number" : 46,
        "title" : "Shell-like string interpolator",
        "url" : "https://github.com/com-lihaoyi/os-lib/issues/46"
      },
      {
        "number" : 32,
        "title" : "ProcessOutput.Readlines blocks forever",
        "url" : "https://github.com/com-lihaoyi/os-lib/issues/32"
      },
      {
        "number" : 29,
        "title" : "os.proc() sometimes returns error 143",
        "url" : "https://github.com/com-lihaoyi/os-lib/issues/29"
      },
      {
        "number" : 28,
        "title" : "`OutputStream.available` always retrun 0",
        "url" : "https://github.com/com-lihaoyi/os-lib/issues/28"
      }
    ],
    "scalaPercentage" : 99,
    "license" : null,
    "commitActivity" : [
      {
        "total" : 0,
        "week" : 1629590400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1630195200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1630800000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1631404800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1632009600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1632614400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1633219200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1633824000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1634428800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1635033600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1635638400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1636243200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 1,
        "week" : 1636848000000,
        "days" : [
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1637452800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1638057600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 3,
        "week" : 1638662400000,
        "days" : [
          0,
          0,
          0,
          1,
          1,
          1,
          0
        ]
      },
      {
        "total" : 1,
        "week" : 1639267200000,
        "days" : [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1639872000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1640476800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1641081600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1641686400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1642291200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 1,
        "week" : 1642896000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "total" : 2,
        "week" : 1643500800000,
        "days" : [
          0,
          2,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1644105600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1644710400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1645315200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1645920000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1646524800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1647129600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1647734400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1648339200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1648944000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1649548800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 2,
        "week" : 1650153600000,
        "days" : [
          0,
          0,
          1,
          1,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1650758400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1651363200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1651968000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1652572800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1653177600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 1,
        "week" : 1653782400000,
        "days" : [
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1654387200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1654992000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1655596800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1656201600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1656806400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1657411200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1658016000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 1,
        "week" : 1658620800000,
        "days" : [
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ]
      },
      {
        "total" : 2,
        "week" : 1659225600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          2,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1659830400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1660435200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      }
    ]
  },
  "settings" : {
    "defaultStableVersion" : true,
    "defaultArtifact" : null,
    "strictVersions" : false,
    "customScalaDoc" : null,
    "documentationLinks" : [
    ],
    "deprecated" : false,
    "contributorsWanted" : false,
    "artifactDeprecations" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "file-systems-and-processes",
    "beginnerIssuesLabel" : null
  }
}