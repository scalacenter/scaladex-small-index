{
  "organization" : "com-lihaoyi",
  "repository" : "requests-scala",
  "creationDate" : 1543926045000,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1644301114920
    }
  },
  "githubInfo" : {
    "homepage" : "",
    "description" : "A Scala port of the popular Python Requests HTTP client: flexible, intuitive, and straightforward to use.",
    "logo" : "https://avatars.githubusercontent.com/u/79346799?v=4",
    "stars" : 608,
    "forks" : 55,
    "watchers" : 14,
    "issues" : 20,
    "creationDate" : 1531998377000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"readme.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-requests-scala-070\" class=\"anchor\" aria-hidden=\"true\" href=\"#requests-scala-070\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Requests-Scala 0.7.0</h1>\n<p dir=\"auto\"><a href=\"https://gitter.im/lihaoyi/requests-scala?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/447f425d4cd8020a175d16cd72f442d01d581179cd5dde5e322a442a865a9f16/68747470733a2f2f6261646765732e6769747465722e696d2f6c6968616f79692f72657175657374732d7363616c612e737667\" alt=\"Join the chat at https://gitter.im/lihaoyi/requests-scala\" data-canonical-src=\"https://badges.gitter.im/lihaoyi/requests-scala.svg\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Requests-Scala is a Scala port of the popular Python\n<a href=\"http://docs.python-requests.org/\" rel=\"nofollow\">Requests</a> HTTP client. Requests-Scala aims to\nprovide the same API and user-experience as the original Requests: flexible,\nintuitive, and straightforward to use.</p>\n<p dir=\"auto\">If you use Requests-Scala and like it, you will probably enjoy the following book by the Author:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://www.handsonscala.com/\" rel=\"nofollow\"><em>Hands-on Scala Programming</em></a></li>\n</ul>\n<p dir=\"auto\"><em>Hands-on Scala</em> has uses Requests-Scala extensively throughout the book, and has\nthe entirety of <em>Chapter 12: Working with HTTP APIs</em> dedicated to\nthe library. <em>Hands-on Scala</em> is a great way to level up your skills in Scala\nin general and Requests-Scala in particular.</p>\n<p dir=\"auto\">You can also support it by donating to our Patreon:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://www.patreon.com/lihaoyi\" rel=\"nofollow\">https://www.patreon.com/lihaoyi</a></li>\n</ul>\n<p dir=\"auto\">For a hands-on introduction to this library, take a look at the following blog post:</p>\n<ul dir=\"auto\">\n<li><a href=\"http://www.lihaoyi.com/post/HowtoworkwithHTTPJSONAPIsinScala.html\" rel=\"nofollow\">How to work with HTTP JSON APIs in Scala</a></li>\n</ul>\n<h2 dir=\"auto\"><a id=\"user-content-contents\" class=\"anchor\" aria-hidden=\"true\" href=\"#contents\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Contents</h2>\n<ul dir=\"auto\">\n<li><a href=\"#making-a-request\">Making a Request</a>\n<ul dir=\"auto\">\n<li><a href=\"#passing-in-parameters\">Passing in Parameters</a></li>\n<li><a href=\"#response-content\">Response Content</a></li>\n</ul>\n</li>\n<li><a href=\"#streaming-requests\">Streaming Requests</a></li>\n<li><a href=\"#multipart-uploads\">Multipart Uploads</a></li>\n<li><a href=\"#misc-configuration\">Misc Configuration</a>\n<ul dir=\"auto\">\n<li><a href=\"#custom-headers\">Custom Headers</a></li>\n<li><a href=\"#timeouts\">Timeouts</a></li>\n<li><a href=\"#compression\">Compression</a></li>\n<li><a href=\"#cookies\">Cookies</a></li>\n<li><a href=\"#redirects\">Redirects</a></li>\n<li><a href=\"#client-side-certificates\">Client Side Certificates</a></li>\n</ul>\n</li>\n<li><a href=\"#sessions\">Sessions</a></li>\n<li><a href=\"#why-requests-scala\">Why Requests-Scala?</a></li>\n</ul>\n<h2 dir=\"auto\"><a id=\"user-content-getting-started\" class=\"anchor\" aria-hidden=\"true\" href=\"#getting-started\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Getting Started</h2>\n<p dir=\"auto\">Use the following import to get you started:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ivy&quot;com.lihaoyi::requests:0.7.0&quot; // mill\n&quot;com.lihaoyi&quot; %% &quot;requests&quot; % &quot;0.7.0&quot; // sbt\ncompile &quot;com.lihaoyi:requests_2.12:0.7.0&quot; //gradle\"><pre><span class=\"pl-k\">ivy</span><span class=\"pl-s\">\"</span><span class=\"pl-s\">com.lihaoyi::requests:0.7.0</span><span class=\"pl-s\">\"</span> <span class=\"pl-c\"><span class=\"pl-c\">//</span> mill</span>\n<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.lihaoyi<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>requests<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0.7.0<span class=\"pl-pds\">\"</span></span> <span class=\"pl-c\"><span class=\"pl-c\">//</span> sbt</span>\ncompile <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.lihaoyi:requests_2.12:0.7.0<span class=\"pl-pds\">\"</span></span> <span class=\"pl-c\"><span class=\"pl-c\">//</span>gradle</span></pre></div>\n<h2 dir=\"auto\"><a id=\"user-content-making-a-request\" class=\"anchor\" aria-hidden=\"true\" href=\"#making-a-request\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Making a Request</h2>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val r = requests.get(&quot;https://api.github.com/users/lihaoyi&quot;)\n\nr.statusCode\n// 200\n\nr.headers(&quot;content-type&quot;)\n// Buffer(&quot;application/json; charset=utf-8&quot;)\n\nr.text\n// {&quot;login&quot;:&quot;lihaoyi&quot;,&quot;id&quot;:934140,&quot;node_id&quot;:&quot;MDQ6VXNlcjkzNDE0MA==&quot;,...\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">r</span> <span class=\"pl-k\">=</span> requests.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://api.github.com/users/lihaoyi<span class=\"pl-pds\">\"</span></span>)\n\nr.statusCode\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 200</span>\n\nr.headers(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>content-type<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Buffer(\"application/json; charset=utf-8\")</span>\n\nr.text\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> {\"login\":\"lihaoyi\",\"id\":934140,\"node_id\":\"MDQ6VXNlcjkzNDE0MA==\",...</span></pre></div>\n<p dir=\"auto\">Making your first HTTP request is simple: simply call <code>requests.get</code> with the\nURL you want, and requests will fetch it for you.</p>\n<p dir=\"auto\">You can also call <code>requests.post</code>, <code>requests.put</code>, etc. to make other kinds of\nHTTP requests:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val r = requests.post(&quot;http://httpbin.org/post&quot;, data = Map(&quot;key&quot; -&gt; &quot;value&quot;))\n\nval r = requests.put(&quot;http://httpbin.org/put&quot;, data = Map(&quot;key&quot; -&gt; &quot;value&quot;))\n\nval r = requests.delete(&quot;http://httpbin.org/delete&quot;)\n\nval r = requests.head(&quot;http://httpbin.org/head&quot;)\n\nval r = requests.options(&quot;http://httpbin.org/get&quot;)\n\n// dynamically choose what HTTP method to use\nval r = requests.send(&quot;put&quot;)(&quot;http://httpbin.org/put&quot;, data = Map(&quot;key&quot; -&gt; &quot;value&quot;))\n\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">r</span> <span class=\"pl-k\">=</span> requests.post(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://httpbin.org/post<span class=\"pl-pds\">\"</span></span>, data <span class=\"pl-k\">=</span> <span class=\"pl-en\">Map</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>key<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>value<span class=\"pl-pds\">\"</span></span>))\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">r</span> <span class=\"pl-k\">=</span> requests.put(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://httpbin.org/put<span class=\"pl-pds\">\"</span></span>, data <span class=\"pl-k\">=</span> <span class=\"pl-en\">Map</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>key<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>value<span class=\"pl-pds\">\"</span></span>))\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">r</span> <span class=\"pl-k\">=</span> requests.delete(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://httpbin.org/delete<span class=\"pl-pds\">\"</span></span>)\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">r</span> <span class=\"pl-k\">=</span> requests.head(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://httpbin.org/head<span class=\"pl-pds\">\"</span></span>)\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">r</span> <span class=\"pl-k\">=</span> requests.options(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://httpbin.org/get<span class=\"pl-pds\">\"</span></span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> dynamically choose what HTTP method to use</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">r</span> <span class=\"pl-k\">=</span> requests.send(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>put<span class=\"pl-pds\">\"</span></span>)(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://httpbin.org/put<span class=\"pl-pds\">\"</span></span>, data <span class=\"pl-k\">=</span> <span class=\"pl-en\">Map</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>key<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>value<span class=\"pl-pds\">\"</span></span>))\n</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-passing-in-parameters\" class=\"anchor\" aria-hidden=\"true\" href=\"#passing-in-parameters\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Passing in Parameters</h3>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val r = requests.get(\n    &quot;http://httpbin.org/get&quot;,\n    params = Map(&quot;key1&quot; -&gt; &quot;value1&quot;, &quot;key2&quot; -&gt; &quot;value2&quot;)\n)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">r</span> <span class=\"pl-k\">=</span> requests.get(\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://httpbin.org/get<span class=\"pl-pds\">\"</span></span>,\n    params <span class=\"pl-k\">=</span> <span class=\"pl-en\">Map</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>key1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>value1<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>key2<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>value2<span class=\"pl-pds\">\"</span></span>)\n)</pre></div>\n<p dir=\"auto\">You can pass in URL parameters to GET requests via the <code>params</code> argument; simply\npass in a <code>Map[String, String]</code>. As seen earlier, when passing in POST or PUT\nparameters, you instead need the <code>data</code> argument:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val r = requests.post(&quot;http://httpbin.org/post&quot;, data = Map(&quot;key&quot; -&gt; &quot;value&quot;))\n\nval r = requests.put(&quot;http://httpbin.org/put&quot;, data = Map(&quot;key&quot; -&gt; &quot;value&quot;))\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">r</span> <span class=\"pl-k\">=</span> requests.post(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://httpbin.org/post<span class=\"pl-pds\">\"</span></span>, data <span class=\"pl-k\">=</span> <span class=\"pl-en\">Map</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>key<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>value<span class=\"pl-pds\">\"</span></span>))\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">r</span> <span class=\"pl-k\">=</span> requests.put(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://httpbin.org/put<span class=\"pl-pds\">\"</span></span>, data <span class=\"pl-k\">=</span> <span class=\"pl-en\">Map</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>key<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>value<span class=\"pl-pds\">\"</span></span>))</pre></div>\n<p dir=\"auto\">Apart from POSTing key-value pairs, you can also POST <code>String</code>s, <code>Array[Byte]</code>s,\n<code>java.io.File</code>s, <code>java.nio.file.Path</code>s, and <code>requests.MultiPart</code> uploads:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"requests.post(&quot;https://httpbin.org/post&quot;, data = &quot;Hello World&quot;)\nrequests.post(&quot;https://httpbin.org/post&quot;, data = Array[Byte](1, 2, 3))\nrequests.post(&quot;https://httpbin.org/post&quot;, data = new java.io.File(&quot;thing.json&quot;))\nrequests.post(&quot;https://httpbin.org/post&quot;, data = java.nio.file.Paths.get(&quot;thing.json&quot;))\"><pre>requests.post(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/post<span class=\"pl-pds\">\"</span></span>, data <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Hello World<span class=\"pl-pds\">\"</span></span>)\nrequests.post(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/post<span class=\"pl-pds\">\"</span></span>, data <span class=\"pl-k\">=</span> <span class=\"pl-en\">Array</span>[<span class=\"pl-en\">Byte</span>](<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>))\nrequests.post(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/post<span class=\"pl-pds\">\"</span></span>, data <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> java.io.<span class=\"pl-en\">File</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>thing.json<span class=\"pl-pds\">\"</span></span>))\nrequests.post(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/post<span class=\"pl-pds\">\"</span></span>, data <span class=\"pl-k\">=</span> java.nio.file.<span class=\"pl-en\">Paths</span>.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>thing.json<span class=\"pl-pds\">\"</span></span>))</pre></div>\n<p dir=\"auto\">The <code>data</code> parameter also supports anything that implements the\n<a href=\"https://github.com/lihaoyi/geny#writable\">Writable</a> interface, such as\n<a href=\"http://com-lihaoyi.github.io/upickle/#uJson\" rel=\"nofollow\">ujson.Value</a>s,\n<a href=\"http://com-lihaoyi.github.io/upickle\" rel=\"nofollow\">uPickle</a>'s <code>upickle.default.writable</code> values,\nor <a href=\"http://com-lihaoyi.github.io/scalatags/\" rel=\"nofollow\">Scalatags</a>'s <code>Tag</code>s</p>\n<h3 dir=\"auto\"><a id=\"user-content-response-content\" class=\"anchor\" aria-hidden=\"true\" href=\"#response-content\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Response Content</h3>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val r = requests.get(&quot;https://api.github.com/events&quot;)\n\nr.statusCode\n// 200\n\nr.headers(&quot;content-type&quot;)\n// Buffer(&quot;application/json; charset=utf-8&quot;)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">r</span> <span class=\"pl-k\">=</span> requests.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://api.github.com/events<span class=\"pl-pds\">\"</span></span>)\n\nr.statusCode\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 200</span>\n\nr.headers(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>content-type<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Buffer(\"application/json; charset=utf-8\")</span></pre></div>\n<p dir=\"auto\">As seen earlier, you can use <code>.statusCode</code> and <code>.headers</code> to see the relevant\nmetadata of your HTTP response. The response data is in the <code>.data</code> field of the\n<code>Response</code> object. Most often, it's text, which you can decode using the <code>.text</code>\nproperty as shown below:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"r.text\n// [{&quot;id&quot;:&quot;7990061484&quot;,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:6242317,&quot;login&quot;:...\"><pre>r.text\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> [{\"id\":\"7990061484\",\"type\":\"PushEvent\",\"actor\":{\"id\":6242317,\"login\":...</span></pre></div>\n<p dir=\"auto\">If you want the raw bytes of the response, use <code>r.contents</code></p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"r.contents\n// Array(91, 123, 34, 105, 100, 34, 58, 34, 55, 57,  57, 48, 48, 54, 49, ...\"><pre>r.contents\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Array(91, 123, 34, 105, 100, 34, 58, 34, 55, 57,  57, 48, 48, 54, 49, ...</span></pre></div>\n<h2 dir=\"auto\"><a id=\"user-content-streaming-requests\" class=\"anchor\" aria-hidden=\"true\" href=\"#streaming-requests\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Streaming Requests</h2>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.write(\n  os.pwd / &quot;file.json&quot;,\n  requests.get.stream(&quot;https://api.github.com/events&quot;)\n)\"><pre>os.write(\n  os.pwd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file.json<span class=\"pl-pds\">\"</span></span>,\n  requests.get.stream(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://api.github.com/events<span class=\"pl-pds\">\"</span></span>)\n)</pre></div>\n<p dir=\"auto\">Requests exposes the <code>requests.get.stream</code> (and equivalent\n<code>requests.post.stream</code>, <code>requests.put.stream</code>, etc.) functions for you to\nperform streaming uploads/downloads without needing to load the entire\nrequest/response into memory. This is useful if you are upload/downloading large\nfiles or data blobs. <code>.stream</code> returns a\n<a href=\"https://github.com/lihaoyi/geny#readable\">Readable</a> value, that can be then\npassed to methods like <a href=\"https://github.com/lihaoyi/os-lib#oswrite\">os.write</a>,\n<code>fastparse.parse</code> or <code>upickle.default.read</code> to handle the received data in a\nstreaming fashion:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ujson.read(requests.get.stream(&quot;https://api.github.com/events&quot;))\"><pre>ujson.read(requests.get.stream(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://api.github.com/events<span class=\"pl-pds\">\"</span></span>))</pre></div>\n<p dir=\"auto\">Since <code>requests.post</code> and <code>requests.put</code> both take a <code>data: geny.Writable</code>\nparameter, you can even chain requests together, taking the data returned from\none HTTP request and feeding it into another:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"os.write(\n  os.pwd / &quot;chained.json&quot;,\n  requests.post.stream(\n    &quot;https://httpbin.org/post&quot;,\n    data = requests.get.stream(&quot;https://api.github.com/events&quot;)\n  )\n)\"><pre>os.write(\n  os.pwd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>chained.json<span class=\"pl-pds\">\"</span></span>,\n  requests.post.stream(\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/post<span class=\"pl-pds\">\"</span></span>,\n    data <span class=\"pl-k\">=</span> requests.get.stream(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://api.github.com/events<span class=\"pl-pds\">\"</span></span>)\n  )\n)</pre></div>\n<p dir=\"auto\"><code>requests.*.stream</code> should make it easy for you to work with data\ntoo big to fit in memory, while still benefiting from most of Requests' friendly\n&amp; intuitive API.</p>\n<h2 dir=\"auto\"><a id=\"user-content-handling-json\" class=\"anchor\" aria-hidden=\"true\" href=\"#handling-json\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Handling JSON</h2>\n<p dir=\"auto\">Requests does not provide any built-in JSON support, but you can easily use a\nthird-party JSON library to work with it. This example shows how to use\n<a href=\"http://www.lihaoyi.com/upickle/\" rel=\"nofollow\">uJson</a> talk to a HTTP endpoint that requires a\nJSON-formatted body, either using <code>upickle.default.stream</code>:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"requests.post(\n  &quot;https://api.github.com/some/endpoint&quot;,\n  data = upickle.default.stream(Map(&quot;user-agent&quot; -&gt; &quot;my-app/0.0.1&quot;))\n)\"><pre>requests.post(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://api.github.com/some/endpoint<span class=\"pl-pds\">\"</span></span>,\n  data <span class=\"pl-k\">=</span> upickle.default.stream(<span class=\"pl-en\">Map</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>user-agent<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>my-app/0.0.1<span class=\"pl-pds\">\"</span></span>))\n)</pre></div>\n<p dir=\"auto\">Or by constructing <code>ujson.Value</code>s directly</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"requests.post(\n  &quot;https://api.github.com/some/endpoint&quot;,\n  data = ujson.Obj(&quot;user-agent&quot; -&gt; &quot;my-app/0.0.1&quot;)\n)\"><pre>requests.post(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://api.github.com/some/endpoint<span class=\"pl-pds\">\"</span></span>,\n  data <span class=\"pl-k\">=</span> ujson.<span class=\"pl-en\">Obj</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>user-agent<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>my-app/0.0.1<span class=\"pl-pds\">\"</span></span>)\n)</pre></div>\n<p dir=\"auto\">In both cases, the upload occurs efficiently in a streaming fashion, without\nmaterializing the entire JSON blob in memory.</p>\n<p dir=\"auto\">It is equally easy ot use uJson to deal with JSON returned in the response from\nthe server:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val r = requests.get(&quot;https://api.github.com/events&quot;)\n\nval json = ujson.read(r.text)\n\njson.arr.length\n// 30\n\njson.arr(0).obj.keys\n// Set(&quot;id&quot;, &quot;type&quot;, &quot;actor&quot;, &quot;repo&quot;, &quot;payload&quot;, &quot;public&quot;, &quot;created_at&quot;)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">r</span> <span class=\"pl-k\">=</span> requests.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://api.github.com/events<span class=\"pl-pds\">\"</span></span>)\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">json</span> <span class=\"pl-k\">=</span> ujson.read(r.text)\n\njson.arr.length\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 30</span>\n\njson.arr(<span class=\"pl-c1\">0</span>).obj.keys\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Set(\"id\", \"type\", \"actor\", \"repo\", \"payload\", \"public\", \"created_at\")</span></pre></div>\n<p dir=\"auto\">While Requests-Scala doesn't come bundled with JSON functionality, it is trivial\nto use it together with any other 3rd party JSON library (I like\n<a href=\"http://www.lihaoyi.com/upickle/\" rel=\"nofollow\">uJson</a>) So just pick whatever library you\nwant.</p>\n<h2 dir=\"auto\"><a id=\"user-content-multipart-uploads\" class=\"anchor\" aria-hidden=\"true\" href=\"#multipart-uploads\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Multipart Uploads</h2>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val r = requests.post(\n  &quot;http://httpbin.org/post&quot;,\n  data = requests.MultiPart(\n    requests.MultiItem(&quot;name&quot;, new java.io.File(&quot;build.sc&quot;), &quot;file.txt&quot;),\n    // you can upload strings, and file name is optional\n    requests.MultiItem(&quot;name2&quot;, &quot;Hello&quot;),\n    // bytes arrays are ok too\n    requests.MultiItem(&quot;name3&quot;, Array[Byte](1, 2, 3, 4))\n  )\n)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">r</span> <span class=\"pl-k\">=</span> requests.post(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://httpbin.org/post<span class=\"pl-pds\">\"</span></span>,\n  data <span class=\"pl-k\">=</span> requests.<span class=\"pl-en\">MultiPart</span>(\n    requests.<span class=\"pl-en\">MultiItem</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-k\">new</span> java.io.<span class=\"pl-en\">File</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>build.sc<span class=\"pl-pds\">\"</span></span>), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>file.txt<span class=\"pl-pds\">\"</span></span>),\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> you can upload strings, and file name is optional</span>\n    requests.<span class=\"pl-en\">MultiItem</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name2<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Hello<span class=\"pl-pds\">\"</span></span>),\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> bytes arrays are ok too</span>\n    requests.<span class=\"pl-en\">MultiItem</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name3<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-en\">Array</span>[<span class=\"pl-en\">Byte</span>](<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>))\n  )\n)</pre></div>\n<p dir=\"auto\">Multipart uploads are done by passing <code>requests.MultiPart</code>/<code>requests.MultiItem</code>\nto the <code>data</code> parameter. Each <code>MultiItem</code> needs a name and a data-source, which\ncan be a <code>String</code>, <code>Array[Byte]</code>, <code>java.io.File</code>, or <code>java.nio.file.Path</code>. Each\n<code>MultiItem</code> can optionally take a file name that will get sent to the server</p>\n<h2 dir=\"auto\"><a id=\"user-content-misc-configuration\" class=\"anchor\" aria-hidden=\"true\" href=\"#misc-configuration\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Misc Configuration</h2>\n<p dir=\"auto\">Earlier you already saw how to use the <code>params</code> and <code>data</code> arguments. Apart from\nthose, the <code>requests.get</code> method takes in a lot of arguments you can use to\nconfigure it, e.g. passing in custom headers:</p>\n<h3 dir=\"auto\"><a id=\"user-content-custom-headers\" class=\"anchor\" aria-hidden=\"true\" href=\"#custom-headers\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Custom Headers</h3>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"requests.get(\n  &quot;https://api.github.com/some/endpoint&quot;,\n  headers = Map(&quot;user-agent&quot; -&gt; &quot;my-app/0.0.1&quot;)\n)\"><pre>requests.get(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://api.github.com/some/endpoint<span class=\"pl-pds\">\"</span></span>,\n  headers <span class=\"pl-k\">=</span> <span class=\"pl-en\">Map</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>user-agent<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>my-app/0.0.1<span class=\"pl-pds\">\"</span></span>)\n)</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-timeouts\" class=\"anchor\" aria-hidden=\"true\" href=\"#timeouts\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Timeouts</h3>\n<p dir=\"auto\"><code>readTimeout</code>s and <code>connectTimeout</code>s:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"requests.get(&quot;https://httpbin.org/delay/1&quot;, readTimeout = 10)\n// TimeoutException\n\nrequests.get(&quot;https://httpbin.org/delay/1&quot;, readTimeout = 1500)\n// ok\n\nrequests.get(&quot;https://httpbin.org/delay/3&quot;, readTimeout = 1500)\n// TimeoutException\"><pre>requests.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/delay/1<span class=\"pl-pds\">\"</span></span>, readTimeout <span class=\"pl-k\">=</span> <span class=\"pl-c1\">10</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> TimeoutException</span>\n\nrequests.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/delay/1<span class=\"pl-pds\">\"</span></span>, readTimeout <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1500</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> ok</span>\n\nrequests.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/delay/3<span class=\"pl-pds\">\"</span></span>, readTimeout <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1500</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> TimeoutException</span></pre></div>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"requests.get(&quot;https://httpbin.org/delay/1&quot;, connectTimeout = 10)\n// TimeoutException\n\nrequests.get(&quot;https://httpbin.org/delay/1&quot;, connectTimeout = 1500)\n// ok\n\nrequests.get(&quot;https://httpbin.org/delay/3&quot;, connectTimeout = 1500)\n// ok\"><pre>requests.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/delay/1<span class=\"pl-pds\">\"</span></span>, connectTimeout <span class=\"pl-k\">=</span> <span class=\"pl-c1\">10</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> TimeoutException</span>\n\nrequests.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/delay/1<span class=\"pl-pds\">\"</span></span>, connectTimeout <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1500</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> ok</span>\n\nrequests.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/delay/3<span class=\"pl-pds\">\"</span></span>, connectTimeout <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1500</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> ok</span></pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-compression\" class=\"anchor\" aria-hidden=\"true\" href=\"#compression\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Compression</h3>\n<p dir=\"auto\">Configuration for compressing the request <code>data</code> upload with Gzip or Deflate via\nthe <code>compress</code> parameter:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"requests.post(\n  &quot;https://httpbin.org/post&quot;,\n  compress = requests.Compress.None,\n  data = &quot;Hello World&quot;\n)\n\nrequests.post(\n  &quot;https://httpbin.org/post&quot;,\n  compress = requests.Compress.Gzip,\n  data = &quot;I am cow&quot;\n)\n\nrequests.post(\n  &quot;https://httpbin.org/post&quot;,\n  compress = requests.Compress.Deflate,\n  data = &quot;Hear me moo&quot;\n)\"><pre>requests.post(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/post<span class=\"pl-pds\">\"</span></span>,\n  compress <span class=\"pl-k\">=</span> requests.<span class=\"pl-en\">Compress</span>.<span class=\"pl-en\">None</span>,\n  data <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Hello World<span class=\"pl-pds\">\"</span></span>\n)\n\nrequests.post(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/post<span class=\"pl-pds\">\"</span></span>,\n  compress <span class=\"pl-k\">=</span> requests.<span class=\"pl-en\">Compress</span>.<span class=\"pl-en\">Gzip</span>,\n  data <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I am cow<span class=\"pl-pds\">\"</span></span>\n)\n\nrequests.post(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/post<span class=\"pl-pds\">\"</span></span>,\n  compress <span class=\"pl-k\">=</span> requests.<span class=\"pl-en\">Compress</span>.<span class=\"pl-en\">Deflate</span>,\n  data <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Hear me moo<span class=\"pl-pds\">\"</span></span>\n)</pre></div>\n<p dir=\"auto\">Or to disabling the de-compression of the response <code>data</code> being downloaded via\nthe <code>autoCompress</code> parameter, in case you want the un-compressed data blob for\nwhatever reason:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"requests.get(&quot;https://httpbin.org/gzip&quot;).contents.length\n// 250\n\nrequests.get(&quot;https://httpbin.org/gzip&quot;, autoDecompress=false).contents.length\n// 201\n\n\nrequests.get(&quot;https://httpbin.org/deflate&quot;).contents.length\n// 251\n\nrequests.get(&quot;https://httpbin.org/deflate&quot;, autoDecompress=false).contents.length\n// 188\"><pre>requests.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/gzip<span class=\"pl-pds\">\"</span></span>).contents.length\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 250</span>\n\nrequests.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/gzip<span class=\"pl-pds\">\"</span></span>, autoDecompress<span class=\"pl-k\">=</span><span class=\"pl-c1\">false</span>).contents.length\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 201</span>\n\n\nrequests.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/deflate<span class=\"pl-pds\">\"</span></span>).contents.length\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 251</span>\n\nrequests.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/deflate<span class=\"pl-pds\">\"</span></span>, autoDecompress<span class=\"pl-k\">=</span><span class=\"pl-c1\">false</span>).contents.length\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 188</span></pre></div>\n<p dir=\"auto\">Note that by default, compression of fixed-size in-memory input (<code>String</code>s,\n<code>Array[Byte]</code>s, ...) buffers up the compressed data in memory before uploading\nit. Compression of unknown-length/not-in-memory data (files, <code>InputStream</code>s,\n...) doesn't perform this buffering and uses chunked transfer encoding, as\nnormal. If you want to avoid buffering in memory and are willing to use chunked\ntransfer encoding for in-memory data, wrap it in an inputstream (e.g.\n<code>Array[Byte]</code> can be wrapped in a <code>ByteArrayInputStream</code>)</p>\n<h3 dir=\"auto\"><a id=\"user-content-cookies\" class=\"anchor\" aria-hidden=\"true\" href=\"#cookies\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Cookies</h3>\n<p dir=\"auto\">You can take the cookies that result from one HTTP request and pass them into a\nsubsequent HTTP request:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val r = requests.get(&quot;https://httpbin.org/cookies/set?freeform=test&quot;)\n\nr.cookies\n// Map(&quot;freeform&quot; -&gt; freeform=test)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">r</span> <span class=\"pl-k\">=</span> requests.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/cookies/set?freeform=test<span class=\"pl-pds\">\"</span></span>)\n\nr.cookies\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Map(\"freeform\" -&gt; freeform=test)</span></pre></div>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\nval r2 = requests.get(&quot;https://httpbin.org/cookies&quot;, cookies = r.cookies)\n\nr2.text\n// {&quot;cookies&quot;:{&quot;freeform&quot;:&quot;test&quot;}}\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">r2</span> <span class=\"pl-k\">=</span> requests.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/cookies<span class=\"pl-pds\">\"</span></span>, cookies <span class=\"pl-k\">=</span> r.cookies)\n\nr2.text\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> {\"cookies\":{\"freeform\":\"test\"}}</span></pre></div>\n<p dir=\"auto\">This is a common pattern, e.g. to maintain an authentication/login session\nacross multiple requests. However, it may be easier to instead use Sessions...</p>\n<h3 dir=\"auto\"><a id=\"user-content-redirects\" class=\"anchor\" aria-hidden=\"true\" href=\"#redirects\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Redirects</h3>\n<p dir=\"auto\">Requests handles redirects automatically for you, up to a point:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val r = requests.get(&quot;http://www.github.com&quot;)\n\nr.url\n// https://github.com/\n\nr.history\n// Some(Response(&quot;https://www.github.com&quot;, 301, &quot;Moved Permanently&quot;, ...\n\nr.history.get.history\n// Some(Response(&quot;http://www.github.com&quot;, 301, &quot;Moved Permanently&quot;, ...\n\nr.history.get.history.get.history\n// None\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">r</span> <span class=\"pl-k\">=</span> requests.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://www.github.com<span class=\"pl-pds\">\"</span></span>)\n\nr.url\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> https://github.com/</span>\n\nr.history\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Some(Response(\"https://www.github.com\", 301, \"Moved Permanently\", ...</span>\n\nr.history.get.history\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Some(Response(\"http://www.github.com\", 301, \"Moved Permanently\", ...</span>\n\nr.history.get.history.get.history\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> None</span></pre></div>\n<p dir=\"auto\">As you can see, the request to <code>http://www.github.com</code> was first redirected to\n<code>https://www.github.com</code>, and then to <code>https://github.com/</code>. Requests by default\nonly follows up to 5 redirects in a row, though this is configurable via the\n<code>maxRedirects</code> parameter:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val r0 = requests.get(&quot;http://www.github.com&quot;, maxRedirects = 0)\n// Response(&quot;http://www.github.com&quot;, 301, &quot;Moved Permanently&quot;, ...\n\nr0.history\n// None\n\nval r1 = requests.get(&quot;http://www.github.com&quot;, maxRedirects = 1)\n// Response(&quot;http://www.github.com&quot;, 301, &quot;Moved Permanently&quot;, ...\n\nr1.history\n// Some(Response(&quot;http://www.github.com&quot;, 301, &quot;Moved Permanently&quot;, ...\n\nr1.history.get.history\n// None\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">r0</span> <span class=\"pl-k\">=</span> requests.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://www.github.com<span class=\"pl-pds\">\"</span></span>, maxRedirects <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Response(\"http://www.github.com\", 301, \"Moved Permanently\", ...</span>\n\nr0.history\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> None</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">r1</span> <span class=\"pl-k\">=</span> requests.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://www.github.com<span class=\"pl-pds\">\"</span></span>, maxRedirects <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Response(\"http://www.github.com\", 301, \"Moved Permanently\", ...</span>\n\nr1.history\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Some(Response(\"http://www.github.com\", 301, \"Moved Permanently\", ...</span>\n\nr1.history.get.history\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> None</span></pre></div>\n<p dir=\"auto\">As you can see, you can use <code>maxRedirects = 0</code> to disable redirect handling\ncompletely, or use another number to control how many redirects Requests follows\nbefore giving up.</p>\n<p dir=\"auto\">All of the intermediate responses in a redirect chain are available in a\nResponse's <code>.history</code> field; each <code>.history</code> points 1 response earlier, forming\na linked list of <code>Response</code> objects until the earliest response has a value of\n<code>None</code>. You can crawl up this linked list if you want to inspect the headers or\nother metadata of the intermediate redirects that brought you to your final value.</p>\n<h3 dir=\"auto\"><a id=\"user-content-client-side-certificates\" class=\"anchor\" aria-hidden=\"true\" href=\"#client-side-certificates\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Client Side Certificates</h3>\n<p dir=\"auto\">To use client certificate you need a PKCS 12 archive with private key and certificate.</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"requests.get(\n  &quot;https://client.badssl.com&quot;,\n  cert = &quot;./badssl.com-client.p12&quot;\n)\"><pre>requests.get(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://client.badssl.com<span class=\"pl-pds\">\"</span></span>,\n  cert <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./badssl.com-client.p12<span class=\"pl-pds\">\"</span></span>\n)</pre></div>\n<p dir=\"auto\">If the p12 archive is password protected you can provide a second parameter:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"requests.get(\n  &quot;https://client.badssl.com&quot;,\n  cert = (&quot;./badssl.com-client.p12&quot;, &quot;password&quot;)\n)\"><pre>requests.get(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://client.badssl.com<span class=\"pl-pds\">\"</span></span>,\n  cert <span class=\"pl-k\">=</span> (<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./badssl.com-client.p12<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>password<span class=\"pl-pds\">\"</span></span>)\n)</pre></div>\n<p dir=\"auto\">For test environments you may want to combine <code>cert</code> with the <code>verifySslCerts = false</code> option (if you have self signed SSL certificates on test servers).</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"requests.get(\n  &quot;https://client.badssl.com&quot;,\n  cert = (&quot;./badssl.com-client.p12&quot;, &quot;password&quot;),\n  verifySslCerts = false\n)\"><pre>requests.get(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://client.badssl.com<span class=\"pl-pds\">\"</span></span>,\n  cert <span class=\"pl-k\">=</span> (<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./badssl.com-client.p12<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>password<span class=\"pl-pds\">\"</span></span>),\n  verifySslCerts <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>\n)</pre></div>\n<p dir=\"auto\">You can also use a sslContext to provide a more customized ssl configuration</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val sslContext: SSLContext = //initialized sslContext\n\nrequests.get(\n  &quot;https://client.badssl.com&quot;,\n  sslcontext = sslContext\n)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">sslContext</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">SSLContext</span> <span class=\"pl-k\">=</span> <span class=\"pl-c\"><span class=\"pl-c\">//</span>initialized sslContext</span>\n\nrequests.get(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://client.badssl.com<span class=\"pl-pds\">\"</span></span>,\n  sslcontext <span class=\"pl-k\">=</span> sslContext\n)</pre></div>\n<h2 dir=\"auto\"><a id=\"user-content-sessions\" class=\"anchor\" aria-hidden=\"true\" href=\"#sessions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Sessions</h2>\n<p dir=\"auto\">A <code>requests.Session</code> automatically handles sending/receiving/persisting cookies\nfor you across multiple requests:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val s = requests.Session()\n\nval r = s.get(&quot;https://httpbin.org/cookies/set?freeform=test&quot;)\n\nval r2 = s.get(&quot;https://httpbin.org/cookies&quot;)\n\nr2.text\n// {&quot;cookies&quot;:{&quot;freeform&quot;:&quot;test&quot;}}\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">s</span> <span class=\"pl-k\">=</span> requests.<span class=\"pl-en\">Session</span>()\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">r</span> <span class=\"pl-k\">=</span> s.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/cookies/set?freeform=test<span class=\"pl-pds\">\"</span></span>)\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">r2</span> <span class=\"pl-k\">=</span> s.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/cookies<span class=\"pl-pds\">\"</span></span>)\n\nr2.text\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> {\"cookies\":{\"freeform\":\"test\"}}</span></pre></div>\n<p dir=\"auto\">If you want to deal with a website that uses cookies, it's usually easier to use\na <code>requests.Session</code> rather than passing around <code>cookie</code> variables manually.</p>\n<p dir=\"auto\">Apart from persisting cookies, sessions are also useful for consolidating common\nconfiguration that you want to use across multiple requests, e.g. custom\nheaders, cookies or other things:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val s = requests.Session(\n  headers = Map(&quot;x-special-header&quot; -&gt; &quot;omg&quot;),\n  cookieValues = Map(&quot;cookie&quot; -&gt; &quot;vanilla&quot;)\n)\n\nval r1 = s.get(&quot;https://httpbin.org/cookies&quot;)\n\nr1.text\n// {&quot;cookies&quot;:{&quot;cookie&quot;:&quot;vanilla&quot;}}\n\nval r2 = s.get(&quot;https://httpbin.org/headers&quot;)\n\nr2.text\n// {&quot;headers&quot;:{&quot;X-Special-Header&quot;:&quot;omg&quot;, ...}}\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">s</span> <span class=\"pl-k\">=</span> requests.<span class=\"pl-en\">Session</span>(\n  headers <span class=\"pl-k\">=</span> <span class=\"pl-en\">Map</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>x-special-header<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>omg<span class=\"pl-pds\">\"</span></span>),\n  cookieValues <span class=\"pl-k\">=</span> <span class=\"pl-en\">Map</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cookie<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>vanilla<span class=\"pl-pds\">\"</span></span>)\n)\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">r1</span> <span class=\"pl-k\">=</span> s.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/cookies<span class=\"pl-pds\">\"</span></span>)\n\nr1.text\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> {\"cookies\":{\"cookie\":\"vanilla\"}}</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">r2</span> <span class=\"pl-k\">=</span> s.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/headers<span class=\"pl-pds\">\"</span></span>)\n\nr2.text\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> {\"headers\":{\"X-Special-Header\":\"omg\", ...}}</span></pre></div>\n<h2 dir=\"auto\"><a id=\"user-content-why-requests-scala\" class=\"anchor\" aria-hidden=\"true\" href=\"#why-requests-scala\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Why Requests-Scala?</h2>\n<p dir=\"auto\">There is a whole zoo of HTTP clients in the Scala ecosystem. Akka-http, Play-WS,\nSTTP, HTTP4S, Scalaj-HTTP, RosHTTP, Dispatch. Nevertheless, none of them come\nclose to the ease and weightlessness of using Kenneth Reitz's\n<a href=\"http://docs.python-requests.org/\" rel=\"nofollow\">Requests</a> library: too many implicits,\noperators, builders, monads, and other things.</p>\n<p dir=\"auto\">When I want to make a HTTP request, I do not want to know about\n<code>.unsafeRunSync</code>, infix methods like <code>svc OK as.String</code>, or define implicit\n<code>ActorSystem</code>s, <code>ActorMaterializer</code>s, and <code>ExecutionContext</code>s. So far\n<a href=\"https://github.com/softwaremill/sttp\">sttp</a> and\n<a href=\"https://github.com/scalaj/scalaj-http\">scalaj-http</a> come closest to what I\nwant, but still fall short: both still use a pattern of fluent builders that to\nme doesn't fit how I think when making a HTTP request. I just want to call one\nfunction to make a HTTP request, and get back my HTTP response.</p>\n<p dir=\"auto\">Most people will never reach the scale that asynchrony matters, and most of\nthose who do reach that scale will only need it in a small number of specialized\nplaces, not everywhere.</p>\n<p dir=\"auto\">Compare the getting-started code necessary for Requests-Scala against some other\ncommon Scala HTTP clients:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Requests-Scala\nval r = requests.get(\n  &quot;https://api.github.com/search/repositories&quot;,\n  params = Map(&quot;q&quot; -&gt; &quot;http language:scala&quot;, &quot;sort&quot; -&gt; &quot;stars&quot;)\n)\n\nr.text\n// {&quot;login&quot;:&quot;lihaoyi&quot;,&quot;id&quot;:934140,&quot;node_id&quot;:&quot;MDQ6VXNlcjkzNDE0MA==&quot;,...\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> Requests-Scala</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">r</span> <span class=\"pl-k\">=</span> requests.get(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://api.github.com/search/repositories<span class=\"pl-pds\">\"</span></span>,\n  params <span class=\"pl-k\">=</span> <span class=\"pl-en\">Map</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>q<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http language:scala<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sort<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>stars<span class=\"pl-pds\">\"</span></span>)\n)\n\nr.text\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> {\"login\":\"lihaoyi\",\"id\":934140,\"node_id\":\"MDQ6VXNlcjkzNDE0MA==\",...</span></pre></div>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Akka-Http\nimport akka.actor.ActorSystem\nimport akka.http.scaladsl.Http\nimport akka.http.scaladsl.model._\nimport akka.stream.ActorMaterializer\n\nimport scala.concurrent.Future\nimport scala.util.{ Failure, Success }\n\nimplicit val system = ActorSystem()\nimplicit val materializer = ActorMaterializer()\n// needed for the future flatMap/onComplete in the end\nimplicit val executionContext = system.dispatcher\n\nval responseFuture: Future[HttpResponse] = Http().singleRequest(HttpRequest(uri = &quot;http://akka.io&quot;))\n\nresponseFuture\n  .onComplete {\n    case Success(res) =&gt; println(res)\n    case Failure(_)   =&gt; sys.error(&quot;something wrong&quot;)\n  }\n\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> Akka-Http</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">akka</span>.<span class=\"pl-en\">actor</span>.<span class=\"pl-en\">ActorSystem</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">akka</span>.<span class=\"pl-en\">http</span>.<span class=\"pl-en\">scaladsl</span>.<span class=\"pl-en\">Http</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">akka</span>.<span class=\"pl-en\">http</span>.<span class=\"pl-en\">scaladsl</span>.<span class=\"pl-en\">model</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">akka</span>.<span class=\"pl-en\">stream</span>.<span class=\"pl-en\">ActorMaterializer</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">scala</span>.<span class=\"pl-en\">concurrent</span>.<span class=\"pl-en\">Future</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">scala</span>.<span class=\"pl-en\">util</span>.{ <span class=\"pl-en\">Failure</span>, <span class=\"pl-en\">Success</span> }\n\n<span class=\"pl-k\">implicit</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">system</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">ActorSystem</span>()\n<span class=\"pl-k\">implicit</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">materializer</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">ActorMaterializer</span>()\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> needed for the future flatMap/onComplete in the end</span>\n<span class=\"pl-k\">implicit</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">executionContext</span> <span class=\"pl-k\">=</span> system.dispatcher\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">responseFuture</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Future</span>[<span class=\"pl-en\">HttpResponse</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">Http</span>().singleRequest(<span class=\"pl-en\">HttpRequest</span>(uri <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://akka.io<span class=\"pl-pds\">\"</span></span>))\n\nresponseFuture\n  .onComplete {\n    <span class=\"pl-k\">case</span> <span class=\"pl-en\">Success</span>(res) <span class=\"pl-k\">=&gt;</span> println(res)\n    <span class=\"pl-k\">case</span> <span class=\"pl-en\">Failure</span>(_)   <span class=\"pl-k\">=&gt;</span> sys.error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>something wrong<span class=\"pl-pds\">\"</span></span>)\n  }\n</pre></div>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Play-WS\n\nimport akka.actor.ActorSystem\nimport akka.stream.ActorMaterializer\nimport play.api.libs.ws._\nimport play.api.libs.ws.ahc._\n\nimport scala.concurrent.Future\n\nimport DefaultBodyReadables._\nimport scala.concurrent.ExecutionContext.Implicits._\n\n// Create Akka system for thread and streaming management\nimplicit val system = ActorSystem()\nimplicit val materializer = ActorMaterializer()\n\n// Create the standalone WS client\n// no argument defaults to a AhcWSClientConfig created from\n// &quot;AhcWSClientConfigFactory.forConfig(ConfigFactory.load, this.getClass.getClassLoader)&quot;\nval wsClient = StandaloneAhcWSClient()\n\nwsClient.url(&quot;http://www.google.com&quot;).get()\n  .map { response ⇒\n    val statusText: String = response.statusText\n    val body = response.body[String]\n    println(s&quot;Got a response $statusText&quot;)\n  }.\n  andThen { case _ =&gt; wsClient.close() }\n  andThen { case _ =&gt; system.terminate() }\n\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> Play-WS</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">akka</span>.<span class=\"pl-en\">actor</span>.<span class=\"pl-en\">ActorSystem</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">akka</span>.<span class=\"pl-en\">stream</span>.<span class=\"pl-en\">ActorMaterializer</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">play</span>.<span class=\"pl-en\">api</span>.<span class=\"pl-en\">libs</span>.<span class=\"pl-en\">ws</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">play</span>.<span class=\"pl-en\">api</span>.<span class=\"pl-en\">libs</span>.<span class=\"pl-en\">ws</span>.<span class=\"pl-en\">ahc</span>.<span class=\"pl-en\">_</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">scala</span>.<span class=\"pl-en\">concurrent</span>.<span class=\"pl-en\">Future</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">DefaultBodyReadables</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">scala</span>.<span class=\"pl-en\">concurrent</span>.<span class=\"pl-en\">ExecutionContext</span>.<span class=\"pl-en\">Implicits</span>.<span class=\"pl-en\">_</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Create Akka system for thread and streaming management</span>\n<span class=\"pl-k\">implicit</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">system</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">ActorSystem</span>()\n<span class=\"pl-k\">implicit</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">materializer</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">ActorMaterializer</span>()\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Create the standalone WS client</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> no argument defaults to a AhcWSClientConfig created from</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> \"AhcWSClientConfigFactory.forConfig(ConfigFactory.load, this.getClass.getClassLoader)\"</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">wsClient</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">StandaloneAhcWSClient</span>()\n\nwsClient.url(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://www.google.com<span class=\"pl-pds\">\"</span></span>).get()\n  .map { response <span class=\"pl-k\">⇒</span>\n    <span class=\"pl-k\">val</span> <span class=\"pl-smi\">statusText</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">String</span> <span class=\"pl-k\">=</span> response.statusText\n    <span class=\"pl-k\">val</span> <span class=\"pl-smi\">body</span> <span class=\"pl-k\">=</span> response.body[<span class=\"pl-en\">String</span>]\n    println(<span class=\"pl-k\">s</span><span class=\"pl-s\">\"</span><span class=\"pl-s\">Got a response </span>$statusText<span class=\"pl-s\">\"</span>)\n  }.\n  andThen { <span class=\"pl-k\">case</span> _ <span class=\"pl-k\">=&gt;</span> wsClient.close() }\n  andThen { <span class=\"pl-k\">case</span> _ <span class=\"pl-k\">=&gt;</span> system.terminate() }\n</pre></div>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Http4s\nimport org.http4s.client.dsl.io._\nimport org.http4s.headers._\nimport org.http4s.MediaType\n\nval request = GET(\n  Uri.uri(&quot;https://my-lovely-api.com/&quot;),\n  Authorization(Credentials.Token(AuthScheme.Bearer, &quot;open sesame&quot;)),\n  Accept(MediaType.application.json)\n)\n\nhttpClient.expect[String](request)\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> Http4s</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">org</span>.<span class=\"pl-en\">http4s</span>.<span class=\"pl-en\">client</span>.<span class=\"pl-en\">dsl</span>.<span class=\"pl-en\">io</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">org</span>.<span class=\"pl-en\">http4s</span>.<span class=\"pl-en\">headers</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">org</span>.<span class=\"pl-en\">http4s</span>.<span class=\"pl-en\">MediaType</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">request</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">GET</span>(\n  <span class=\"pl-en\">Uri</span>.uri(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://my-lovely-api.com/<span class=\"pl-pds\">\"</span></span>),\n  <span class=\"pl-en\">Authorization</span>(<span class=\"pl-en\">Credentials</span>.<span class=\"pl-en\">Token</span>(<span class=\"pl-en\">AuthScheme</span>.<span class=\"pl-en\">Bearer</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>open sesame<span class=\"pl-pds\">\"</span></span>)),\n  <span class=\"pl-en\">Accept</span>(<span class=\"pl-en\">MediaType</span>.application.json)\n)\n\nhttpClient.expect[<span class=\"pl-en\">String</span>](request)</pre></div>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// sttp\nimport com.softwaremill.sttp._\n\nval sort: Option[String] = None\nval query = &quot;http language:scala&quot;\n\n// the `query` parameter is automatically url-encoded\n// `sort` is removed, as the value is not defined\nval request = sttp.get(uri&quot;https://api.github.com/search/repositories?q=$query&amp;sort=$sort&quot;)\n\nimplicit val backend = HttpURLConnectionBackend()\nval response = request.send()\n\n// response.unsafeBody: by default read into a String\nprintln(response.unsafeBody)\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> sttp</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">com</span>.<span class=\"pl-en\">softwaremill</span>.<span class=\"pl-en\">sttp</span>.<span class=\"pl-en\">_</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">sort</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Option</span>[<span class=\"pl-en\">String</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">None</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">query</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http language:scala<span class=\"pl-pds\">\"</span></span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> the `query` parameter is automatically url-encoded</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> `sort` is removed, as the value is not defined</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">request</span> <span class=\"pl-k\">=</span> sttp.get(<span class=\"pl-k\">uri</span><span class=\"pl-s\">\"</span><span class=\"pl-s\">https://api.github.com/search/repositories?q=</span>$query<span class=\"pl-s\">&amp;sort=</span>$sort<span class=\"pl-s\">\"</span>)\n\n<span class=\"pl-k\">implicit</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">backend</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">HttpURLConnectionBackend</span>()\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">response</span> <span class=\"pl-k\">=</span> request.send()\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> response.unsafeBody: by default read into a String</span>\nprintln(response.unsafeBody)</pre></div>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Dispatch\nimport dispatch._, Defaults._\nval svc = url(&quot;http://api.hostip.info/country.php&quot;)\nval country = Http.default(svc OK as.String)\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> Dispatch</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">dispatch</span>.<span class=\"pl-en\">_</span>, <span class=\"pl-en\">Defaults</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">svc</span> <span class=\"pl-k\">=</span> url(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://api.hostip.info/country.php<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">country</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Http</span>.default(svc <span class=\"pl-en\">OK</span> as.<span class=\"pl-en\">String</span>)</pre></div>\n<p dir=\"auto\">The existing clients require a complex mix of imports, implicits, operators, and\nDSLs. The goal of Requests-Scala is to do away with all of that: your HTTP\nrequest is just a function call that takes parameters; that is all you need to\nknow.</p>\n<p dir=\"auto\">As it turns out, Kenneth Reitz's Requests is\n<a href=\"https://github.com/requests/requests/tree/master/requests\">not a lot of code</a>.\nMost of the heavy lifting is done in other libraries, and his library is a just\nthin-shim that makes the API 10x better. It turns out on the JVM most of the\nheavy lifting is also done for you, by <code>java.net.HttpUrlConnection</code> in the\nsimplest case, and other libraries like\n<a href=\"https://github.com/AsyncHttpClient/async-http-client\">AsyncHttpClient</a> for more\nadvanced use cases.</p>\n<p dir=\"auto\">Given that's the case, how hard can it be to port over a dozen Python files to\nScala? This library attempts to do that: class by class, method by method,\nkeyword-argument by keyword-argument. Not everything has been implemented yet,\nsome things differ (some avoidably, some unavoidably), and it's nowhere near as\npolished, but you should definitely try it out as the HTTP client for your next\ncodebase or project!</p>\n<h2 dir=\"auto\"><a id=\"user-content-changelog\" class=\"anchor\" aria-hidden=\"true\" href=\"#changelog\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Changelog</h2>\n<h3 dir=\"auto\"><a id=\"user-content-070\" class=\"anchor\" aria-hidden=\"true\" href=\"#070\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.7.0</h3>\n<ul dir=\"auto\">\n<li>Allow <code>requests.send(method)(...)</code> to dynamically choose a HTTP method <a href=\"https://github.com/com-lihaoyi/requests-scala/pull/94\">#94</a></li>\n<li>Avoid crashing on gzipped HEAD requests <a href=\"https://github.com/com-lihaoyi/requests-scala/pull/95\">#95</a></li>\n<li>All exceptions now inherit from a <code>RequestsException</code> base class</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-067\" class=\"anchor\" aria-hidden=\"true\" href=\"#067\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.6.7</h3>\n<ul dir=\"auto\">\n<li>Add support for Scala 3.0.0-RC2</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-065\" class=\"anchor\" aria-hidden=\"true\" href=\"#065\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.6.5</h3>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code>requests.Response</code> now implements the <code>geny.Readable</code> interface, and can be\ndirectly passed to compatible APIs like <code>ujson.read</code> or <code>os.write</code></p>\n</li>\n<li>\n<p dir=\"auto\">Add support for custom SSL certs</p>\n</li>\n<li>\n<p dir=\"auto\">Allow body content for DELETE requests</p>\n</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-051\" class=\"anchor\" aria-hidden=\"true\" href=\"#051\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.5.1</h3>\n<ul dir=\"auto\">\n<li>Made <code>requests.{get,post,put,delete,head,options,patch}.stream</code> return a\n<a href=\"https://github.com/lihaoyi/geny#readable\">Readable</a>, allowing upickle and\nfastparse to operate directly on the streaming input</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-047\" class=\"anchor\" aria-hidden=\"true\" href=\"#047\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.4.7</h3>\n<ul dir=\"auto\">\n<li><code>requests.{get,post,put,delete,head,options,patch}</code> now throw a\n<code>requests.RequestFailedException(val response: Response)</code> if a non-2xx status\ncode is received. You can disable throwing the exception by passing in\n<code>check = false</code></li>\n<li><code>requests.{get,post,put,delete,head,options,patch}.stream</code> now returns a\n<a href=\"https://github.com/lihaoyi/geny#writable\">Writable</a> instead of taking\ncallbacks.</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-030\" class=\"anchor\" aria-hidden=\"true\" href=\"#030\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.3.0</h3>\n<ul dir=\"auto\">\n<li>Support for uploading\n<a href=\"https://github.com/lihaoyi/geny#writable\">geny.Writable</a> data types in\nrequest bodies.</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-020\" class=\"anchor\" aria-hidden=\"true\" href=\"#020\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.2.0</h3>\n<ul dir=\"auto\">\n<li>Support for Scala 2.13.0 final</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-019\" class=\"anchor\" aria-hidden=\"true\" href=\"#019\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.1.9</h3>\n<ul dir=\"auto\">\n<li>Support <code>PATCH</code> and other verbs</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-018\" class=\"anchor\" aria-hidden=\"true\" href=\"#018\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.1.8</h3>\n<ul dir=\"auto\">\n<li>Support for <code>Bearer</code> token auth</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-017\" class=\"anchor\" aria-hidden=\"true\" href=\"#017\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.1.7</h3>\n<ul dir=\"auto\">\n<li><code>RequestBlob</code> headers no longer over-write session headers</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-016\" class=\"anchor\" aria-hidden=\"true\" href=\"#016\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.1.6</h3>\n<ul dir=\"auto\">\n<li>Allow POSTs to take URL parameters</li>\n<li>Return response body for all 2xx response codes</li>\n<li>Always set <code>Content-Length</code> to 0 when request body is empty</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-015\" class=\"anchor\" aria-hidden=\"true\" href=\"#015\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>0.1.5</h3>\n<ul dir=\"auto\">\n<li>First Release</li>\n</ul>\n</article></div>",
    "contributors" : [
      {
        "login" : "lihaoyi",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/934140?v=4",
        "url" : "https://api.github.com/users/lihaoyi",
        "contributions" : 95
      },
      {
        "login" : "anatoliykmetyuk",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2614813?v=4",
        "url" : "https://api.github.com/users/anatoliykmetyuk",
        "contributions" : 19
      },
      {
        "login" : "lolgab",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/5793054?v=4",
        "url" : "https://api.github.com/users/lolgab",
        "contributions" : 6
      },
      {
        "login" : "jodersky",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1007012?v=4",
        "url" : "https://api.github.com/users/jodersky",
        "contributions" : 6
      },
      {
        "login" : "Hakky54",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/16032204?v=4",
        "url" : "https://api.github.com/users/Hakky54",
        "contributions" : 3
      },
      {
        "login" : "liancheng",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/230655?v=4",
        "url" : "https://api.github.com/users/liancheng",
        "contributions" : 2
      },
      {
        "login" : "kiviok",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/17784026?v=4",
        "url" : "https://api.github.com/users/kiviok",
        "contributions" : 2
      },
      {
        "login" : "thomhickey",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/9190319?v=4",
        "url" : "https://api.github.com/users/thomhickey",
        "contributions" : 2
      },
      {
        "login" : "alexarchambault",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/7063723?v=4",
        "url" : "https://api.github.com/users/alexarchambault",
        "contributions" : 1
      },
      {
        "login" : "bilal-fazlani",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3396271?v=4",
        "url" : "https://api.github.com/users/bilal-fazlani",
        "contributions" : 1
      },
      {
        "login" : "ceyhunsony",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/36478791?v=4",
        "url" : "https://api.github.com/users/ceyhunsony",
        "contributions" : 1
      },
      {
        "login" : "dirkmeis-db",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/89049477?v=4",
        "url" : "https://api.github.com/users/dirkmeis-db",
        "contributions" : 1
      },
      {
        "login" : "Magua",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/879467?v=4",
        "url" : "https://api.github.com/users/Magua",
        "contributions" : 1
      },
      {
        "login" : "mycaule",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/6161385?v=4",
        "url" : "https://api.github.com/users/mycaule",
        "contributions" : 1
      },
      {
        "login" : "phderome",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/11035032?v=4",
        "url" : "https://api.github.com/users/phderome",
        "contributions" : 1
      },
      {
        "login" : "sksamuel",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/743706?v=4",
        "url" : "https://api.github.com/users/sksamuel",
        "contributions" : 1
      },
      {
        "login" : "gitter-badger",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/8518239?v=4",
        "url" : "https://api.github.com/users/gitter-badger",
        "contributions" : 1
      },
      {
        "login" : "victe",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3897090?v=4",
        "url" : "https://api.github.com/users/victe",
        "contributions" : 1
      },
      {
        "login" : "YikSanChan",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/17229109?v=4",
        "url" : "https://api.github.com/users/YikSanChan",
        "contributions" : 1
      }
    ],
    "commits" : 146,
    "topics" : [
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "chatroom" : null,
    "openIssues" : [
      {
        "number" : 97,
        "title" : "`data` seems to be discarded in GET requests",
        "url" : "https://github.com/com-lihaoyi/requests-scala/issues/97"
      },
      {
        "number" : 93,
        "title" : "HTTP basic authentication in the URL is not available ",
        "url" : "https://github.com/com-lihaoyi/requests-scala/issues/93"
      },
      {
        "number" : 88,
        "title" : "request's encoding is corrupt",
        "url" : "https://github.com/com-lihaoyi/requests-scala/issues/88"
      },
      {
        "number" : 87,
        "title" : "[BUG] Regression since 0.6.6+, quoted cookie values cause IIS server to crash",
        "url" : "https://github.com/com-lihaoyi/requests-scala/issues/87"
      },
      {
        "number" : 86,
        "title" : "Host name verifier",
        "url" : "https://github.com/com-lihaoyi/requests-scala/issues/86"
      },
      {
        "number" : 85,
        "title" : "Clarify timeouts unit",
        "url" : "https://github.com/com-lihaoyi/requests-scala/issues/85"
      },
      {
        "number" : 79,
        "title" : "How to set proxy with username and password ？",
        "url" : "https://github.com/com-lihaoyi/requests-scala/issues/79"
      },
      {
        "number" : 74,
        "title" : "Bug: Exception on empty cookie header",
        "url" : "https://github.com/com-lihaoyi/requests-scala/issues/74"
      },
      {
        "number" : 71,
        "title" : "Incorrect header check with Content-Encoding deflate",
        "url" : "https://github.com/com-lihaoyi/requests-scala/issues/71"
      },
      {
        "number" : 60,
        "title" : "feature request: websockets",
        "url" : "https://github.com/com-lihaoyi/requests-scala/issues/60"
      },
      {
        "number" : 56,
        "title" : "Proxy servers",
        "url" : "https://github.com/com-lihaoyi/requests-scala/issues/56"
      },
      {
        "number" : 44,
        "title" : "Scala.js support",
        "url" : "https://github.com/com-lihaoyi/requests-scala/issues/44"
      },
      {
        "number" : 42,
        "title" : "BUG? - Multipart upload removes content-length",
        "url" : "https://github.com/com-lihaoyi/requests-scala/issues/42"
      },
      {
        "number" : 36,
        "title" : "Async request",
        "url" : "https://github.com/com-lihaoyi/requests-scala/issues/36"
      },
      {
        "number" : 32,
        "title" : "request should have a utility to print out the equivalent `curl` statement instead of actually executing the request ",
        "url" : "https://github.com/com-lihaoyi/requests-scala/issues/32"
      },
      {
        "number" : 20,
        "title" : "Scala native support",
        "url" : "https://github.com/com-lihaoyi/requests-scala/issues/20"
      }
    ],
    "scalaPercentage" : null,
    "license" : null
  },
  "settings" : {
    "defaultStableVersion" : true,
    "defaultArtifact" : null,
    "strictVersions" : false,
    "customScalaDoc" : null,
    "documentationLinks" : [
    ],
    "deprecated" : false,
    "contributorsWanted" : false,
    "artifactDeprecations" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "http-servers-and-clients",
    "beginnerIssuesLabel" : null
  }
}