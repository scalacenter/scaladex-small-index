{
  "organization" : "com-lihaoyi",
  "repository" : "geny",
  "creationDate" : 1476628492000,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1730768067358
    }
  },
  "githubInfo" : {
    "homepage" : "",
    "description" : "Provides the geny.Generator data type, the dual to a scala.Iterator that can ensure resource cleanup",
    "logo" : "https://avatars.githubusercontent.com/u/79346799?v=4",
    "stars" : 93,
    "forks" : 25,
    "watchers" : 5,
    "issues" : 14,
    "creationDate" : 1476620753000,
    "readme" : "<div id=\"readme\" class=\"adoc\" data-path=\"Readme.adoc\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div class=\"markdown-heading\" dir=\"auto\"><h1 class=\"heading-element\" dir=\"auto\">Geny</h1><a id=\"user-content-geny\" class=\"anchor\" aria-label=\"Permalink: Geny\" href=\"#geny\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div id=\"user-content-preamble\" dir=\"auto\">\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// Mill\nivy&quot;com.lihaoyi::geny:1.1.1&quot;\nivy&quot;com.lihaoyi::geny::1.1.1&quot; // Scala.js / Native\n\n// SBT\n&quot;com.lihaoyi&quot; %% &quot;geny&quot; % &quot;1.1.1&quot;\n&quot;com.lihaoyi&quot; %%% &quot;geny&quot; % &quot;1.1.1&quot; // Scala.js / Native\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> Mill</span>\n<span class=\"pl-k\">ivy</span><span class=\"pl-s\">\"</span><span class=\"pl-s\">com.lihaoyi::geny:1.1.1</span><span class=\"pl-s\">\"</span>\n<span class=\"pl-k\">ivy</span><span class=\"pl-s\">\"</span><span class=\"pl-s\">com.lihaoyi::geny::1.1.1</span><span class=\"pl-s\">\"</span> <span class=\"pl-c\"><span class=\"pl-c\">//</span> Scala.js / Native</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> SBT</span>\n<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.lihaoyi<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>geny<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.1.1<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.lihaoyi<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>geny<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.1.1<span class=\"pl-pds\">\"</span></span> <span class=\"pl-c\"><span class=\"pl-c\">//</span> Scala.js / Native</span></pre></div>\n</div>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">Geny is a small library that provides push-based versions of common standard\nlibrary interfaces:</p>\n</div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><a href=\"#generator\"><code>geny.Generator[T]</code></a>, a push-based version of <code>scala.Iterator[T]</code></p>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"#writable\"><code>geny.Writable</code></a>, a push-based version of <code>java.io.InputStream</code></p>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"#readable\"><code>geny.Readable</code></a>, a pull-based subclass of <code>Writable</code></p>\n</li>\n</ul>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">More background behind the <code>Writable</code> and <code>Readable</code> interface can be found in\nthis blog post:</p>\n</div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><a href=\"http://www.lihaoyi.com/post/StandardizingIOInterfacesforScalaLibraries.html\" rel=\"nofollow\">Standardizing IO Interfaces for Scala Libraries</a></p>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"user-content-toc\" dir=\"auto\">\n<div id=\"user-content-toctitle\" dir=\"auto\">Table of Contents</div>\n<ul dir=\"auto\">\n<li><a href=\"#generator\"><code>Generator</code></a>\n<ul dir=\"auto\">\n<li><a href=\"#construction\">Construction</a></li>\n<li><a href=\"#terminal-operations\">Terminal Operations</a></li>\n<li><a href=\"#transformations\">Transformations</a></li>\n<li><a href=\"#self-closing-generators\">Self Closing Generators</a></li>\n</ul>\n</li>\n<li><a href=\"#writable\"><code>Writable</code></a></li>\n<li><a href=\"#readable\"><code>Readable</code></a></li>\n<li><a href=\"#changelog\">Changelog</a>\n<ul dir=\"auto\">\n<li><a href=\"#1-1-1-2024-06-14\">1.1.1 - 2024-06-14</a></li>\n<li><a href=\"#1-1-0-2024-04-14\">1.1.0 - 2024-04-14</a></li>\n<li><a href=\"#1-0-0-2022-09-15\">1.0.0 - 2022-09-15</a></li>\n<li><a href=\"#0-7-1-2022-01-23\">0.7.1 - 2022-01-23</a></li>\n<li><a href=\"#0-7-0-2021-12-10\">0.7.0 - 2021-12-10</a></li>\n<li><a href=\"#older-versions\">Older Versions</a></li>\n</ul>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h2 id=\"user-content-generator\" class=\"heading-element\" dir=\"auto\"><code>Generator</code></h2><a id=\"user-content-generator\" class=\"anchor\" aria-label=\"Permalink: Generator\" href=\"#generator\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\"><code>Generator</code> is basically the inverse of a <code>scala.Iterator</code>: instead of the core\nfunctionality being the pull-based <code>hasNext</code> and <code>next: T</code> methods, the core is\nbased around the push-based <code>generate</code> method, which is similar to <code>foreach</code>\nwith some tweaks.</p>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">Unlike a <code>scala.Iterator</code>, subclasses of <code>Generator</code> can guarantee any clean\nup logic is performed by placing it after the <code>generate</code> call is made. This is\nuseful for using <code>Generator</code>s to model streaming data from files or other\nsources that require cleanup: the most common alternative, <code>scala.Iterator</code>,\nhas no way of guaranteeing that the file gets properly closed after reading.\nEven so called \"self-closing iterators\" that close the file after the iterator\nis exhausted fail to close the files if the developer uses <code>.head</code> or <code>.take</code>\nto access the first few elements of the iterator, and never exhausts it.</p>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">Although <code>geny.Generator</code> is not part of the normal collections hierarchy, the\nAPI is intentionally modelled after that of <code>scala.Iterator</code> and should be\nmostly drop-in, with conversion functions provided where you need to interact\nwith APIs using the standard Scala collections.</p>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">Geny is intentionally a tiny library with one file and zero dependencies,\nso you can depend on it (or even copy-paste it into your project) without\nfear of taking on unknown heavyweight dependencies.</p>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h3 id=\"user-content-construction\" class=\"heading-element\" dir=\"auto\">Construction</h3><a id=\"user-content-construction\" class=\"anchor\" aria-label=\"Permalink: Construction\" href=\"#construction\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<p dir=\"auto\">The two simplest ways to construct a <code>Generator</code> are via the <code>Generator(...)</code>\nand <code>Generator.from</code> constructors:</p>\n</div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import geny.Generator\n\nscala&gt; Generator(0, 1, 2)\nres1: geny.Generator[Int] = Generator(WrappedArray(0, 1, 2))\n\nscala&gt; Generator.from(Seq(1, 2, 3)) // pass in any iterable or iterator\nres2: geny.Generator[Int] = Generator(List(1, 2, 3))\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">geny</span>.<span class=\"pl-en\">Generator</span>\n\nscala<span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Generator</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>)\nres1<span class=\"pl-k\">:</span> geny.<span class=\"pl-en\">Generator</span>[<span class=\"pl-en\">Int</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">Generator</span>(<span class=\"pl-en\">WrappedArray</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>))\n\nscala<span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Generator</span>.from(<span class=\"pl-en\">Seq</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>)) <span class=\"pl-c\"><span class=\"pl-c\">//</span> pass in any iterable or iterator</span>\nres2<span class=\"pl-k\">:</span> geny.<span class=\"pl-en\">Generator</span>[<span class=\"pl-en\">Int</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">Generator</span>(<span class=\"pl-en\">List</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>))</pre></div>\n</div>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">If you need a <code>Generator</code> for a source that needs cleanup (closing\nfile-handles, database connections, etc.) you can use the\n<code>Generator.selfClosing</code> constructor:</p>\n</div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"scala&gt; class DummyCloseableSource {\n     |   val iterator = Iterator(1, 2, 3, 4, 5, 6, 7, 8, 9)\n     |   var closed = false\n     |   def close() = {\n     |     closed = true\n     |   }\n     | }\ndefined class DummyCloseableSource\n\nscala&gt; val g = Generator.selfClosing {\n     |   val closeable = new DummyCloseableSource()\n     |   (closeable.iterator, () =&gt; closeable.close())\n     | }\ng: geny.Generator[Int] = Gen.SelfClosing(...)\"><pre>scala<span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">DummyCloseableSource</span> {\n     <span class=\"pl-k\">|</span>   <span class=\"pl-k\">val</span> <span class=\"pl-v\">iterator</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Iterator</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">7</span>, <span class=\"pl-c1\">8</span>, <span class=\"pl-c1\">9</span>)\n     <span class=\"pl-k\">|</span>   <span class=\"pl-k\">var</span> <span class=\"pl-v\">closed</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>\n     <span class=\"pl-k\">|</span>   <span class=\"pl-k\">def</span> <span class=\"pl-en\">close</span>() <span class=\"pl-k\">=</span> {\n     <span class=\"pl-k\">|</span>     closed <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>\n     <span class=\"pl-k\">|</span>   }\n     <span class=\"pl-k\">|</span> }\ndefined <span class=\"pl-k\">class</span> <span class=\"pl-en\">DummyCloseableSource</span>\n\nscala<span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">g</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Generator</span>.selfClosing {\n     <span class=\"pl-k\">|</span>   <span class=\"pl-k\">val</span> <span class=\"pl-v\">closeable</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">DummyCloseableSource</span>()\n     <span class=\"pl-k\">|</span>   (closeable.iterator, () <span class=\"pl-k\">=&gt;</span> closeable.close())\n     <span class=\"pl-k\">|</span> }\ng<span class=\"pl-k\">:</span> geny.<span class=\"pl-en\">Generator</span>[<span class=\"pl-en\">Int</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">Gen</span>.<span class=\"pl-en\">SelfClosing</span>(...)</pre></div>\n</div>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">This constructor takes a block that will be called to generate a tuple of an\n<code>Iterator[T]</code> and a cleanup function of type <code>() =&gt; Unit</code>. Each time the\n<code>Generator</code> is evaluated:</p>\n</div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">A new pair of <code>(Iterator[T], () =&gt; Unit)</code> is created using this block</p>\n</li>\n<li>\n<p dir=\"auto\">The iterator is used to generate however many elements are necessary</p>\n</li>\n<li>\n<p dir=\"auto\">the cleanup function is called.</p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h3 id=\"user-content-terminal-operations\" class=\"heading-element\" dir=\"auto\">Terminal Operations</h3><a id=\"user-content-terminal-operations\" class=\"anchor\" aria-label=\"Permalink: Terminal Operations\" href=\"#terminal-operations\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<p dir=\"auto\">Transformations on a <code>Generator</code> are lazy: calling methods like <code>filter</code>\nor <code>map</code> do not evaluate the entire Generator, but instead construct a new\nGenerator that delegates to the original. The only methods that evaluate\nthe <code>Generator</code> are the \"terminal operation\" methods like\n<code>foreach</code>/<code>find</code>, or the \"Conversion\" methods like <code>toArray</code> or\nsimilar. In this way, <code>Generator</code> behaves similarly to <code>Iterator</code>, whose\n<code>map</code>/<code>filter</code> methods are also lazy until terminal oepration is called.</p>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">Terminal operations include the following:</p>\n</div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"scala&gt; Generator(0, 1, 2).toSeq\nres3: Seq[Int] = ArrayBuffer(0, 1, 2)\n\nscala&gt; Generator(0, 1, 2).reduceLeft(_ + _)\nres4: Int = 3\n\nscala&gt; Generator(0, 1, 2).foldLeft(0)(_ + _)\nres5: Int = 3\n\nscala&gt; Generator(0, 1, 2).exists(_ == 3)\nres6: Boolean = false\n\nscala&gt; Generator(0, 1, 2).count(_ &gt; 0)\nres7: Int = 2\n\nscala&gt; Generator(0, 1, 2).forall(_ &gt;= 0)\nres8: Boolean = true\"><pre>scala<span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Generator</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>).toSeq\nres3<span class=\"pl-k\">:</span> <span class=\"pl-en\">Seq</span>[<span class=\"pl-en\">Int</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">ArrayBuffer</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>)\n\nscala<span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Generator</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>).reduceLeft(_ <span class=\"pl-k\">+</span> _)\nres4<span class=\"pl-k\">:</span> <span class=\"pl-en\">Int</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">3</span>\n\nscala<span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Generator</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>).foldLeft(<span class=\"pl-c1\">0</span>)(_ <span class=\"pl-k\">+</span> _)\nres5<span class=\"pl-k\">:</span> <span class=\"pl-en\">Int</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">3</span>\n\nscala<span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Generator</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>).exists(_ <span class=\"pl-k\">==</span> <span class=\"pl-c1\">3</span>)\nres6<span class=\"pl-k\">:</span> <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>\n\nscala<span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Generator</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>).count(_ <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>)\nres7<span class=\"pl-k\">:</span> <span class=\"pl-en\">Int</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">2</span>\n\nscala<span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Generator</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>).forall(_ <span class=\"pl-k\">&gt;=</span> <span class=\"pl-c1\">0</span>)\nres8<span class=\"pl-k\">:</span> <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span></pre></div>\n</div>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">Overall, they behave mostly the same as on the standard Scala collections.\nNot every method is supported, but even those that aren’t provided can easily\nbe re-implemented using <code>foreach</code> and the other methods available.</p>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h3 id=\"user-content-transformations\" class=\"heading-element\" dir=\"auto\">Transformations</h3><a id=\"user-content-transformations\" class=\"anchor\" aria-label=\"Permalink: Transformations\" href=\"#transformations\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<p dir=\"auto\">Transformations on a <code>Generator</code> are lazy: they do not immediately return a\nresult, and only build up a computation:</p>\n</div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"scala&gt; Generator(0, 1, 2).map(_ + 1)\nres9: geny.Generator[Int] = Generator(WrappedArray(0, 1, 2)).map(&lt;function1&gt;)\n\nscala&gt; Generator(0, 1, 2).map { x =&gt; println(x); x + 1 }\nres10: geny.Generator[Int] = Generator(WrappedArray(0, 1, 2)).map(&lt;function1&gt;)\"><pre>scala<span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Generator</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>).map(_ <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>)\nres9<span class=\"pl-k\">:</span> geny.<span class=\"pl-en\">Generator</span>[<span class=\"pl-en\">Int</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">Generator</span>(<span class=\"pl-en\">WrappedArray</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>)).map(&lt;<span class=\"pl-ent\">function1</span>&gt;)\n\nscala<span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Generator</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>).map { x <span class=\"pl-k\">=&gt;</span> println(x); x <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span> }\nres10<span class=\"pl-k\">:</span> geny.<span class=\"pl-en\">Generator</span>[<span class=\"pl-en\">Int</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">Generator</span>(<span class=\"pl-en\">WrappedArray</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>)).map(&lt;<span class=\"pl-ent\">function1</span>&gt;)</pre></div>\n</div>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">This computation will be evaluated when one of the\n<a href=\"#terminal-operations\">Terminal Operation</a>s described above is called:</p>\n</div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"scala&gt; res10.toSeq\n0\n1\n2\nres11: Seq[Int] = ArrayBuffer(1, 2, 3)\"><pre>scala<span class=\"pl-k\">&gt;</span> res10.toSeq\n<span class=\"pl-c1\">0</span>\n<span class=\"pl-c1\">1</span>\n<span class=\"pl-c1\">2</span>\nres11<span class=\"pl-k\">:</span> <span class=\"pl-en\">Seq</span>[<span class=\"pl-en\">Int</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">ArrayBuffer</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>)</pre></div>\n</div>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">Most of the common operations on the Scala collections are supported:</p>\n</div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"scala&gt; (Generator(0, 1, 2).filter(_ % 2 == 0).map(_ * 2).drop(2) ++\n       Generator(5, 6, 7).map(_.toString.toSeq).flatMap(x =&gt; x))\nres12: geny.Generator[AnyVal] = Generator(WrappedArray(0, 1, 2)).filter(&lt;function1&gt;).map(&lt;function1&gt;).slice(2, 2147483647) ++ Generator(WrappedArray(5, 6, 7)).map(&lt;function1&gt;).map(&lt;function1&gt;)\n\nscala&gt; res12.toSeq\nres13: Seq[AnyVal] = ArrayBuffer(5, 6, 7)\n\nscala&gt; Generator(0, 1, 2, 3, 4, 5, 6, 7, 8, 9).flatMap(i =&gt; i.toString.toSeq).takeWhile(_ != '6').zipWithIndex.filter(_._1 != '2')\nres14: geny.Generator[(Char, Int)] = Generator(WrappedArray(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)).map(&lt;function1&gt;).takeWhile(&lt;function1&gt;).zipWithIndex.filter(&lt;function1&gt;)\n\nscala&gt; res14.toVector\nres15: Vector[(Char, Int)] = Vector((0,0), (1,1), (3,3), (4,4), (5,5))\"><pre>scala<span class=\"pl-k\">&gt;</span> (<span class=\"pl-en\">Generator</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>).filter(_ <span class=\"pl-k\">%</span> <span class=\"pl-c1\">2</span> <span class=\"pl-k\">==</span> <span class=\"pl-c1\">0</span>).map(_ <span class=\"pl-k\">*</span> <span class=\"pl-c1\">2</span>).drop(<span class=\"pl-c1\">2</span>) <span class=\"pl-k\">++</span>\n       <span class=\"pl-en\">Generator</span>(<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">7</span>).map(_.toString.toSeq).flatMap(x <span class=\"pl-k\">=&gt;</span> x))\nres12<span class=\"pl-k\">:</span> geny.<span class=\"pl-en\">Generator</span>[<span class=\"pl-en\">AnyVal</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">Generator</span>(<span class=\"pl-en\">WrappedArray</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>)).filter(&lt;<span class=\"pl-ent\">function1</span>&gt;).map(&lt;<span class=\"pl-ent\">function1</span>&gt;).slice(<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2147483647</span>) <span class=\"pl-k\">++</span> <span class=\"pl-en\">Generator</span>(<span class=\"pl-en\">WrappedArray</span>(<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">7</span>)).map(&lt;<span class=\"pl-ent\">function1</span>&gt;).map(&lt;<span class=\"pl-ent\">function1</span>&gt;)\n\nscala<span class=\"pl-k\">&gt;</span> res12.toSeq\nres13<span class=\"pl-k\">:</span> <span class=\"pl-en\">Seq</span>[<span class=\"pl-en\">AnyVal</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">ArrayBuffer</span>(<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">7</span>)\n\nscala<span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Generator</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">7</span>, <span class=\"pl-c1\">8</span>, <span class=\"pl-c1\">9</span>).flatMap(i <span class=\"pl-k\">=&gt;</span> i.toString.toSeq).takeWhile(_ <span class=\"pl-k\">!=</span> <span class=\"pl-s\">'6'</span>).zipWithIndex.filter(_._1 <span class=\"pl-k\">!=</span> <span class=\"pl-s\">'2'</span>)\nres14<span class=\"pl-k\">:</span> geny.<span class=\"pl-en\">Generator</span>[(<span class=\"pl-en\">Char</span>, <span class=\"pl-en\">Int</span>)] <span class=\"pl-k\">=</span> <span class=\"pl-en\">Generator</span>(<span class=\"pl-en\">WrappedArray</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">7</span>, <span class=\"pl-c1\">8</span>, <span class=\"pl-c1\">9</span>)).map(&lt;<span class=\"pl-ent\">function1</span>&gt;).takeWhile(&lt;<span class=\"pl-ent\">function1</span>&gt;).zipWithIndex.filter(&lt;<span class=\"pl-ent\">function1</span>&gt;)\n\nscala<span class=\"pl-k\">&gt;</span> res14.toVector\nres15<span class=\"pl-k\">:</span> <span class=\"pl-en\">Vector</span>[(<span class=\"pl-en\">Char</span>, <span class=\"pl-en\">Int</span>)] <span class=\"pl-k\">=</span> <span class=\"pl-en\">Vector</span>((<span class=\"pl-c1\">0</span>,<span class=\"pl-c1\">0</span>), (<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>), (<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">3</span>), (<span class=\"pl-c1\">4</span>,<span class=\"pl-c1\">4</span>), (<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>))</pre></div>\n</div>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">As you can see, you can <code>flatMap</code>, <code>filter</code>, <code>map</code>, <code>drop</code>, <code>takeWhile</code>, <code>++</code>\nand call other methods on the <code>Generator</code>, and it simply builds up the\ncomputation without running it. Only when a terminal operation like\n<code>toSeq</code> or <code>toVector</code> is called is it finally evaluated into a result.</p>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">Note that a <code>geny.Generator</code> is immutable, and is thus never exhausted.\nHowever, it also does not perform any memoization or caching, and so calling\na terminal operation like <code>.toSeq</code> on a <code>Generator</code> multiple times will\nevaluate any preceding transformations multiple times. If you do not want this\nto be the case, call <code>.toSeq</code> to turn it into a concrete sequence and work with\nthat.</p>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h3 id=\"user-content-self-closing-generators\" class=\"heading-element\" dir=\"auto\">Self Closing Generators</h3><a id=\"user-content-self-closing-generators\" class=\"anchor\" aria-label=\"Permalink: Self Closing Generators\" href=\"#self-closing-generators\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<p dir=\"auto\">One major use case of <code>geny.Generator</code> is to ensure resources involved in\nstreaming results from some external source get properly cleaned up. For\nexample, using <code>scala.io.Source</code>, we can get a <code>scala.Iterator</code> over the\nlines of a file. For example, you may define a helper function like this:</p>\n</div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"def getFileLines(path: String): Iterator[String] = {\n  val s = scala.io.Source.fromFile(path)(charSet)\n  s.getLines()\n}\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">getFileLines</span>(<span class=\"pl-v\">path</span>: <span class=\"pl-en\">String</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Iterator</span>[<span class=\"pl-en\">String</span>] <span class=\"pl-k\">=</span> {\n  <span class=\"pl-k\">val</span> <span class=\"pl-v\">s</span> <span class=\"pl-k\">=</span> scala.io.<span class=\"pl-en\">Source</span>.fromFile(path)(charSet)\n  s.getLines()\n}</pre></div>\n</div>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">However, this is incorrect: you never close the source <code>s</code>, and thus if you\ncall this lots of times, you end up leaving tons of open file handles! If you\nare lucky this will crash your program; if you are unlucky it will hang your\nkernel and force you to reboot your computer.</p>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">One solution to this would be to simply not write helper functions: everyone\nwho wants to read from a file must instantiate the <code>scala.io.Source</code>\nthemselves, and manually cleanup themselves. This is a possible solution, but\nis tedious and annoying. Another possible solution is to have the <code>Iterator</code>\nclose the <code>io.Source</code> itself when exhausted, but this still leaves open the\npossibility that the caller will use <code>.head</code> or <code>.take</code> on the iterator: a\nperfectly reasonable thing to do if you don’t need all the output, but one\nthat would leave a \"self-closing\" iterator open and still leaking file handles.</p>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">Using <code>geny.Generator</code>s, the helper function can instead return a\n<code>Generator.selfClosing</code>:</p>\n</div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"def getFileLines(path: String): geny.Generator[String] = Generator.selfClosing {\n  val s = scala.io.Source.fromFile(path)(charSet)\n  (s.getLines(), () =&gt; s.close())\n}\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">getFileLines</span>(<span class=\"pl-v\">path</span>: <span class=\"pl-en\">String</span>)<span class=\"pl-k\">:</span> geny.<span class=\"pl-en\">Generator</span>[<span class=\"pl-en\">String</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">Generator</span>.selfClosing {\n  <span class=\"pl-k\">val</span> <span class=\"pl-v\">s</span> <span class=\"pl-k\">=</span> scala.io.<span class=\"pl-en\">Source</span>.fromFile(path)(charSet)\n  (s.getLines(), () <span class=\"pl-k\">=&gt;</span> s.close())\n}</pre></div>\n</div>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">The caller can then use normal collection operations on the returned\n<code>geny.Generator</code>: <code>map</code> it, <code>filter</code> it, <code>take</code>, <code>toSeq</code>, etc. and it will\nalways be properly opened when a terminal operation is called, the required\noperations performed, and properly closed when everything is done.</p>\n</div>\n</div>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h2 id=\"user-content-writable\" class=\"heading-element\" dir=\"auto\"><code>Writable</code></h2><a id=\"user-content-writable\" class=\"anchor\" aria-label=\"Permalink: Writable\" href=\"#writable\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<p dir=\"auto\"><code>geny.Writable</code> is a minimal interface that can be implemented by any data type\nthat writes binary output to a <code>java.io.OutputStream</code>:</p>\n</div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"trait Writable {\n  def writeBytesTo(out: OutputStream): Unit\n}\"><pre><span class=\"pl-k\">trait</span> <span class=\"pl-en\">Writable</span> {\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">writeBytesTo</span>(<span class=\"pl-v\">out</span>: <span class=\"pl-en\">OutputStream</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span>\n}</pre></div>\n</div>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\"><code>Writable</code> allows for zero-friction zero-overhead streaming data exchange\nbetween these libraries, e.g. allowing you pass Scalatags <code>Frag</code>s directly\n<code>os.write</code>:</p>\n</div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@ import $ivy.`com.lihaoyi::scalatags:0.12.0`, scalatags.Text.all._\nimport $ivy.$                             , scalatags.Text.all._\n\n@ os.write(os.pwd / &quot;hello.html&quot;, html(body(h1(&quot;Hello&quot;), p(&quot;World!&quot;))))\n\n@ os.read(os.pwd / &quot;hello.html&quot;)\nres1: String = &quot;&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello&lt;/h1&gt;&lt;p&gt;World!&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;&quot;\"><pre><span class=\"pl-k\">@</span> <span class=\"pl-k\">import</span> <span class=\"pl-en\">$ivy</span>.<span class=\"pl-en\">`com.lihaoyi::scalatags:0.12.0`</span>, <span class=\"pl-en\">scalatags</span>.<span class=\"pl-en\">Text</span>.<span class=\"pl-en\">all</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">$ivy</span>.<span class=\"pl-en\">$</span>                             , <span class=\"pl-en\">scalatags</span>.<span class=\"pl-en\">Text</span>.<span class=\"pl-en\">all</span>.<span class=\"pl-en\">_</span>\n\n<span class=\"pl-k\">@</span> os.write(os.pwd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hello.html<span class=\"pl-pds\">\"</span></span>, html(body(h1(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Hello<span class=\"pl-pds\">\"</span></span>), p(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>World!<span class=\"pl-pds\">\"</span></span>))))\n\n<span class=\"pl-k\">@</span> os.read(os.pwd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hello.html<span class=\"pl-pds\">\"</span></span>)\nres1<span class=\"pl-k\">:</span> <span class=\"pl-en\">String</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello&lt;/h1&gt;&lt;p&gt;World!&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;<span class=\"pl-pds\">\"</span></span></pre></div>\n</div>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">Sending <code>ujson.Value</code>s directly to <code>requests.post</code></p>\n</div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@ requests.post(&quot;https://httpbin.org/post&quot;, data = ujson.Obj(&quot;hello&quot; -&gt; 1))\n\n@ res2.text\nres3: String = &quot;&quot;&quot;{\n  &quot;args&quot;: {},\n  &quot;data&quot;: &quot;{\\&quot;hello\\&quot;:1}&quot;,\n  &quot;files&quot;: {},\n  &quot;form&quot;: {},\n...\"><pre><span class=\"pl-k\">@</span> requests.post(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/post<span class=\"pl-pds\">\"</span></span>, data <span class=\"pl-k\">=</span> ujson.<span class=\"pl-en\">Obj</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hello<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">1</span>))\n\n<span class=\"pl-k\">@</span> res2.text\nres3<span class=\"pl-k\">:</span> <span class=\"pl-en\">String</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>{</span>\n<span class=\"pl-s\">  \"args\": {},</span>\n<span class=\"pl-s\">  \"data\": \"{\\\"hello\\\":1}\",</span>\n<span class=\"pl-s\">  \"files\": {},</span>\n<span class=\"pl-s\">  \"form\": {},</span>\n<span class=\"pl-s\">...</span></pre></div>\n</div>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">Serialize Scala data types directly to disk:</p>\n</div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@ os.write(os.pwd / &quot;two.json&quot;, upickle.default.stream(Map((1, 2) -&gt; (3, 4), (5, 6) -&gt; (7, 8))))\n\n@ os.read(os.pwd / &quot;two.json&quot;)\nres5: String = &quot;[[[1,2],[3,4]],[[5,6],[7,8]]]&quot;\"><pre><span class=\"pl-k\">@</span> os.write(os.pwd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>two.json<span class=\"pl-pds\">\"</span></span>, upickle.default.stream(<span class=\"pl-en\">Map</span>((<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>) <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> (<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>), (<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">6</span>) <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> (<span class=\"pl-c1\">7</span>, <span class=\"pl-c1\">8</span>))))\n\n<span class=\"pl-k\">@</span> os.read(os.pwd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>two.json<span class=\"pl-pds\">\"</span></span>)\nres5<span class=\"pl-k\">:</span> <span class=\"pl-en\">String</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[[[1,2],[3,4]],[[5,6],[7,8]]]<span class=\"pl-pds\">\"</span></span></pre></div>\n</div>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">Or streaming file uploads over HTTP:</p>\n</div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@ requests.post(&quot;https://httpbin.org/post&quot;, data = os.read.stream(os.pwd / &quot;two.json&quot;)).text\nres6: String = &quot;&quot;&quot;{\n  &quot;args&quot;: {},\n  &quot;data&quot;: &quot;[[[1,2],[3,4]],[[5,6],[7,8]]]&quot;,\n  &quot;files&quot;: {},\n  &quot;form&quot;: {},\"><pre><span class=\"pl-k\">@</span> requests.post(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://httpbin.org/post<span class=\"pl-pds\">\"</span></span>, data <span class=\"pl-k\">=</span> os.read.stream(os.pwd <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>two.json<span class=\"pl-pds\">\"</span></span>)).text\nres6<span class=\"pl-k\">:</span> <span class=\"pl-en\">String</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>{</span>\n<span class=\"pl-s\">  \"args\": {},</span>\n<span class=\"pl-s\">  \"data\": \"[[[1,2],[3,4]],[[5,6],[7,8]]]\",</span>\n<span class=\"pl-s\">  \"files\": {},</span>\n<span class=\"pl-s\">  \"form\": {},</span></pre></div>\n</div>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">All this data exchange happens efficiently in a streaming fashion, without\nunnecessarily buffering data in-memory.</p>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\"><code>geny.Writable</code> also allows an implementation to ensure cleanup code runs after\nall data has been written (e.g. closing file handles, free-ing managed\nresources) and is much easier to implement than <code>java.io.InputStream</code>.</p>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">Writable has implicit constructors from the following types:</p>\n</div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code>String</code></p>\n</li>\n<li>\n<p dir=\"auto\"><code>Array[Byte]</code></p>\n</li>\n<li>\n<p dir=\"auto\"><code>java.io.InputStream</code></p>\n</li>\n</ul>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">And implemented by the following libraries:</p>\n</div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/com-lihaoyi/upickle\">uPickle</a>: implemented by <code>ujson.Value</code>,\n<code>upack.Msg</code>, and can be constructed from JSON-serializable data structures via\n<code>upickle.default.stream</code> or <code>upickle.default.writableBinary</code></p>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/com-lihaoyi/scalatags\">Scalatags</a>: implemented by <code>scalatags.Text.Tag</code></p>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/lihaoyi/requests-scala\">Requests-Scala</a>:\n<code>requests.get.stream(...)</code> methods return a <a href=\"#readable\"><code>Readable</code></a> subtype of\n<a href=\"#writable\"><code>Writable</code></a></p>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/lihaoyi/os-lib\">OS-Lib</a>: <code>os.read.stream</code> returns a\n<a href=\"#readable\"><code>Readable</code></a> subtype of <a href=\"#writable\"><code>Writable</code></a></p>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/lihaoyi/cask\">Cask</a>: <code>cask.Request</code> returns a\n<a href=\"#readable\"><code>Readable</code></a> subtype of <a href=\"#writable\"><code>Writable</code></a></p>\n</li>\n</ul>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">And is accepted by the following libraries:</p>\n</div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/lihaoyi/requests-scala\">Requests-Scala</a> takes <a href=\"#writable\"><code>Writable</code></a> in the\n<code>data =</code> field of <code>requests.post</code> and <code>requests.put</code></p>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/com-lihaoyi/os-lib\">OS-Lib</a> accepts a <a href=\"#writable\"><code>Writable</code></a> in <code>os.write</code> and\nthe <code>stdin</code> parameter of <code>subprocess.call</code> or <code>subprocess.spawn</code></p>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/com-lihaoyi/cask\">Cask</a>: supports returning a <a href=\"#writable\"><code>Writable</code></a>\nfrom any Cask endpoint</p>\n</li>\n</ul>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">Any data type that writes bytes out to a <code>java.io.OutputStream</code>,\n<code>java.io.Writer</code>, or <code>StringBuilder</code> can be trivially made to implement\n<a href=\"#writable\"><code>Writable</code></a>, which allows it to output data in a streaming fashion without\nneeding to buffer it in memory. You can also implement <a href=\"#writable\"><code>Writable</code></a>s in your own\ndatatypes or accept it in your own method, if you want to inter-operate with\nthis existing ecosystem of libraries.</p>\n</div>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h2 id=\"user-content-readable\" class=\"heading-element\" dir=\"auto\"><code>Readable</code></h2><a id=\"user-content-readable\" class=\"anchor\" aria-label=\"Permalink: Readable\" href=\"#readable\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"trait Readable extends Writable {\n  def readBytesThrough[T](f: InputStream =&gt; T): T\n  def writeBytesTo(out: OutputStream): Unit = readBytesThrough(Internal.transfer(_, out))\n}\"><pre><span class=\"pl-k\">trait</span> <span class=\"pl-en\">Readable</span> <span class=\"pl-k\">extends</span> <span class=\"pl-en\">Writable</span> {\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">readBytesThrough</span>[<span class=\"pl-en\">T</span>](<span class=\"pl-v\">f</span>: <span class=\"pl-en\">InputStream</span> <span class=\"pl-k\">=&gt;</span> <span class=\"pl-en\">T</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">T</span>\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">writeBytesTo</span>(<span class=\"pl-v\">out</span>: <span class=\"pl-en\">OutputStream</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span> <span class=\"pl-k\">=</span> readBytesThrough(<span class=\"pl-en\">Internal</span>.transfer(_, out))\n}</pre></div>\n</div>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\"><code>Readable</code> is a subtype of <a href=\"#writable\"><code>Writable</code></a> that provides an additional\nguarantee: not only can it be written to an <code>java.io.OutputStream</code>, it can also\nbe read from by providing a <code>java.io.InputStream</code>. Note that the <code>InputStream</code>\nis scoped and only available within the <code>readBytesThrough</code> callback: after that\nthe <code>InputStream</code> will be closed and associated resources (HTTP connections,\nfile handles, etc.) will be released.</p>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\"><code>Readable</code> is supported by the following built in types:</p>\n</div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code>String</code></p>\n</li>\n<li>\n<p dir=\"auto\"><code>Array[Byte]</code></p>\n</li>\n<li>\n<p dir=\"auto\"><code>java.io.InputStream</code></p>\n</li>\n</ul>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">Implemented by the following libraries</p>\n</div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/lihaoyi/requests-scala\">Requests-Scala</a>:\n<code>requests.get.stream(...)</code> methods return a <a href=\"#readable\"><code>Readable</code></a></p>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/com-lihaoyi/os-lib\">OS-Lib</a>: <code>os.read.stream</code> returns a\n<a href=\"#readable\"><code>Readable</code></a></p>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/com-lihaoyi/cask\">Cask</a>: <code>cask.Request</code> implements <a href=\"#readable\"><code>Readable</code></a>\nto allow streaming of request data</p>\n</li>\n</ul>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">And is accepted by the following libraries:</p>\n</div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/com-lihaoyi/upickle\">uPickle</a>: <code>upickle.default.read</code>,\n<code>upickle.default.readBinary</code>, <code>ujson.read</code>, and <code>upack.read</code> all support\n<code>Readable</code></p>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/com-lihaoyi/fastparse\">FastParse</a>: <code>fastparse.parse</code> accepts\nparsing streaming input from any <code>Readable</code></p>\n</li>\n</ul>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\"><code>Readable</code> can be used to allow handling of streaming input, e.g. parsing JSON\ndirectly from a file or HTTP request, without needing to buffer the whole file\nin memory:</p>\n</div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@ val data = ujson.read(requests.get.stream(&quot;https://api.github.com/events&quot;))\ndata: ujson.Value.Value = Arr(\n  ArrayBuffer(\n    Obj(\n      LinkedHashMap(\n        &quot;id&quot; -&gt; Str(&quot;11169088214&quot;),\n        &quot;type&quot; -&gt; Str(&quot;PushEvent&quot;),\n        &quot;actor&quot; -&gt; Obj(\n...\"><pre><span class=\"pl-k\">@</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">data</span> <span class=\"pl-k\">=</span> ujson.read(requests.get.stream(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://api.github.com/events<span class=\"pl-pds\">\"</span></span>))\ndata<span class=\"pl-k\">:</span> ujson.<span class=\"pl-en\">Value</span>.<span class=\"pl-en\">Value</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Arr</span>(\n  <span class=\"pl-en\">ArrayBuffer</span>(\n    <span class=\"pl-en\">Obj</span>(\n      <span class=\"pl-en\">LinkedHashMap</span>(\n        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>id<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Str</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>11169088214<span class=\"pl-pds\">\"</span></span>),\n        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>type<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Str</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>PushEvent<span class=\"pl-pds\">\"</span></span>),\n        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>actor<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Obj</span>(\n...</pre></div>\n</div>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">You can also implement <code>Readable</code> in your own data types, to allow them to be\nseamlessly passed into uPickle or FastParse to be parsed in a streaming fashion.</p>\n</div>\n<div dir=\"auto\">\n<p dir=\"auto\">Note that in exchange for the reduced memory usage, parsing streaming data via\n<code>Readable</code> in uPickle or FastParse typically comes with a 20-40% CPU performance\npenalty over parsing data already in memory, due to the additional book-keeping\nnecessary with streaming data. Whether it is worthwhile or not depends on your\nparticular usage pattern.</p>\n</div>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h2 id=\"user-content-changelog\" class=\"heading-element\" dir=\"auto\">Changelog</h2><a id=\"user-content-changelog\" class=\"anchor\" aria-label=\"Permalink: Changelog\" href=\"#changelog\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h3 id=\"user-content-1-1-1-2024-06-14\" class=\"heading-element\" dir=\"auto\">1.1.1 - 2024-06-14</h3><a id=\"user-content-111---2024-06-14\" class=\"anchor\" aria-label=\"Permalink: 1.1.1 - 2024-06-14\" href=\"#111---2024-06-14\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Implement <code>.grouped</code> and <code>.sliding</code> operators</p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h3 id=\"user-content-1-1-0-2024-04-14\" class=\"heading-element\" dir=\"auto\">1.1.0 - 2024-04-14</h3><a id=\"user-content-110---2024-04-14\" class=\"anchor\" aria-label=\"Permalink: 1.1.0 - 2024-04-14\" href=\"#110---2024-04-14\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Support for Scala-Native 0.5.0</p>\n</li>\n<li>\n<p dir=\"auto\">Minimum version of Scala 3 increased from 3.1.3 to 3.3.1</p>\n</li>\n<li>\n<p dir=\"auto\">Minimum version of Scala 2 increased from 2.11.x to 2.12.x</p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h3 id=\"user-content-1-0-0-2022-09-15\" class=\"heading-element\" dir=\"auto\">1.0.0 - 2022-09-15</h3><a id=\"user-content-100---2022-09-15\" class=\"anchor\" aria-label=\"Permalink: 1.0.0 - 2022-09-15\" href=\"#100---2022-09-15\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Support Semantic Versioning</p>\n</li>\n<li>\n<p dir=\"auto\">Removed deprecated API</p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h3 id=\"user-content-0-7-1-2022-01-23\" class=\"heading-element\" dir=\"auto\">0.7.1 - 2022-01-23</h3><a id=\"user-content-071---2022-01-23\" class=\"anchor\" aria-label=\"Permalink: 0.7.1 - 2022-01-23\" href=\"#071---2022-01-23\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Support Scala Native for Scala 3</p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h3 id=\"user-content-0-7-0-2021-12-10\" class=\"heading-element\" dir=\"auto\">0.7.0 - 2021-12-10</h3><a id=\"user-content-070---2021-12-10\" class=\"anchor\" aria-label=\"Permalink: 0.7.0 - 2021-12-10\" href=\"#070---2021-12-10\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<p dir=\"auto\"><em>Re-release of 0.6.11</em></p>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h3 id=\"user-content-older-versions\" class=\"heading-element\" dir=\"auto\">Older Versions</h3><a id=\"user-content-older-versions\" class=\"anchor\" aria-label=\"Permalink: Older Versions\" href=\"#older-versions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h4 id=\"user-content-0-6-11-2021-11-26\" class=\"heading-element\" dir=\"auto\">0.6.11 - 2021-11-26</h4><a id=\"user-content-0611---2021-11-26\" class=\"anchor\" aria-label=\"Permalink: 0.6.11 - 2021-11-26\" href=\"#0611---2021-11-26\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Add <code>httpContentType</code> to <code>inputStreamReadable</code></p>\n</li>\n<li>\n<p dir=\"auto\">Improved Build and CI setup</p>\n</li>\n<li>\n<p dir=\"auto\">Added MiMa checks</p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h4 id=\"user-content-0-6-10-2021-05-14\" class=\"heading-element\" dir=\"auto\">0.6.10 - 2021-05-14</h4><a id=\"user-content-0610---2021-05-14\" class=\"anchor\" aria-label=\"Permalink: 0.6.10 - 2021-05-14\" href=\"#0610---2021-05-14\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Add support for Scala 3.0.0</p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h4 id=\"user-content-0-6-9-2021-04-28\" class=\"heading-element\" dir=\"auto\">0.6.9 - 2021-04-28</h4><a id=\"user-content-069---2021-04-28\" class=\"anchor\" aria-label=\"Permalink: 0.6.9 - 2021-04-28\" href=\"#069---2021-04-28\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Add support for Scala 3.0.0-RC3</p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h4 id=\"user-content-0-6-8-2021-04-28\" class=\"heading-element\" dir=\"auto\">0.6.8 - 2021-04-28</h4><a id=\"user-content-068---2021-04-28\" class=\"anchor\" aria-label=\"Permalink: 0.6.8 - 2021-04-28\" href=\"#068---2021-04-28\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Add support for Scala 3.0.0-RC2</p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h4 id=\"user-content-0-6-4\" class=\"heading-element\" dir=\"auto\">0.6.4</h4><a id=\"user-content-064\" class=\"anchor\" aria-label=\"Permalink: 0.6.4\" href=\"#064\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Scala-Native 0.4.0 support</p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h4 id=\"user-content-0-6-2\" class=\"heading-element\" dir=\"auto\">0.6.2</h4><a id=\"user-content-062\" class=\"anchor\" aria-label=\"Permalink: 0.6.2\" href=\"#062\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Improve performance of writing small strings via <code>StringWritable</code></p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h4 id=\"user-content-0-5-0\" class=\"heading-element\" dir=\"auto\">0.5.0</h4><a id=\"user-content-050\" class=\"anchor\" aria-label=\"Permalink: 0.5.0\" href=\"#050\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Improve streaming of <code>InputStream</code>s to <code>OutputStream</code>s by dynamically sizing\nthe transfer buffer.</p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h4 id=\"user-content-0-4-2\" class=\"heading-element\" dir=\"auto\">0.4.2</h4><a id=\"user-content-042\" class=\"anchor\" aria-label=\"Permalink: 0.4.2\" href=\"#042\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Standardize <code>geny.Readable</code> as well</p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h4 id=\"user-content-0-2-0\" class=\"heading-element\" dir=\"auto\">0.2.0</h4><a id=\"user-content-020\" class=\"anchor\" aria-label=\"Permalink: 0.2.0\" href=\"#020\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Added <a href=\"#writable\">geny.Writable</a> interface</p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h4 id=\"user-content-0-1-8\" class=\"heading-element\" dir=\"auto\">0.1.8</h4><a id=\"user-content-018\" class=\"anchor\" aria-label=\"Permalink: 0.1.8\" href=\"#018\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Support for Scala 2.13.0 final</p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h4 id=\"user-content-0-1-6-2019-01-15\" class=\"heading-element\" dir=\"auto\">0.1.6 - 2019-01-15</h4><a id=\"user-content-016---2019-01-15\" class=\"anchor\" aria-label=\"Permalink: 0.1.6 - 2019-01-15\" href=\"#016---2019-01-15\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Add scala-native support</p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h4 id=\"user-content-0-1-5\" class=\"heading-element\" dir=\"auto\">0.1.5</h4><a id=\"user-content-015\" class=\"anchor\" aria-label=\"Permalink: 0.1.5\" href=\"#015\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Add <code>.withFilter</code></p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h4 id=\"user-content-0-1-4\" class=\"heading-element\" dir=\"auto\">0.1.4</h4><a id=\"user-content-014\" class=\"anchor\" aria-label=\"Permalink: 0.1.4\" href=\"#014\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Add <code>.collect</code>, <code>.collectFirst</code>, <code>.headOption</code>  methods</p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h4 id=\"user-content-0-1-3\" class=\"heading-element\" dir=\"auto\">0.1.3</h4><a id=\"user-content-013\" class=\"anchor\" aria-label=\"Permalink: 0.1.3\" href=\"#013\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Allow calling <code>.count()</code> without a predicate to count the total number of items\nin the generator</p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h4 id=\"user-content-0-1-2\" class=\"heading-element\" dir=\"auto\">0.1.2</h4><a id=\"user-content-012\" class=\"anchor\" aria-label=\"Permalink: 0.1.2\" href=\"#012\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Add <code>.reduce</code>, <code>.fold</code>, <code>.sum</code>, <code>.product</code>, <code>.min</code>, <code>.max</code>, <code>.minBy</code>, <code>.maxBy</code></p>\n</li>\n<li>\n<p dir=\"auto\">Rename <code>.fromIterable</code> to <code>.from</code>, make it also take <code>Iterator</code>s</p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h4 id=\"user-content-0-1-1\" class=\"heading-element\" dir=\"auto\">0.1.1</h4><a id=\"user-content-011\" class=\"anchor\" aria-label=\"Permalink: 0.1.1\" href=\"#011\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Publish for Scala 2.12.0</p>\n</li>\n</ul>\n</div>\n</div>\n<div dir=\"auto\">\n<div class=\"markdown-heading\" dir=\"auto\"><h4 id=\"user-content-0-1-0\" class=\"heading-element\" dir=\"auto\">0.1.0</h4><a id=\"user-content-010\" class=\"anchor\" aria-label=\"Permalink: 0.1.0\" href=\"#010\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div dir=\"auto\">\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">First release</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n</div></article></div>",
    "contributors" : [
      {
        "login" : "lihaoyi",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/934140?v=4",
        "url" : "https://github.com/lihaoyi",
        "contributions" : 53
      },
      {
        "login" : "lolgab",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/5793054?v=4",
        "url" : "https://github.com/lolgab",
        "contributions" : 19
      },
      {
        "login" : "anatoliykmetyuk",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2614813?v=4",
        "url" : "https://github.com/anatoliykmetyuk",
        "contributions" : 14
      },
      {
        "login" : "lefou",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1321393?v=4",
        "url" : "https://github.com/lefou",
        "contributions" : 10
      },
      {
        "login" : "scala-steward",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/43047562?v=4",
        "url" : "https://github.com/scala-steward",
        "contributions" : 5
      },
      {
        "login" : "ajrnz",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1515832?v=4",
        "url" : "https://github.com/ajrnz",
        "contributions" : 3
      },
      {
        "login" : "jodersky",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1007012?v=4",
        "url" : "https://github.com/jodersky",
        "contributions" : 2
      },
      {
        "login" : "ckipp01",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/13974112?v=4",
        "url" : "https://github.com/ckipp01",
        "contributions" : 1
      },
      {
        "login" : "htmldoug",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/663139?v=4",
        "url" : "https://github.com/htmldoug",
        "contributions" : 1
      },
      {
        "login" : "MichalPawlicki",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/5757750?v=4",
        "url" : "https://github.com/MichalPawlicki",
        "contributions" : 1
      },
      {
        "login" : "odisseus",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1336259?v=4",
        "url" : "https://github.com/odisseus",
        "contributions" : 1
      }
    ],
    "commits" : 110,
    "topics" : [
      "scala"
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "openIssues" : [
      {
        "number" : 42,
        "title" : "Re-enable MiMa checks for Scala 3 build",
        "url" : "https://github.com/com-lihaoyi/geny/issues/42"
      }
    ],
    "scalaPercentage" : 94,
    "license" : null,
    "commitActivity" : [
    ]
  },
  "settings" : {
    "preferStableVersion" : true,
    "defaultArtifact" : null,
    "customScalaDoc" : null,
    "documentationLinks" : [
    ],
    "contributorsWanted" : false,
    "deprecatedArtifacts" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "miscellaneous-utils",
    "chatroom" : null
  }
}