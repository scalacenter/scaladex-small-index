{
  "organization" : "scalacenter",
  "repository" : "scalac-profiling",
  "creationDate" : null,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1644274105564
    }
  },
  "githubInfo" : {
    "homepage" : "",
    "description" : "Implementation of SCP-010.",
    "logo" : "https://avatars.githubusercontent.com/u/16118980?v=4",
    "stars" : 92,
    "forks" : 8,
    "watchers" : 17,
    "issues" : 6,
    "creationDate" : 1501676105000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-providing-better-compilation-performance-information\" class=\"anchor\" aria-hidden=\"true\" href=\"#providing-better-compilation-performance-information\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Providing Better Compilation Performance Information</h1>\n<p dir=\"auto\"><a href=\"https://platform-ci.scala-lang.org/scalacenter/scalac-profiling\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/9602ca69ff9f7ba3021887f5f33b25e25e49a9d251c991af3ccfc73a6992c07d/68747470733a2f2f706c6174666f726d2d63692e7363616c612d6c616e672e6f72672f6170692f6261646765732f7363616c6163656e7465722f7363616c61632d70726f66696c696e672f7374617475732e737667\" alt=\"Build Status\" data-canonical-src=\"https://platform-ci.scala-lang.org/api/badges/scalacenter/scalac-profiling/status.svg\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">When compile times become a problem, how can Scala developers reason about\nthe relation between their code and compile times?</p>\n<h2 dir=\"auto\"><a id=\"user-content-install\" class=\"anchor\" aria-hidden=\"true\" href=\"#install\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Install</h2>\n<p dir=\"auto\">Add <code>scalac-profiling</code> in any sbt project by specifying the following project\nsetting.</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"addCompilerPlugin(&quot;ch.epfl.scala&quot; %% &quot;scalac-profiling&quot; % &quot;1.0.0&quot;)\"><pre>addCompilerPlugin(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ch.epfl.scala<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>scalac-profiling<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.0.0<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<h2 dir=\"auto\"><a id=\"user-content-how-to-use\" class=\"anchor\" aria-hidden=\"true\" href=\"#how-to-use\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>How to use</h2>\n<p dir=\"auto\">To learn how to use the plugin, read <a href=\"https://www.scala-lang.org/blog/2018/06/04/scalac-profiling.html\" rel=\"nofollow\">Speeding Up Compilation Time with <code>scalac-profiling</code></a> in the scala-lang blog.</p>\n<h3 dir=\"auto\"><a id=\"user-content-compiler-plugin-options\" class=\"anchor\" aria-hidden=\"true\" href=\"#compiler-plugin-options\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Compiler plugin options</h3>\n<p dir=\"auto\">All the compiler plugin options are <strong>prepended by <code>-P:scalac-profiling:</code></strong>.</p>\n<ul dir=\"auto\">\n<li><code>show-profiles</code>: Show implicit searches and macro expansions by type and\ncall-site.</li>\n<li><code>sourceroot</code>: Tell the plugin what is the source directory of the project.\nExample: <code>-P:scalac-profiling:sourceroot:$PROJECT_BASE_DIR</code>.</li>\n<li><code>print-search-result</code>: Print the result retrieved by an implicit search.\nExample: <code>-P:scalac-profiling:print-search-result:$MACRO_ID</code>.</li>\n<li><code>generate-macro-flamegraph</code>: Generate a flamegraph for macro expansions. The\nflamegraph for implicit searches is enabled by default.</li>\n<li><code>print-failed-implicit-macro-candidates</code>: Print trees of all failed implicit\nsearches that triggered a macro expansion.</li>\n<li><code>no-profiledb</code>: Recommended. Don't generate profiledb (will be on by default\nin a future release).</li>\n<li><code>show-concrete-implicit-tparams</code>: Use more concrete type parameters in the\nimplicit search flamegraph. Note that it may change the shape of the\nflamegraph.</li>\n</ul>\n<h2 dir=\"auto\"><a id=\"user-content-goal-of-the-project\" class=\"anchor\" aria-hidden=\"true\" href=\"#goal-of-the-project\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Goal of the project</h2>\n<p dir=\"auto\">The goal of this proposal is to allow Scala developers to optimize their\ncodebase to reduce compile times, spotting inefficient implicit searches,\nexpanded macro code, and other reasons that slow down compile times and\ndecrease developer productivity.</p>\n<p dir=\"auto\">This repository holds the compiler plugin and a fork of mainstream scalac\nthat will be eventually be merged upstream. This work is prompted by <a href=\"PROPOSAL.md\">Morgan\nStanley's proposal</a> and was approved in our last advisory board.</p>\n<h2 dir=\"auto\"><a id=\"user-content-scalac-status\" class=\"anchor\" aria-hidden=\"true\" href=\"#scalac-status\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Scalac status</h2>\n<p dir=\"auto\">The required changes to the compiler, <a href=\"http://github.com/scala/scala\">Scalac</a>, are\nthe following:</p>\n<ol dir=\"auto\">\n<li><a href=\"https://github.com/scala/scala/pull/6034\">Collect all statistics and optimize checks</a>.</li>\n<li><a href=\"https://github.com/scala/scala/pull/6051\">Initialize statistics per global</a>.</li>\n<li><a href=\"https://github.com/scala/scala/pull/6067\">Add extra timers and counters</a>.</li>\n</ol>\n<h2 dir=\"auto\"><a id=\"user-content-information-about-the-setup\" class=\"anchor\" aria-hidden=\"true\" href=\"#information-about-the-setup\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Information about the setup</h2>\n<p dir=\"auto\">The project uses a forked scalac version that is used to compile both the\ncompiler plugin and several OSS projects from the community. The integration\ntests are for now <a href=\"https://github.com/circe/circe\">Circe</a> and\n<a href=\"https://github.com/julien-truffaut/Monocle\">Monocle</a>, and they help us look\ninto big profiling numbers and detect hot spots and misbehaviours.</p>\n<p dir=\"auto\">If you think a particular codebase is a good candidate to become an integration test, please <a href=\"https://github.com/scalacenter/scalac-profiling/issues/new\">open an issue</a>.</p>\n<h2 dir=\"auto\"><a id=\"user-content-plan\" class=\"anchor\" aria-hidden=\"true\" href=\"#plan\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Plan</h2>\n<p dir=\"auto\">The <a href=\"PROPOSAL.md\">proposal</a> is divided into three main areas:</p>\n<ol dir=\"auto\">\n<li>Data generation and capture.</li>\n<li>Data visualisation and comparison.</li>\n<li>Reproducibility.</li>\n</ol>\n<p dir=\"auto\">How to tackle each of these problems to make the implementation successful?</p>\n<h3 dir=\"auto\"><a id=\"user-content-data-generation-and-capture\" class=\"anchor\" aria-hidden=\"true\" href=\"#data-generation-and-capture\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Data generation and capture</h3>\n<p dir=\"auto\">The generation of data comes from the guts of the compiler. To optimize for\nimpact, the collection of information is done in two different places (a\ncompiler plugin and a forked scalac).</p>\n<h4 dir=\"auto\"><a id=\"user-content-project-structure\" class=\"anchor\" aria-hidden=\"true\" href=\"#project-structure\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Project structure</h4>\n<ol dir=\"auto\">\n<li><a href=\"scalac/\">A forked scalac</a> with patches to collect profiling information.\n<s>All changes are expected to be ported upstream.</s> This fork is not required\nanymore because all the changes are already present in Scala 2.12.5.</li>\n<li><a href=\"plugin/\">A compiler plugin</a> to get information from the macro infrastructure independently\nof the used Scalac version.</li>\n<li><a href=\"profiledb/\">Profiledb readers and writers</a> to allow IDEs and editors to read and write profiledb's.</li>\n<li><a href=\"vscode-scala/\">A proof-of-concept vscode integration</a> that displays the data collected from\nthe profiledb.</li>\n<li><a href=\"sbt-plugin/\">An sbt plugin for reproducibility</a> that warms up the compiler before profiling.</li>\n</ol>\n<p dir=\"auto\">The work is split into two parts so that Scala developers that are stuck in previous Scala\nversions can use the compiler plugin to get some profiling information about macros.</p>\n<p dir=\"auto\">This structure is more practical because it allow us to evolve things faster in the compiler\nplugin, or put there things that cannot be merged upstream.</p>\n<h3 dir=\"auto\"><a id=\"user-content-data-visualisation-and-comparison\" class=\"anchor\" aria-hidden=\"true\" href=\"#data-visualisation-and-comparison\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Data visualisation and comparison</h3>\n<p dir=\"auto\">The profiling data will be accessible in two different ways (provided that\nthe pertinent profiling flags are enabled):</p>\n<ol dir=\"auto\">\n<li>A summary of the stats will be printed out in every compile run.</li>\n<li>A protobuf file will be generated at the root of the class files directory.\n<ul dir=\"auto\">\n<li>The file is generated via protobuf so that it's backwards and forwards binary compatible</li>\n<li>The protobuf file will contain all the profiling information.</li>\n</ul>\n</li>\n</ol>\n<p dir=\"auto\">Why a protobuf file instead of a JSON file? Forwards and backwards binary\ncompatibility is important -- we want our tooling to be able to read files\ngenerated by previous or upcoming versions of the compiler. Our goal is to\ncreate a single tool that all IDEs and third-party tools use to parse and\ninterpret the statistics from JARs and compile runs.</p>\n<p dir=\"auto\">We're collaborating with <a href=\"https://github.com/JetBrains/intellij-scala\">Intellij</a> to provide\nsome of the statistics within the IDE (e.g. macro invocations or implicit searches per line).\nWe have some ideas to show this information as <a href=\"https://en.wikipedia.org/wiki/Heat_map\" rel=\"nofollow\">heat map</a> in the future.</p>\n<h3 dir=\"auto\"><a id=\"user-content-reproducibility\" class=\"anchor\" aria-hidden=\"true\" href=\"#reproducibility\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Reproducibility</h3>\n<p dir=\"auto\">Getting reproducible numbers is important to reason about the code and\nidentifying when a commit increases or decreases compile times with\ncertainty.</p>\n<p dir=\"auto\">To do so, several conditions must be met: the compiler must be warmed up, the\nload in the running computer must be low, and the hardware must be tweaked to\ndisable options that make executions non reproducible (like Turbo Boost).</p>\n<p dir=\"auto\">However, this warming up cannot be done in an isolated scenario as <a href=\"https://github.com/scala/compiler-benchmark\">Scalac's\nbenchmarking</a> infrastructure\ndoes because it doesn't measure the overhead of the build tool calling the\ncompiler, which can be significant (e.g. in sbt).</p>\n<p dir=\"auto\">As a result, reproducibility must be achieved in the build tool itself. The goal\nof this project is to provide an sbt plugin that warms up the compiler by a configurable\namount of time. It also bundles recommendations and tips on how and where to run compilation.</p>\n<h2 dir=\"auto\"><a id=\"user-content-collected-data\" class=\"anchor\" aria-hidden=\"true\" href=\"#collected-data\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Collected data</h2>\n<p dir=\"auto\">In the following sections, I elaborate on the collected data that we want to\nextract from the compiler as well as technical details for every section in\nthe <a href=\"PROPOSAL.md\">original proposal</a>.</p>\n<h3 dir=\"auto\"><a id=\"user-content-information-about-macros\" class=\"anchor\" aria-hidden=\"true\" href=\"#information-about-macros\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Information about macros</h3>\n<p dir=\"auto\">Per call-site, file and total:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> How many macros are expanded?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> How long do they take to run?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> How many tree nodes do macros create?</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-information-about-implicit-search\" class=\"anchor\" aria-hidden=\"true\" href=\"#information-about-implicit-search\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Information about implicit search</h3>\n<p dir=\"auto\">Getting hold of this information requires changes in mainstream scalac.</p>\n<p dir=\"auto\">Per call-site, file and total:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> How many implicit searches are triggered per position?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> How many implicit searches are triggered for a given type?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> How long implicit searches take to run?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> How many implicit search failures are?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> How many implicit search hits are?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> What's the ratio of search failures/hits?</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-results\" class=\"anchor\" aria-hidden=\"true\" href=\"#results\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Results</h3>\n<p dir=\"auto\">These are the requirements that the proposal lays out.</p>\n<p dir=\"auto\">Note that in some cases, this plugin provides more information than the requested by the\noriginal proposal.</p>\n<h4 dir=\"auto\"><a id=\"user-content-what-the-proposal-wants\" class=\"anchor\" aria-hidden=\"true\" href=\"#what-the-proposal-wants\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>What the proposal wants</h4>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Compilation time totally (<em>this is provided by <code>-Ystatistics</code></em>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Macro details\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Time per file</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Time per macro\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Invocations</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Per type</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Total time</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Flamegraph of all macros</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Implicit search details (time and number)\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> By type</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> By invocation (only number for now)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> By file (can be aggregated from the \"by invocation\" data)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Flamegraph of all the implicit searches</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> User time, kernel time, wall clock, I/O time.<br>\nThis feature was <strong>already provided by Scalac</strong>, implemented in <a href=\"https://github.com/scala/scala/pull/5848\">this PR</a>.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Time for flagged features (for certain features – e.g. optimisation)\n<ul dir=\"auto\">\n<li>The best way to capture this information is running statistics for the compiler with\nand without optimization, and compare the profiles. There are also some extra counters.</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Time resolving types from classpath\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Total</li>\n</ul>\n</li>\n</ul>\n</article></div>",
    "contributors" : [
      {
        "login" : "jvican",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2462974?v=4",
        "url" : "https://api.github.com/users/jvican",
        "contributions" : 387
      },
      {
        "login" : "sjrd",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/535934?v=4",
        "url" : "https://api.github.com/users/sjrd",
        "contributions" : 2
      },
      {
        "login" : "yanns",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/51669?v=4",
        "url" : "https://api.github.com/users/yanns",
        "contributions" : 1
      }
    ],
    "commits" : 390,
    "topics" : [
      "statistics",
      "implicit-searches",
      "reproducibility",
      "macros",
      "scala-development",
      "scalac",
      "sbt-plugin"
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "chatroom" : null,
    "openIssues" : [
      {
        "number" : 31,
        "title" : "Support using a tracer for emitting data",
        "url" : "https://github.com/scalacenter/scalac-profiling/issues/31"
      },
      {
        "number" : 30,
        "title" : "Release for Scala 2.13",
        "url" : "https://github.com/scalacenter/scalac-profiling/issues/30"
      },
      {
        "number" : 29,
        "title" : "NPE when starting sbt console with scalac-profiling",
        "url" : "https://github.com/scalacenter/scalac-profiling/issues/29"
      },
      {
        "number" : 27,
        "title" : "Quasar integration test",
        "url" : "https://github.com/scalacenter/scalac-profiling/issues/27"
      },
      {
        "number" : 26,
        "title" : "Make `-P:scalac-profiling:no-profiledb` a default",
        "url" : "https://github.com/scalacenter/scalac-profiling/issues/26"
      }
    ],
    "scalaPercentage" : null
  },
  "settings" : {
    "defaultStableVersion" : true,
    "defaultArtifact" : null,
    "strictVersions" : false,
    "customScalaDoc" : null,
    "documentationLinks" : [
    ],
    "deprecated" : false,
    "contributorsWanted" : false,
    "artifactDeprecations" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "performance-and-monitoring",
    "beginnerIssuesLabel" : null
  }
}