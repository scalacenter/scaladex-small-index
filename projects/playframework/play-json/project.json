{
  "organization" : "playframework",
  "repository" : "play-json",
  "creationDate" : 1410147165554,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1644273538201
    }
  },
  "githubInfo" : {
    "homepage" : null,
    "description" : "The Play JSON library",
    "logo" : "https://avatars.githubusercontent.com/u/319107?v=4",
    "stars" : 294,
    "forks" : 118,
    "watchers" : 22,
    "issues" : 44,
    "creationDate" : 1480995935000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-play-json\" class=\"anchor\" aria-hidden=\"true\" href=\"#play-json\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Play JSON</h1>\n<p dir=\"auto\">Play JSON is a powerful Scala JSON library, originally developed by the Play team for use with Play Framework. It uses Jackson for JSON parsing and has no Play dependencies.</p>\n<p dir=\"auto\">We've provided some documentation here on how to use Play JSON in your app (without Play). For more information on how to use Play JSON in Play, please refer to the <a href=\"https://www.playframework.com/documentation/2.8.x/ScalaJson\" rel=\"nofollow\">Play documentation</a>.</p>\n<h2 dir=\"auto\"><a id=\"user-content-getting-started\" class=\"anchor\" aria-hidden=\"true\" href=\"#getting-started\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Getting Started</h2>\n<p dir=\"auto\">To get started, you can add play-json as a dependency in your project:</p>\n<ul dir=\"auto\">\n<li>sbt\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"libraryDependencies += &quot;com.typesafe.play&quot; %% &quot;play-json&quot; % -version-\"><pre>libraryDependencies <span class=\"pl-k\">+</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.typesafe.play<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>play-json<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-k\">-</span>version<span class=\"pl-k\">-</span></pre></div>\n</li>\n<li>Gradle\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"compile group: 'com.typesafe.play', name: 'play-json_2.13', version: -version-\"><pre><code>compile group: 'com.typesafe.play', name: 'play-json_2.13', version: -version-\n</code></pre></div>\n</li>\n<li>Maven\n<div class=\"highlight highlight-text-xml position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;dependency&gt;\n  &lt;groupId&gt;com.typesafe.play&lt;/groupId&gt;\n  &lt;artifactId&gt;play-json_2.13&lt;/artifactId&gt;\n  &lt;version&gt;-version-&lt;/version&gt;\n&lt;/dependency&gt;\"><pre>&lt;<span class=\"pl-ent\">dependency</span>&gt;\n  &lt;<span class=\"pl-ent\">groupId</span>&gt;com.typesafe.play&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n  &lt;<span class=\"pl-ent\">artifactId</span>&gt;play-json_2.13&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n  &lt;<span class=\"pl-ent\">version</span>&gt;-version-&lt;/<span class=\"pl-ent\">version</span>&gt;\n&lt;/<span class=\"pl-ent\">dependency</span>&gt;</pre></div>\n</li>\n</ul>\n<p dir=\"auto\">See <a href=\"https://github.com/playframework/play-json/releases\">GitHub releases</a> for the correct version.</p>\n<p dir=\"auto\">Play JSON supports Scala 2.12 and 2.13. Choosing the right JAR is automatically managed in sbt. If you're using Gradle or Maven then you need to use the correct version in the <code>artifactId</code>.</p>\n<h2 dir=\"auto\"><a id=\"user-content-json-ast\" class=\"anchor\" aria-hidden=\"true\" href=\"#json-ast\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>JSON AST</h2>\n<p dir=\"auto\">The base type in Play JSON is <code>play.api.libs.json.JsValue</code>, and has several subtypes representing different JSON types:</p>\n<ul dir=\"auto\">\n<li><code>JsObject</code>: a JSON object, represented as a Map. Can be constructed from an ordered <code>Seq</code> or any kind of <code>Map</code> using <code>JsObject.apply</code></li>\n<li><code>JsArray</code>: a JSON array, consisting of a <code>Seq[JsValue]</code></li>\n<li><code>JsNumber</code>: a JSON number, represented as a <code>BigDecimal</code>.</li>\n<li><code>JsString</code>: a JSON string.</li>\n<li><code>JsBoolean</code>: a JSON boolean, either <code>JsTrue</code> or <code>JsFalse</code>.</li>\n<li><code>JsNull</code>: the JSON <code>null</code> value.</li>\n</ul>\n<p dir=\"auto\">The <code>play.api.libs.json</code> package includes several features for constructing JSON from scratch, as well as for converting to and from case classes.</p>\n<h2 dir=\"auto\"><a id=\"user-content-basic-reading-and-writing\" class=\"anchor\" aria-hidden=\"true\" href=\"#basic-reading-and-writing\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Basic reading and writing</h2>\n<p dir=\"auto\">The <code>play.api.libs.json.Json</code> object has several methods for reading and writing:</p>\n<p dir=\"auto\"><code>Json.parse</code> parses a JSON string or <code>InputStream</code> into a JSON tree:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val json: JsValue = Json.parse(&quot;&quot;&quot;\n{\n  &quot;name&quot; : &quot;Watership Down&quot;,\n  &quot;location&quot; : {\n    &quot;lat&quot; : 51.235685,\n    &quot;long&quot; : -1.309197\n  },\n  &quot;residents&quot; : [ {\n    &quot;name&quot; : &quot;Fiver&quot;,\n    &quot;age&quot; : 4,\n    &quot;role&quot; : null\n  }, {\n    &quot;name&quot; : &quot;Bigwig&quot;,\n    &quot;age&quot; : 6,\n    &quot;role&quot; : &quot;Owsla&quot;\n  } ]\n}\n&quot;&quot;&quot;)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">json</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">JsValue</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Json</span>.parse(<span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\">{</span>\n<span class=\"pl-s\">  \"name\" : \"Watership Down\",</span>\n<span class=\"pl-s\">  \"location\" : {</span>\n<span class=\"pl-s\">    \"lat\" : 51.235685,</span>\n<span class=\"pl-s\">    \"long\" : -1.309197</span>\n<span class=\"pl-s\">  },</span>\n<span class=\"pl-s\">  \"residents\" : [ {</span>\n<span class=\"pl-s\">    \"name\" : \"Fiver\",</span>\n<span class=\"pl-s\">    \"age\" : 4,</span>\n<span class=\"pl-s\">    \"role\" : null</span>\n<span class=\"pl-s\">  }, {</span>\n<span class=\"pl-s\">    \"name\" : \"Bigwig\",</span>\n<span class=\"pl-s\">    \"age\" : 6,</span>\n<span class=\"pl-s\">    \"role\" : \"Owsla\"</span>\n<span class=\"pl-s\">  } ]</span>\n<span class=\"pl-s\">}</span>\n<span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>)</pre></div>\n<p dir=\"auto\">and <code>Json.stringify</code> is used to convert a <code>JsValue</code> to a <code>String</code> of JSON:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val jsonString = Json.stringify(json)\n// {&quot;name&quot;:&quot;Watership Down&quot;,&quot;location&quot;:{&quot;lat&quot;:51.235685,&quot;long&quot;:-1.309197},&quot;residents&quot;:[{&quot;name&quot;:&quot;Fiver&quot;,&quot;age&quot;:4,&quot;role&quot;:null},{&quot;name&quot;:&quot;Bigwig&quot;,&quot;age&quot;:6,&quot;role&quot;:&quot;Owsla&quot;}]}\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">jsonString</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Json</span>.stringify(json)\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> {\"name\":\"Watership Down\",\"location\":{\"lat\":51.235685,\"long\":-1.309197},\"residents\":[{\"name\":\"Fiver\",\"age\":4,\"role\":null},{\"name\":\"Bigwig\",\"age\":6,\"role\":\"Owsla\"}]}</span></pre></div>\n<h2 dir=\"auto\"><a id=\"user-content-traversing-a-jsvalue\" class=\"anchor\" aria-hidden=\"true\" href=\"#traversing-a-jsvalue\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Traversing a <code>JsValue</code></h2>\n<p dir=\"auto\">Play JSON provides a traversal DSL that lets you query fields in the JSON:</p>\n<h3 dir=\"auto\"><a id=\"user-content-simple-path-\" class=\"anchor\" aria-hidden=\"true\" href=\"#simple-path-\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Simple path \\</h3>\n<p dir=\"auto\">Applying the <code>\\</code> operator will return the property corresponding to the field argument, supposing this is a JsObject.</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val lat = (json \\ &quot;location&quot; \\ &quot;lat&quot;).get\n// returns JsNumber(51.235685)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">lat</span> <span class=\"pl-k\">=</span> (json \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>location<span class=\"pl-pds\">\"</span></span> \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>lat<span class=\"pl-pds\">\"</span></span>).get\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> returns JsNumber(51.235685)</span></pre></div>\n<p dir=\"auto\">The <code>(json \\ \"location\" \\ \"lat\")</code> returns a <code>JsLookupResult</code> which may or may not contain a value. Note that the <code>get</code> operation is not always safe; it throws an exception if the path doesn't exist.</p>\n<p dir=\"auto\">You can also use <code>\\</code> to look up indices within a <code>JsArray</code>:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val bigwig = (json \\ &quot;residents&quot; \\ 1).get\n// returns {&quot;name&quot;:&quot;Bigwig&quot;,&quot;age&quot;:6,&quot;role&quot;:&quot;Owsla&quot;}\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">bigwig</span> <span class=\"pl-k\">=</span> (json \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>residents<span class=\"pl-pds\">\"</span></span> \\ <span class=\"pl-c1\">1</span>).get\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> returns {\"name\":\"Bigwig\",\"age\":6,\"role\":\"Owsla\"}</span></pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-recursive-path-\" class=\"anchor\" aria-hidden=\"true\" href=\"#recursive-path-\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Recursive path <code>\\\\</code></h3>\n<p dir=\"auto\">Applying the <code>\\\\</code> operator will do a lookup for the field in the current object and all descendants.</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val names = json \\\\ &quot;name&quot;\n// returns Seq(JsString(&quot;Watership Down&quot;), JsString(&quot;Fiver&quot;), JsString(&quot;Bigwig&quot;))\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">names</span> <span class=\"pl-k\">=</span> json \\\\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> returns Seq(JsString(\"Watership Down\"), JsString(\"Fiver\"), JsString(\"Bigwig\"))</span></pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-index-lookup\" class=\"anchor\" aria-hidden=\"true\" href=\"#index-lookup\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Index lookup</h3>\n<p dir=\"auto\">You can retrieve a value in a JsObject or JsArray using an apply operator with the index number or key.</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val name = json(&quot;name&quot;)\n// returns JsString(&quot;Watership Down&quot;)\n\nval bigwig = json(&quot;residents&quot;)(1)\n// returns {&quot;name&quot;:&quot;Bigwig&quot;,&quot;age&quot;:6,&quot;role&quot;:&quot;Owsla&quot;}\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">name</span> <span class=\"pl-k\">=</span> json(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> returns JsString(\"Watership Down\")</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">bigwig</span> <span class=\"pl-k\">=</span> json(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>residents<span class=\"pl-pds\">\"</span></span>)(<span class=\"pl-c1\">1</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> returns {\"name\":\"Bigwig\",\"age\":6,\"role\":\"Owsla\"}</span></pre></div>\n<p dir=\"auto\">Like <code>get</code>, this will throw an exception if the index doesn't exist. Use the Simple Path <code>\\</code> operator and <code>validate</code> or <code>asOpt</code> (described below) if you expect that they key may not be present.</p>\n<h2 dir=\"auto\"><a id=\"user-content-reading-and-writing-objects\" class=\"anchor\" aria-hidden=\"true\" href=\"#reading-and-writing-objects\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Reading and writing objects</h2>\n<p dir=\"auto\">To convert a Scala object to and from JSON, we use <code>Json.toJson[T: Writes]</code> and <code>Json.fromJson[T: Reads]</code> respectively. Play JSON provides the <code>Reads</code> and <code>Writes</code> typeclasses to define how to read or write specific types. You can get these either by using Play's automatic JSON macros, or by manually defining them.</p>\n<p dir=\"auto\">You can also read JSON from a <code>JsValue</code> using <code>validate</code>, <code>as</code> and <code>asOpt</code> methods. Generally it's preferable to use <code>validate</code> since it returns a <code>JsResult</code> which may contain an error if the JSON is malformed.</p>\n<p dir=\"auto\">For example:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val unsafeName = (json \\ &quot;name&quot;).as[String]\n// &quot;Watership Down&quot;\n\nval unsafeBogusName = (json \\ &quot;bogus&quot;).as[String]\n// throws exception\n\nval nameOption = (json \\ &quot;name&quot;).asOpt[String]\n// Some(&quot;Watership Down&quot;)\n\nval bogusOption = (json \\ &quot;bogus&quot;).asOpt[String]\n// None\n\nval nameResult = (json \\ &quot;name&quot;).validate[String]\n// JsSuccess(&quot;Watership Down&quot;)\n\nval bogusResult = (json \\ &quot;bogus&quot;).validate[String]\n// JsError\n\nval unsafeName2 = json(&quot;name&quot;).as[String]\n// &quot;Watership Down&quot;\n\nval unsafeBogusName2 = json(&quot;bogus&quot;).as[String]\n// throws exception\n\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">unsafeName</span> <span class=\"pl-k\">=</span> (json \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name<span class=\"pl-pds\">\"</span></span>).as[<span class=\"pl-en\">String</span>]\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> \"Watership Down\"</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">unsafeBogusName</span> <span class=\"pl-k\">=</span> (json \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bogus<span class=\"pl-pds\">\"</span></span>).as[<span class=\"pl-en\">String</span>]\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> throws exception</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">nameOption</span> <span class=\"pl-k\">=</span> (json \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name<span class=\"pl-pds\">\"</span></span>).asOpt[<span class=\"pl-en\">String</span>]\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Some(\"Watership Down\")</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">bogusOption</span> <span class=\"pl-k\">=</span> (json \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bogus<span class=\"pl-pds\">\"</span></span>).asOpt[<span class=\"pl-en\">String</span>]\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> None</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">nameResult</span> <span class=\"pl-k\">=</span> (json \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name<span class=\"pl-pds\">\"</span></span>).validate[<span class=\"pl-en\">String</span>]\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> JsSuccess(\"Watership Down\")</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">bogusResult</span> <span class=\"pl-k\">=</span> (json \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bogus<span class=\"pl-pds\">\"</span></span>).validate[<span class=\"pl-en\">String</span>]\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> JsError</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">unsafeName2</span> <span class=\"pl-k\">=</span> json(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name<span class=\"pl-pds\">\"</span></span>).as[<span class=\"pl-en\">String</span>]\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> \"Watership Down\"</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">unsafeBogusName2</span> <span class=\"pl-k\">=</span> json(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bogus<span class=\"pl-pds\">\"</span></span>).as[<span class=\"pl-en\">String</span>]\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> throws exception</span>\n</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-automatic-conversion\" class=\"anchor\" aria-hidden=\"true\" href=\"#automatic-conversion\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Automatic conversion</h3>\n<p dir=\"auto\">Usually you don't need to traverse JSON AST directly. Play JSON comes equipped with some convenient macros to convert to and from case classes.</p>\n<p dir=\"auto\">For example, suppose I have the following class:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"case class Resident(name: String, age: Int, role: Option[String])\"><pre><span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Resident</span>(<span class=\"pl-v\">name</span>: <span class=\"pl-en\">String</span>, <span class=\"pl-v\">age</span>: <span class=\"pl-en\">Int</span>, <span class=\"pl-v\">role</span>: <span class=\"pl-en\">Option</span>[<span class=\"pl-en\">String</span>])</pre></div>\n<p dir=\"auto\">I can define a <code>Reads</code> (JSON parser), <code>Writes</code> (JSON writer) using convenient macros:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"implicit val residentReads = Json.reads[Resident]\nimplicit val residentWrites = Json.writes[Resident]\"><pre><span class=\"pl-k\">implicit</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">residentReads</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Json</span>.reads[<span class=\"pl-en\">Resident</span>]\n<span class=\"pl-k\">implicit</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">residentWrites</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Json</span>.writes[<span class=\"pl-en\">Resident</span>]</pre></div>\n<p dir=\"auto\">I can also define a <code>Format</code> that does both:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"implicit val residentFormat = Json.format[Resident]\"><pre><span class=\"pl-k\">implicit</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">residentFormat</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Json</span>.format[<span class=\"pl-en\">Resident</span>]</pre></div>\n<p dir=\"auto\">With the <code>Reads</code> and/or <code>Writes</code> in scope, I can then easily convert my class using <code>toJson</code> and <code>fromJson</code></p>\n<h3 dir=\"auto\"><a id=\"user-content-constructing-reads-and-writes\" class=\"anchor\" aria-hidden=\"true\" href=\"#constructing-reads-and-writes\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Constructing <code>Reads</code> and <code>Writes</code></h3>\n<p dir=\"auto\">Play JSON provides a convenient functional DSL for constructing <code>Reads</code> and <code>Writes</code>. For example, assume I have the following classes:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"case class Location(lat: Double, long: Double)\ncase class Resident(name: String, age: Int, role: Option[String])\ncase class Place(name: String, location: Location, residents: Seq[Resident])\"><pre><span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Location</span>(<span class=\"pl-v\">lat</span>: <span class=\"pl-en\">Double</span>, <span class=\"pl-v\">long</span>: <span class=\"pl-en\">Double</span>)\n<span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Resident</span>(<span class=\"pl-v\">name</span>: <span class=\"pl-en\">String</span>, <span class=\"pl-v\">age</span>: <span class=\"pl-en\">Int</span>, <span class=\"pl-v\">role</span>: <span class=\"pl-en\">Option</span>[<span class=\"pl-en\">String</span>])\n<span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Place</span>(<span class=\"pl-v\">name</span>: <span class=\"pl-en\">String</span>, <span class=\"pl-v\">location</span>: <span class=\"pl-en\">Location</span>, <span class=\"pl-v\">residents</span>: <span class=\"pl-en\">Seq</span>[<span class=\"pl-en\">Resident</span>])</pre></div>\n<p dir=\"auto\">Then I could construct <code>Reads</code> for them as follows:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import play.api.libs.json._\nimport play.api.libs.json.Reads._\nimport play.api.libs.functional.syntax._\n\nimplicit val locationReads: Reads[Location] = (\n  (JsPath \\ &quot;lat&quot;).read[Double](min(-90.0) keepAnd max(90.0)) and\n  (JsPath \\ &quot;long&quot;).read[Double](min(-180.0) keepAnd max(180.0))\n)(Location.apply _)\n\nimplicit val residentReads: Reads[Resident] = (\n  (JsPath \\ &quot;name&quot;).read[String](minLength[String](2)) and\n  (JsPath \\ &quot;age&quot;).read[Int](min(0) keepAnd max(150)) and\n  (JsPath \\ &quot;role&quot;).readNullable[String]\n)(Resident.apply _)\n\nimplicit val placeReads: Reads[Place] = (\n  (JsPath \\ &quot;name&quot;).read[String](minLength[String](2)) and\n  (JsPath \\ &quot;location&quot;).read[Location] and\n  (JsPath \\ &quot;residents&quot;).read[Seq[Resident]]\n)(Place.apply _)\n\n\nval json = { ... }\n\njson.validate[Place] match {\n  case s: JsSuccess[Place] =&gt; {\n    val place: Place = s.get\n    // do something with place\n  }\n  case e: JsError =&gt; {\n    // error handling flow\n  }\n}\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">play</span>.<span class=\"pl-en\">api</span>.<span class=\"pl-en\">libs</span>.<span class=\"pl-en\">json</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">play</span>.<span class=\"pl-en\">api</span>.<span class=\"pl-en\">libs</span>.<span class=\"pl-en\">json</span>.<span class=\"pl-en\">Reads</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">play</span>.<span class=\"pl-en\">api</span>.<span class=\"pl-en\">libs</span>.<span class=\"pl-en\">functional</span>.<span class=\"pl-en\">syntax</span>.<span class=\"pl-en\">_</span>\n\n<span class=\"pl-k\">implicit</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">locationReads</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Reads</span>[<span class=\"pl-en\">Location</span>] <span class=\"pl-k\">=</span> (\n  (<span class=\"pl-en\">JsPath</span> \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>lat<span class=\"pl-pds\">\"</span></span>).read[<span class=\"pl-en\">Double</span>](min(<span class=\"pl-k\">-</span><span class=\"pl-c1\">90.0</span>) keepAnd max(<span class=\"pl-c1\">90.0</span>)) and\n  (<span class=\"pl-en\">JsPath</span> \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>long<span class=\"pl-pds\">\"</span></span>).read[<span class=\"pl-en\">Double</span>](min(<span class=\"pl-k\">-</span><span class=\"pl-c1\">180.0</span>) keepAnd max(<span class=\"pl-c1\">180.0</span>))\n)(<span class=\"pl-en\">Location</span>.apply _)\n\n<span class=\"pl-k\">implicit</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">residentReads</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Reads</span>[<span class=\"pl-en\">Resident</span>] <span class=\"pl-k\">=</span> (\n  (<span class=\"pl-en\">JsPath</span> \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name<span class=\"pl-pds\">\"</span></span>).read[<span class=\"pl-en\">String</span>](minLength[<span class=\"pl-en\">String</span>](<span class=\"pl-c1\">2</span>)) and\n  (<span class=\"pl-en\">JsPath</span> \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>age<span class=\"pl-pds\">\"</span></span>).read[<span class=\"pl-en\">Int</span>](min(<span class=\"pl-c1\">0</span>) keepAnd max(<span class=\"pl-c1\">150</span>)) and\n  (<span class=\"pl-en\">JsPath</span> \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>role<span class=\"pl-pds\">\"</span></span>).readNullable[<span class=\"pl-en\">String</span>]\n)(<span class=\"pl-en\">Resident</span>.apply _)\n\n<span class=\"pl-k\">implicit</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">placeReads</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Reads</span>[<span class=\"pl-en\">Place</span>] <span class=\"pl-k\">=</span> (\n  (<span class=\"pl-en\">JsPath</span> \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name<span class=\"pl-pds\">\"</span></span>).read[<span class=\"pl-en\">String</span>](minLength[<span class=\"pl-en\">String</span>](<span class=\"pl-c1\">2</span>)) and\n  (<span class=\"pl-en\">JsPath</span> \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>location<span class=\"pl-pds\">\"</span></span>).read[<span class=\"pl-en\">Location</span>] and\n  (<span class=\"pl-en\">JsPath</span> \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>residents<span class=\"pl-pds\">\"</span></span>).read[<span class=\"pl-en\">Seq</span>[<span class=\"pl-en\">Resident</span>]]\n)(<span class=\"pl-en\">Place</span>.apply _)\n\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">json</span> <span class=\"pl-k\">=</span> { ... }\n\njson.validate[<span class=\"pl-en\">Place</span>] <span class=\"pl-k\">match</span> {\n  <span class=\"pl-k\">case</span> <span class=\"pl-v\">s</span>: <span class=\"pl-en\">JsSuccess</span>[<span class=\"pl-en\">Place</span>] <span class=\"pl-k\">=&gt;</span> {\n    <span class=\"pl-k\">val</span> <span class=\"pl-smi\">place</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Place</span> <span class=\"pl-k\">=</span> s.get\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> do something with place</span>\n  }\n  <span class=\"pl-k\">case</span> <span class=\"pl-v\">e</span>: <span class=\"pl-en\">JsError</span> <span class=\"pl-k\">=&gt;</span> {\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> error handling flow</span>\n  }\n}</pre></div>\n<p dir=\"auto\">Similarly, I could construct <code>Writes</code> like this:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import play.api.libs.json._\nimport play.api.libs.functional.syntax._\n\nimplicit val locationWrites: Writes[Location] = (\n  (JsPath \\ &quot;lat&quot;).write[Double] and\n  (JsPath \\ &quot;long&quot;).write[Double]\n)(unlift(Location.unapply))\n\nimplicit val residentWrites: Writes[Resident] = (\n  (JsPath \\ &quot;name&quot;).write[String] and\n  (JsPath \\ &quot;age&quot;).write[Int] and\n  (JsPath \\ &quot;role&quot;).writeNullable[String]\n)(unlift(Resident.unapply))\n\nimplicit val placeWrites: Writes[Place] = (\n  (JsPath \\ &quot;name&quot;).write[String] and\n  (JsPath \\ &quot;location&quot;).write[Location] and\n  (JsPath \\ &quot;residents&quot;).write[Seq[Resident]]\n)(unlift(Place.unapply))\n\n\nval place = Place(\n  &quot;Watership Down&quot;,\n  Location(51.235685, -1.309197),\n  Seq(\n    Resident(&quot;Fiver&quot;, 4, None),\n    Resident(&quot;Bigwig&quot;, 6, Some(&quot;Owsla&quot;))\n  )\n)\n\nval json = Json.toJson(place)\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">play</span>.<span class=\"pl-en\">api</span>.<span class=\"pl-en\">libs</span>.<span class=\"pl-en\">json</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">play</span>.<span class=\"pl-en\">api</span>.<span class=\"pl-en\">libs</span>.<span class=\"pl-en\">functional</span>.<span class=\"pl-en\">syntax</span>.<span class=\"pl-en\">_</span>\n\n<span class=\"pl-k\">implicit</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">locationWrites</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Writes</span>[<span class=\"pl-en\">Location</span>] <span class=\"pl-k\">=</span> (\n  (<span class=\"pl-en\">JsPath</span> \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>lat<span class=\"pl-pds\">\"</span></span>).write[<span class=\"pl-en\">Double</span>] and\n  (<span class=\"pl-en\">JsPath</span> \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>long<span class=\"pl-pds\">\"</span></span>).write[<span class=\"pl-en\">Double</span>]\n)(unlift(<span class=\"pl-en\">Location</span>.unapply))\n\n<span class=\"pl-k\">implicit</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">residentWrites</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Writes</span>[<span class=\"pl-en\">Resident</span>] <span class=\"pl-k\">=</span> (\n  (<span class=\"pl-en\">JsPath</span> \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name<span class=\"pl-pds\">\"</span></span>).write[<span class=\"pl-en\">String</span>] and\n  (<span class=\"pl-en\">JsPath</span> \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>age<span class=\"pl-pds\">\"</span></span>).write[<span class=\"pl-en\">Int</span>] and\n  (<span class=\"pl-en\">JsPath</span> \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>role<span class=\"pl-pds\">\"</span></span>).writeNullable[<span class=\"pl-en\">String</span>]\n)(unlift(<span class=\"pl-en\">Resident</span>.unapply))\n\n<span class=\"pl-k\">implicit</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">placeWrites</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Writes</span>[<span class=\"pl-en\">Place</span>] <span class=\"pl-k\">=</span> (\n  (<span class=\"pl-en\">JsPath</span> \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name<span class=\"pl-pds\">\"</span></span>).write[<span class=\"pl-en\">String</span>] and\n  (<span class=\"pl-en\">JsPath</span> \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>location<span class=\"pl-pds\">\"</span></span>).write[<span class=\"pl-en\">Location</span>] and\n  (<span class=\"pl-en\">JsPath</span> \\ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>residents<span class=\"pl-pds\">\"</span></span>).write[<span class=\"pl-en\">Seq</span>[<span class=\"pl-en\">Resident</span>]]\n)(unlift(<span class=\"pl-en\">Place</span>.unapply))\n\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">place</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Place</span>(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Watership Down<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-en\">Location</span>(<span class=\"pl-c1\">51.235685</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">1.309197</span>),\n  <span class=\"pl-en\">Seq</span>(\n    <span class=\"pl-en\">Resident</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Fiver<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-en\">None</span>),\n    <span class=\"pl-en\">Resident</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Bigwig<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">6</span>, <span class=\"pl-en\">Some</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Owsla<span class=\"pl-pds\">\"</span></span>))\n  )\n)\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">json</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Json</span>.toJson(place)</pre></div>\n<p dir=\"auto\">It is also possible to implement custom logic by implementing the <code>Reads</code>, <code>Writes</code> and/or <code>Format</code> traits manually, but we recommend using the automatic conversion macros or the functional DSL if possible.</p>\n<h3 dir=\"auto\"><a id=\"user-content-manual-json-construction\" class=\"anchor\" aria-hidden=\"true\" href=\"#manual-json-construction\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Manual JSON construction</h3>\n<p dir=\"auto\">JSON can also be manually constructed using a DSL:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val json: JsValue = Json.obj(\n  &quot;name&quot; -&gt; &quot;Watership Down&quot;,\n  &quot;location&quot; -&gt; Json.obj(&quot;lat&quot; -&gt; 51.235685, &quot;long&quot; -&gt; -1.309197),\n  &quot;residents&quot; -&gt; Json.arr(\n    Json.obj(\n      &quot;name&quot; -&gt; &quot;Fiver&quot;,\n      &quot;age&quot; -&gt; 4,\n      &quot;role&quot; -&gt; JsNull\n    ),\n    Json.obj(\n      &quot;name&quot; -&gt; &quot;Bigwig&quot;,\n      &quot;age&quot; -&gt; 6,\n      &quot;role&quot; -&gt; &quot;Owsla&quot;\n    )\n  )\n)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">json</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">JsValue</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Json</span>.obj(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Watership Down<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>location<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Json</span>.obj(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>lat<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">51.235685</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>long<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">1.309197</span>),\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>residents<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Json</span>.arr(\n    <span class=\"pl-en\">Json</span>.obj(\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Fiver<span class=\"pl-pds\">\"</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>age<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">4</span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>role<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">JsNull</span>\n    ),\n    <span class=\"pl-en\">Json</span>.obj(\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Bigwig<span class=\"pl-pds\">\"</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>age<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">6</span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>role<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Owsla<span class=\"pl-pds\">\"</span></span>\n    )\n  )\n)</pre></div>\n<h2 dir=\"auto\"><a id=\"user-content-license\" class=\"anchor\" aria-hidden=\"true\" href=\"#license\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>License</h2>\n<p dir=\"auto\">Play JSON is licensed under the Apache license, version 2. See the LICENSE file for more information.</p>\n</article></div>",
    "contributors" : [
      {
        "login" : "scala-steward",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/43047562?v=4",
        "url" : "https://api.github.com/users/scala-steward",
        "contributions" : 209
      },
      {
        "login" : "mergify[bot]",
        "avatarUrl" : "https://avatars.githubusercontent.com/in/10562?v=4",
        "url" : "https://api.github.com/users/mergify%5Bbot%5D",
        "contributions" : 143
      },
      {
        "login" : "octonato",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/502982?v=4",
        "url" : "https://api.github.com/users/octonato",
        "contributions" : 66
      },
      {
        "login" : "cchantep",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/166062?v=4",
        "url" : "https://api.github.com/users/cchantep",
        "contributions" : 58
      },
      {
        "login" : "SethTisue",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/161079?v=4",
        "url" : "https://api.github.com/users/SethTisue",
        "contributions" : 56
      },
      {
        "login" : "dwijnand",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/344610?v=4",
        "url" : "https://api.github.com/users/dwijnand",
        "contributions" : 43
      },
      {
        "login" : "gmethvin",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/171663?v=4",
        "url" : "https://api.github.com/users/gmethvin",
        "contributions" : 41
      },
      {
        "login" : "mkurz",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/644927?v=4",
        "url" : "https://api.github.com/users/mkurz",
        "contributions" : 38
      },
      {
        "login" : "marcospereira",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/4576?v=4",
        "url" : "https://api.github.com/users/marcospereira",
        "contributions" : 37
      },
      {
        "login" : "ignasi35",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/762126?v=4",
        "url" : "https://api.github.com/users/ignasi35",
        "contributions" : 25
      },
      {
        "login" : "ennru",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/458526?v=4",
        "url" : "https://api.github.com/users/ennru",
        "contributions" : 22
      },
      {
        "login" : "xuwei-k",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/389787?v=4",
        "url" : "https://api.github.com/users/xuwei-k",
        "contributions" : 18
      },
      {
        "login" : "raboof",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/131856?v=4",
        "url" : "https://api.github.com/users/raboof",
        "contributions" : 14
      },
      {
        "login" : "sullis",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/30938?v=4",
        "url" : "https://api.github.com/users/sullis",
        "contributions" : 8
      },
      {
        "login" : "aaabramov",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/11317222?v=4",
        "url" : "https://api.github.com/users/aaabramov",
        "contributions" : 7
      },
      {
        "login" : "richdougherty",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/14750?v=4",
        "url" : "https://api.github.com/users/richdougherty",
        "contributions" : 5
      },
      {
        "login" : "ihostage",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/817328?v=4",
        "url" : "https://api.github.com/users/ihostage",
        "contributions" : 5
      },
      {
        "login" : "avdv",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3471749?v=4",
        "url" : "https://api.github.com/users/avdv",
        "contributions" : 4
      },
      {
        "login" : "dwickern",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/752885?v=4",
        "url" : "https://api.github.com/users/dwickern",
        "contributions" : 4
      },
      {
        "login" : "jroper",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/105833?v=4",
        "url" : "https://api.github.com/users/jroper",
        "contributions" : 4
      },
      {
        "login" : "htmldoug",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/663139?v=4",
        "url" : "https://api.github.com/users/htmldoug",
        "contributions" : 4
      },
      {
        "login" : "wsargent",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/71236?v=4",
        "url" : "https://api.github.com/users/wsargent",
        "contributions" : 4
      },
      {
        "login" : "lihaoyi",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/934140?v=4",
        "url" : "https://api.github.com/users/lihaoyi",
        "contributions" : 3
      },
      {
        "login" : "pjfanning",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/11783444?v=4",
        "url" : "https://api.github.com/users/pjfanning",
        "contributions" : 3
      },
      {
        "login" : "yoohaemin",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/22650536?v=4",
        "url" : "https://api.github.com/users/yoohaemin",
        "contributions" : 2
      },
      {
        "login" : "VlachJosef",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/5246747?v=4",
        "url" : "https://api.github.com/users/VlachJosef",
        "contributions" : 2
      },
      {
        "login" : "lrytz",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/119636?v=4",
        "url" : "https://api.github.com/users/lrytz",
        "contributions" : 2
      },
      {
        "login" : "sirmax",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/868418?v=4",
        "url" : "https://api.github.com/users/sirmax",
        "contributions" : 2
      },
      {
        "login" : "tototoshi",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/264469?v=4",
        "url" : "https://api.github.com/users/tototoshi",
        "contributions" : 2
      },
      {
        "login" : "vdebergue",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1568648?v=4",
        "url" : "https://api.github.com/users/vdebergue",
        "contributions" : 2
      },
      {
        "login" : "lavrov",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2944597?v=4",
        "url" : "https://api.github.com/users/lavrov",
        "contributions" : 2
      },
      {
        "login" : "agebhar1",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2443866?v=4",
        "url" : "https://api.github.com/users/agebhar1",
        "contributions" : 1
      },
      {
        "login" : "bursauxa",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/15860132?v=4",
        "url" : "https://api.github.com/users/bursauxa",
        "contributions" : 1
      },
      {
        "login" : "dragisak",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/800802?v=4",
        "url" : "https://api.github.com/users/dragisak",
        "contributions" : 1
      },
      {
        "login" : "faccuo",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/604751?v=4",
        "url" : "https://api.github.com/users/faccuo",
        "contributions" : 1
      },
      {
        "login" : "giuliodambrosio",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/8350764?v=4",
        "url" : "https://api.github.com/users/giuliodambrosio",
        "contributions" : 1
      },
      {
        "login" : "gpoulin",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/4609807?v=4",
        "url" : "https://api.github.com/users/gpoulin",
        "contributions" : 1
      },
      {
        "login" : "dontgitit",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/4284884?v=4",
        "url" : "https://api.github.com/users/dontgitit",
        "contributions" : 1
      },
      {
        "login" : "Slakah",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/16853?v=4",
        "url" : "https://api.github.com/users/Slakah",
        "contributions" : 1
      },
      {
        "login" : "bigjason",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/420922?v=4",
        "url" : "https://api.github.com/users/bigjason",
        "contributions" : 1
      },
      {
        "login" : "retronym",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/65551?v=4",
        "url" : "https://api.github.com/users/retronym",
        "contributions" : 1
      },
      {
        "login" : "guyonvarch",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/6768842?v=4",
        "url" : "https://api.github.com/users/guyonvarch",
        "contributions" : 1
      },
      {
        "login" : "jtjeferreira",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/943051?v=4",
        "url" : "https://api.github.com/users/jtjeferreira",
        "contributions" : 1
      },
      {
        "login" : "leandrojk",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1376455?v=4",
        "url" : "https://api.github.com/users/leandrojk",
        "contributions" : 1
      },
      {
        "login" : "markus1189",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/591567?v=4",
        "url" : "https://api.github.com/users/markus1189",
        "contributions" : 1
      },
      {
        "login" : "maxcom",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/69385?v=4",
        "url" : "https://api.github.com/users/maxcom",
        "contributions" : 1
      },
      {
        "login" : "mliarakos",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/36108077?v=4",
        "url" : "https://api.github.com/users/mliarakos",
        "contributions" : 1
      },
      {
        "login" : "nomthy",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/15361173?v=4",
        "url" : "https://api.github.com/users/nomthy",
        "contributions" : 1
      },
      {
        "login" : "OlegYch",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/268312?v=4",
        "url" : "https://api.github.com/users/OlegYch",
        "contributions" : 1
      },
      {
        "login" : "pbugnion",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1392879?v=4",
        "url" : "https://api.github.com/users/pbugnion",
        "contributions" : 1
      },
      {
        "login" : "fancywriter",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1200256?v=4",
        "url" : "https://api.github.com/users/fancywriter",
        "contributions" : 1
      },
      {
        "login" : "schmitch",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1641401?v=4",
        "url" : "https://api.github.com/users/schmitch",
        "contributions" : 1
      },
      {
        "login" : "Shenker93",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/6618240?v=4",
        "url" : "https://api.github.com/users/Shenker93",
        "contributions" : 1
      },
      {
        "login" : "griggt",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/17014833?v=4",
        "url" : "https://api.github.com/users/griggt",
        "contributions" : 1
      },
      {
        "login" : "tyger",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/205941?v=4",
        "url" : "https://api.github.com/users/tyger",
        "contributions" : 1
      }
    ],
    "commits" : 859,
    "topics" : [
      "automatic-conversion",
      "json",
      "scalajs",
      "serialization",
      "json-ast",
      "scala",
      "playframework",
      "serializer",
      "convenience-macros",
      "dsl"
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "chatroom" : null,
    "openIssues" : [
      {
        "number" : 700,
        "title" : "Add a JSON parsing API that returns Try or similar type instead of throwing exception",
        "url" : "https://github.com/playframework/play-json/issues/700"
      },
      {
        "number" : 632,
        "title" : "Upgrade to Jackson 2.12.x",
        "url" : "https://github.com/playframework/play-json/issues/632"
      },
      {
        "number" : 606,
        "title" : "automatic sealed trait discriminator takes precedence over apply/unapply methods",
        "url" : "https://github.com/playframework/play-json/issues/606"
      },
      {
        "number" : 556,
        "title" : "Reads errors on decimal durations",
        "url" : "https://github.com/playframework/play-json/issues/556"
      },
      {
        "number" : 550,
        "title" : "JsBoolean unapply method not exhaustive",
        "url" : "https://github.com/playframework/play-json/issues/550"
      },
      {
        "number" : 502,
        "title" : "\"no known subclasses\" error when sealed trait sub-types are nested inside the companion object",
        "url" : "https://github.com/playframework/play-json/issues/502"
      },
      {
        "number" : 484,
        "title" : "Send non-breaking space (UTF8 00A0) through Json",
        "url" : "https://github.com/playframework/play-json/issues/484"
      },
      {
        "number" : 475,
        "title" : "Can `Format` implement `Serializable` interface?",
        "url" : "https://github.com/playframework/play-json/issues/475"
      },
      {
        "number" : 440,
        "title" : "Error when reading nested value class",
        "url" : "https://github.com/playframework/play-json/issues/440"
      },
      {
        "number" : 414,
        "title" : "updateNullable",
        "url" : "https://github.com/playframework/play-json/issues/414"
      },
      {
        "number" : 404,
        "title" : "Failed to find some type of implicit Format or Writes class after upgrading Play! from 2.7.3 to 2.8.0",
        "url" : "https://github.com/playframework/play-json/issues/404"
      },
      {
        "number" : 388,
        "title" : "JsObject should return immutable collections (play-json 2.8/ scala 2.13)",
        "url" : "https://github.com/playframework/play-json/issues/388"
      },
      {
        "number" : 367,
        "title" : "Annotations for macro similar to @Flatten & @Ignore",
        "url" : "https://github.com/playframework/play-json/issues/367"
      },
      {
        "number" : 237,
        "title" : "Test the docs build in travis",
        "url" : "https://github.com/playframework/play-json/issues/237"
      },
      {
        "number" : 195,
        "title" : "Compile error with PlayJson macro and `cats.data.Newtype` (via NonEmptySet)",
        "url" : "https://github.com/playframework/play-json/issues/195"
      },
      {
        "number" : 175,
        "title" : "Commit release version to README.md",
        "url" : "https://github.com/playframework/play-json/issues/175"
      },
      {
        "number" : 171,
        "title" : "JsPath.prune should not repath on success",
        "url" : "https://github.com/playframework/play-json/issues/171"
      },
      {
        "number" : 168,
        "title" : "Long can't be represented as JSON number",
        "url" : "https://github.com/playframework/play-json/issues/168"
      },
      {
        "number" : 151,
        "title" : "Properly support ISO8601 date/time strings for Java 8",
        "url" : "https://github.com/playframework/play-json/issues/151"
      },
      {
        "number" : 132,
        "title" : "RFC4627 is obsoleted",
        "url" : "https://github.com/playframework/play-json/issues/132"
      },
      {
        "number" : 120,
        "title" : "NullPointerException trying to pickle Coursier case class",
        "url" : "https://github.com/playframework/play-json/issues/120"
      },
      {
        "number" : 100,
        "title" : "NPE when Json.toJson",
        "url" : "https://github.com/playframework/play-json/issues/100"
      },
      {
        "number" : 94,
        "title" : "Create contribution guidelines",
        "url" : "https://github.com/playframework/play-json/issues/94"
      },
      {
        "number" : 91,
        "title" : "Links to scaladoc broken when published",
        "url" : "https://github.com/playframework/play-json/issues/91"
      },
      {
        "number" : 82,
        "title" : "JsPath.json.put writing to an object in a nested array exception: expected KeyPathNode",
        "url" : "https://github.com/playframework/play-json/issues/82"
      },
      {
        "number" : 76,
        "title" : "Integrating with ScalaJSON AST",
        "url" : "https://github.com/playframework/play-json/issues/76"
      },
      {
        "number" : 68,
        "title" : "Make sure JSON macro performance is reasonable",
        "url" : "https://github.com/playframework/play-json/issues/68"
      },
      {
        "number" : 50,
        "title" : "Feature request: Support Either in Json.format",
        "url" : "https://github.com/playframework/play-json/issues/50"
      },
      {
        "number" : 35,
        "title" : "Split core library from high-level utilities",
        "url" : "https://github.com/playframework/play-json/issues/35"
      },
      {
        "number" : 12,
        "title" : "Describe how to read optional fields / objects with Json Transformers",
        "url" : "https://github.com/playframework/play-json/issues/12"
      },
      {
        "number" : 9,
        "title" : "Customization for Jackson ObjectMapper",
        "url" : "https://github.com/playframework/play-json/issues/9"
      },
      {
        "number" : 8,
        "title" : "Reads.nullable behaves weirdly",
        "url" : "https://github.com/playframework/play-json/issues/8"
      },
      {
        "number" : 7,
        "title" : "Customization for Json macros",
        "url" : "https://github.com/playframework/play-json/issues/7"
      },
      {
        "number" : 6,
        "title" : "Monoid[JsObject] does not satisfy associative law",
        "url" : "https://github.com/playframework/play-json/issues/6"
      },
      {
        "number" : 5,
        "title" : "Allow for custom jackson dataformats in play-json",
        "url" : "https://github.com/playframework/play-json/issues/5"
      },
      {
        "number" : 3,
        "title" : "Implement support for > 22 field case classes in macros",
        "url" : "https://github.com/playframework/play-json/issues/3"
      },
      {
        "number" : 2,
        "title" : "json ContravariantFunctor[OWrites] should be a ContravariantFunctor[Writes]",
        "url" : "https://github.com/playframework/play-json/issues/2"
      }
    ]
  },
  "settings" : {
    "defaultStableVersion" : true,
    "defaultArtifact" : "play-json",
    "strictVersions" : false,
    "customScalaDoc" : null,
    "documentationLinks" : [
      {
        "User Guide" : "https://www.playframework.com/documentation/latest/ScalaJson"
      }
    ],
    "deprecated" : false,
    "contributorsWanted" : true,
    "artifactDeprecations" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "json",
    "beginnerIssuesLabel" : "help wanted"
  }
}