{
  "organization" : "groestlcoin",
  "repository" : "eclair",
  "creationDate" : null,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1644273885245
    }
  },
  "githubInfo" : {
    "homepage" : "",
    "description" : "A scala implementation of the Lightning Network.",
    "logo" : "https://avatars.githubusercontent.com/u/7013633?v=4",
    "stars" : 0,
    "forks" : 1,
    "watchers" : 3,
    "issues" : 0,
    "creationDate" : 1493196740000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\".readme/logo.png\"><img src=\".readme/logo.png\" alt=\"Eclair Logo\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a href=\"https://github.com/ACINQ/eclair/actions?query=workflow%3A%22Build+%26+Test%22\"><img src=\"https://github.com/ACINQ/eclair/workflows/Build%20&amp;%20Test/badge.svg\" alt=\"Build Status\" style=\"max-width: 100%;\"></a>\n<a href=\"https://codecov.io/gh/acinq/eclair\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/c0bcd06f8b1982eccec333f8ed8edd454a38a8ad8f6fd6b059eff081f090ae51/68747470733a2f2f636f6465636f762e696f2f67682f6163696e712f65636c6169722f6272616e63682f6d61737465722f67726170682f62616467652e737667\" alt=\"codecov\" data-canonical-src=\"https://codecov.io/gh/acinq/eclair/branch/master/graph/badge.svg\" style=\"max-width: 100%;\"></a>\n<a href=\"LICENSE\"><img src=\"https://camo.githubusercontent.com/1698104e976c681143eb0841f9675c6f802bb7aa832afc0c7a4e719b1f3cf955/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865253230322e302d626c75652e737667\" alt=\"License\" data-canonical-src=\"https://img.shields.io/badge/license-Apache%202.0-blue.svg\" style=\"max-width: 100%;\"></a>\n<a href=\"https://gitter.im/ACINQ/eclair\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/5f58b6751f55944103de3c6276196600a2309f3d053271cd0694a0314046bdfb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6f6e2532306769747465722d7265642e737667\" alt=\"Gitter chat\" data-canonical-src=\"https://img.shields.io/badge/chat-on%20gitter-red.svg\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><strong>Eclair</strong> (French for Lightning) is a Scala implementation of the Lightning Network.</p>\n<p dir=\"auto\">This software follows the <a href=\"https://github.com/lightningnetwork/lightning-rfc\">Lightning Network Specifications (BOLTs)</a>. Other implementations include <a href=\"https://github.com/ElementsProject/lightning\">c-lightning</a> and <a href=\"https://github.com/LightningNetwork/lnd\">lnd</a>.</p>\n<hr>\n<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"construction\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png\">üöß</g-emoji> Both the BOLTs and Eclair itself are still a work in progress. Expect things to break/change!</p>\n<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"rotating_light\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f6a8.png\">üö®</g-emoji> If you run Eclair on mainnet (which is the default setting):</p>\n<ul dir=\"auto\">\n<li>Keep in mind that it is beta-quality software and <strong>don't put too much money</strong> in it</li>\n<li>Eclair's JSON API should <strong>NOT</strong> be accessible from the outside world (similarly to Groestlcoin Core API)</li>\n</ul>\n<hr>\n<h2 dir=\"auto\"><a id=\"user-content-lightning-network-specification-compliance\" class=\"anchor\" aria-hidden=\"true\" href=\"#lightning-network-specification-compliance\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Lightning Network Specification Compliance</h2>\n<p dir=\"auto\">Please see the latest <a href=\"https://github.com/ACINQ/eclair/releases\">release note</a> for detailed information on BOLT compliance.</p>\n<h2 dir=\"auto\"><a id=\"user-content-json-api\" class=\"anchor\" aria-hidden=\"true\" href=\"#json-api\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>JSON API</h2>\n<p dir=\"auto\">Eclair offers a feature-rich HTTP API that enables application developers to easily integrate.</p>\n<p dir=\"auto\">For more information please visit the <a href=\"https://acinq.github.io/eclair\" rel=\"nofollow\">API documentation website</a>.</p>\n<h2 dir=\"auto\"><a id=\"user-content-documentation\" class=\"anchor\" aria-hidden=\"true\" href=\"#documentation\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Documentation</h2>\n<p dir=\"auto\">Please visit our <a href=\"./docs\">docs</a> and <a href=\"https://github.com/acinq/eclair/wiki\">wiki</a> to find detailed instructions on how to configure your\nnode, connect to other nodes, open channels, send and receive payments, and more advanced scenario.</p>\n<p dir=\"auto\">You will find detailed guides and frequently asked questions there.</p>\n<h2 dir=\"auto\"><a id=\"user-content-installation\" class=\"anchor\" aria-hidden=\"true\" href=\"#installation\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Installation</h2>\n<h3 dir=\"auto\"><a id=\"user-content-configuring-groestlcoin-core\" class=\"anchor\" aria-hidden=\"true\" href=\"#configuring-groestlcoin-core\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Configuring Groestlcoin Core</h3>\n<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"warning\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/26a0.png\">‚ö†Ô∏è</g-emoji> Eclair requires Groestlcoin Core 2.18.1, 2.19.1 or 2.20.1. If you are upgrading an existing wallet, you may need to create a new address and send all your funds to that address.</p>\n<p dir=\"auto\">Eclair needs a <em>synchronized</em>, <em>segwit-ready</em>, <strong><em>zeromq-enabled</em></strong>, <em>wallet-enabled</em>, <em>non-pruning</em>, <em>tx-indexing</em> <a href=\"https://github.com/groestlcoin/groestlcoin\">Groestlcoin Core</a> node.</p>\n<p dir=\"auto\">You must configure your Groestlcoin node to use <code>bech32</code> (segwit) addresses.\nIf your wallet has \"non-segwit UTXOs\" (outputs that are neither <code>p2sh-segwit</code> or <code>bech32</code>), you must send them to a <code>bech32</code> address before running eclair.</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p dir=\"auto\">898c17bc76c1af9077314958612ad96c019bd381</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<p dir=\"auto\">Run groestlcoind with the following minimal <code>groestlcoin.conf</code>:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\nserver=1\nrpcuser=foo\nrpcpassword=bar\ntxindex=1\nzmqpubrawblock=tcp://127.0.0.1:29000\nzmqpubrawtx=tcp://127.0.0.1:29000\"><pre><code>\nserver=1\nrpcuser=foo\nrpcpassword=bar\ntxindex=1\nzmqpubrawblock=tcp://127.0.0.1:29000\nzmqpubrawtx=tcp://127.0.0.1:29000\n</code></pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-installing-eclair\" class=\"anchor\" aria-hidden=\"true\" href=\"#installing-eclair\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Installing Eclair</h3>\n<p dir=\"auto\">Eclair is developed in <a href=\"https://www.scala-lang.org/\" rel=\"nofollow\">Scala</a>, a powerful functional language that runs on the JVM, and is packaged as a ZIP archive.</p>\n<p dir=\"auto\">To run Eclair, you first need to install Java, we recommend that you use <a href=\"https://adoptopenjdk.net/?variant=openjdk11&amp;jvmVariant=hotspot\" rel=\"nofollow\">OpenJDK 11</a>. Other runtimes also work, but we don't recommend using them.</p>\n<p dir=\"auto\">Then download our latest <a href=\"https://github.com/ACINQ/eclair/releases\">release</a>, unzip the archive and run the following command:</p>\n<div class=\"highlight highlight-source-shell position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"eclair-node-&lt;version&gt;-&lt;commit_id&gt;/bin/eclair-node.sh\"><pre>eclair-node-<span class=\"pl-k\">&lt;</span>version<span class=\"pl-k\">&gt;</span>-<span class=\"pl-k\">&lt;</span>commit_id<span class=\"pl-k\">&gt;</span>/bin/eclair-node.sh</pre></div>\n<p dir=\"auto\">You can then control your node via the <a href=\"https://github.com/ACINQ/eclair/wiki/Usage\">eclair-cli</a> or the <a href=\"https://github.com/ACINQ/eclair/wiki/API\">API</a>.</p>\n<h3 dir=\"auto\"><a id=\"user-content-configuring-eclair\" class=\"anchor\" aria-hidden=\"true\" href=\"#configuring-eclair\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Configuring Eclair</h3>\n<h4 dir=\"auto\"><a id=\"user-content-configuration-file\" class=\"anchor\" aria-hidden=\"true\" href=\"#configuration-file\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Configuration file</h4>\n<p dir=\"auto\">Eclair reads its configuration file, and write its logs, to <code>~/.eclair</code> by default.</p>\n<p dir=\"auto\">To change your node's configuration, create a file named <code>eclair.conf</code> in <code>~/.eclair</code>. Here's an example configuration file:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"eclair.node-alias=eclair\neclair.node-color=49daaa\"><pre lang=\"conf\"><code>eclair.node-alias=eclair\neclair.node-color=49daaa\n</code></pre></div>\n<p dir=\"auto\">Here are some of the most common options:</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>description</th>\n<th>default value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>eclair.chain</td>\n<td>Which blockchain to use: <em>regtest</em>, <em>testnet</em> or <em>mainnet</em></td>\n<td>mainnet</td>\n</tr>\n<tr>\n<td>eclair.server.port</td>\n<td>Lightning TCP port</td>\n<td>9735</td>\n</tr>\n<tr>\n<td>eclair.api.enabled</td>\n<td>Enable/disable the API</td>\n<td>false. By default the API is disabled. If you want to enable it, you must set a password.</td>\n</tr>\n<tr>\n<td>eclair.api.port</td>\n<td>API HTTP port</td>\n<td>8080</td>\n</tr>\n<tr>\n<td>eclair.api.password</td>\n<td>API password (BASIC)</td>\n<td>\"\" (must be set if the API is enabled)</td>\n</tr>\n<tr>\n<td>eclair.bitcoind.rpcuser</td>\n<td>Groestlcoin Core RPC user</td>\n<td>foo</td>\n</tr>\n<tr>\n<td>eclair.bitcoind.rpcpassword</td>\n<td>Groestlcoin Core RPC password</td>\n<td>bar</td>\n</tr>\n<tr>\n<td>eclair.bitcoind.zmqblock</td>\n<td>Groestlcoin Core ZMQ block address</td>\n<td>\"tcp://127.0.0.1:29000\"</td>\n</tr>\n<tr>\n<td>eclair.bitcoind.zmqtx</td>\n<td>Groestlcoin Core ZMQ tx address</td>\n<td>\"tcp://127.0.0.1:29000\"</td>\n</tr>\n<tr>\n<td>eclair.bitcoind.wallet</td>\n<td>Groestlcoin Core wallet name</td>\n<td>\"\"</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">Quotes are not required unless the value contains special characters. Full syntax guide <a href=\"https://github.com/lightbend/config/blob/master/HOCON.md\">here</a>.</p>\n<p dir=\"auto\">‚Üí see <a href=\"./docs/Configure.md\">here</a> for more configuration options.</p>\n<h4 dir=\"auto\"><a id=\"user-content-configure-bitcoin-core-wallet\" class=\"anchor\" aria-hidden=\"true\" href=\"#configure-bitcoin-core-wallet\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Configure Bitcoin Core wallet</h4>\n<p dir=\"auto\">Eclair will use the default loaded Groestlcoin Core wallet to fund any channels you choose to open.\nIf you want to use a different wallet from the default one, you must set <code>eclair.bitcoind.wallet</code> accordingly in your <code>eclair.conf</code>.</p>\n<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"warning\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/26a0.png\">‚ö†Ô∏è</g-emoji> Once a wallet is configured, you must be very careful if you want to change it: changing the wallet when you have channels open may result in a loss of funds (or a complex recovery procedure).</p>\n<p dir=\"auto\">Eclair will return GRS from closed channels to the wallet configured.\nAny GRS found in the wallet can be used to fund the channels you choose to open.</p>\n<h4 dir=\"auto\"><a id=\"user-content-java-environment-variables\" class=\"anchor\" aria-hidden=\"true\" href=\"#java-environment-variables\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Java Environment Variables</h4>\n<p dir=\"auto\">Some advanced parameters can be changed with java environment variables. Most users won't need this and can skip this section.</p>\n<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"warning\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/26a0.png\">‚ö†Ô∏è</g-emoji> Using separate <code>datadir</code> is mandatory if you want to run <strong>several instances of eclair</strong> on the same machine. You will also have to change ports in <code>eclair.conf</code> (see above).</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>description</th>\n<th>default value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>eclair.datadir</td>\n<td>Path to the data directory</td>\n<td>~/.eclair</td>\n</tr>\n<tr>\n<td>eclair.printToConsole</td>\n<td>Log to stdout (in addition to eclair.log)</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">For example, to specify a different data directory you would run the following command:</p>\n<div class=\"highlight highlight-source-shell position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"eclair-node-&lt;version&gt;-&lt;commit_id&gt;/bin/eclair-node.sh -Declair.datadir=/tmp/node1\"><pre>eclair-node-<span class=\"pl-k\">&lt;</span>version<span class=\"pl-k\">&gt;</span>-<span class=\"pl-k\">&lt;</span>commit_id<span class=\"pl-k\">&gt;</span>/bin/eclair-node.sh -Declair.datadir=/tmp/node1</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-logging\" class=\"anchor\" aria-hidden=\"true\" href=\"#logging\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Logging</h4>\n<p dir=\"auto\">Eclair uses <a href=\"https://logback.qos.ch\" rel=\"nofollow\"><code>logback</code></a> for logging. To use a different configuration, and override the internal logback.xml, run:</p>\n<div class=\"highlight highlight-source-shell position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"eclair-node-&lt;version&gt;-&lt;commit_id&gt;/bin/eclair-node.sh -Dlogback.configurationFile=/path/to/logback-custom.xml\"><pre>eclair-node-<span class=\"pl-k\">&lt;</span>version<span class=\"pl-k\">&gt;</span>-<span class=\"pl-k\">&lt;</span>commit_id<span class=\"pl-k\">&gt;</span>/bin/eclair-node.sh -Dlogback.configurationFile=/path/to/logback-custom.xml</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-backup\" class=\"anchor\" aria-hidden=\"true\" href=\"#backup\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Backup</h4>\n<p dir=\"auto\">The files that you need to backup are located in your data directory. You must backup:</p>\n<ul dir=\"auto\">\n<li>your seeds (<code>node_seed.dat</code> and <code>channel_seed.dat</code>)</li>\n<li>your channel database (<code>eclair.sqlite.bak</code> under directory <code>mainnet</code>, <code>testnet</code> or <code>regtest</code> depending on which chain you're running on)</li>\n</ul>\n<p dir=\"auto\">Your seeds never change once they have been created, but your channels will change whenever you receive or send payments. Eclair will\ncreate and maintain a snapshot of its database, named <code>eclair.sqlite.bak</code>, in your data directory, and update it when needed. This file is\nalways consistent and safe to use even when Eclair is running, and this is what you should back up regularly.</p>\n<p dir=\"auto\">For example, you could configure a <code>cron</code> task for your backup job. Or you could configure an optional notification script to be called by eclair once a new database snapshot has been created, using the following option:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"eclair.backup-notify-script = &quot;/absolute/path/to/script.sh&quot;\"><pre lang=\"conf\"><code>eclair.backup-notify-script = \"/absolute/path/to/script.sh\"\n</code></pre></div>\n<p dir=\"auto\">Make sure your script is executable and uses an absolute path name for <code>eclair.sqlite.bak</code>.</p>\n<p dir=\"auto\">Note that depending on your filesystem, in your backup process we recommend first moving <code>eclair.sqlite.bak</code> to some temporary file\nbefore copying that file to your final backup location.</p>\n<h2 dir=\"auto\"><a id=\"user-content-docker\" class=\"anchor\" aria-hidden=\"true\" href=\"#docker\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Docker</h2>\n<p dir=\"auto\">A <a href=\"Dockerfile\">Dockerfile</a> image is built on each commit on <a href=\"https://hub.docker.com/r/acinq/eclair\" rel=\"nofollow\">docker hub</a> for running a dockerized eclair-node.</p>\n<p dir=\"auto\">You can use the <code>JAVA_OPTS</code> environment variable to set arguments to <code>eclair-node</code>.</p>\n<div class=\"highlight highlight-source-shell position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"docker run -ti --rm -e &quot;JAVA_OPTS=-Xmx512m -Declair.api.binding-ip=0.0.0.0 -Declair.node-alias=node-pm -Declair.printToConsole&quot; acinq/eclair\"><pre>docker run -ti --rm -e <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>JAVA_OPTS=-Xmx512m -Declair.api.binding-ip=0.0.0.0 -Declair.node-alias=node-pm -Declair.printToConsole<span class=\"pl-pds\">\"</span></span> acinq/eclair</pre></div>\n<p dir=\"auto\">If you want to persist the data directory, you can make the volume to your host with the <code>-v</code> argument, as the following example:</p>\n<div class=\"highlight highlight-source-shell position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"docker run -ti --rm -v &quot;/path_on_host:/data&quot; -e &quot;JAVA_OPTS=-Declair.printToConsole&quot; acinq/eclair\"><pre>docker run -ti --rm -v <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/path_on_host:/data<span class=\"pl-pds\">\"</span></span> -e <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>JAVA_OPTS=-Declair.printToConsole<span class=\"pl-pds\">\"</span></span> acinq/eclair</pre></div>\n<p dir=\"auto\">If you enabled the API you can check the status of eclair using the command line tool:</p>\n<div class=\"highlight highlight-source-shell position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"docker exec &lt;container_name&gt; eclair-cli -p foobar getinfo\"><pre>docker <span class=\"pl-c1\">exec</span> <span class=\"pl-k\">&lt;</span>container_name<span class=\"pl-k\">&gt;</span> eclair-cli -p foobar getinfo</pre></div>\n<h2 dir=\"auto\"><a id=\"user-content-plugins\" class=\"anchor\" aria-hidden=\"true\" href=\"#plugins\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Plugins</h2>\n<p dir=\"auto\">For advanced usage, Eclair supports plugins written in Scala, Java, or any JVM-compatible language.</p>\n<p dir=\"auto\">A valid plugin is a jar that contains an implementation of the <a href=\"eclair-node/src/main/scala/fr/acinq/eclair/Plugin.scala\">Plugin</a> interface, and\na manifest entry for <code>Main-Class</code> with the FQDN of the implementation.</p>\n<p dir=\"auto\">Here is how to run Eclair with plugins:</p>\n<div class=\"highlight highlight-source-shell position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"eclair-node-&lt;version&gt;-&lt;commit_id&gt;/bin/eclair-node.sh &lt;plugin1.jar&gt; &lt;plugin2.jar&gt; &lt;...&gt;\"><pre>eclair-node-<span class=\"pl-k\">&lt;</span>version<span class=\"pl-k\">&gt;</span>-<span class=\"pl-k\">&lt;</span>commit_id<span class=\"pl-k\">&gt;</span>/bin/eclair-node.sh <span class=\"pl-k\">&lt;</span>plugin1.jar<span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">&lt;</span>plugin2.jar<span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">&lt;</span>...<span class=\"pl-k\">&gt;</span></pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-non-exhaustive-plugins-list\" class=\"anchor\" aria-hidden=\"true\" href=\"#non-exhaustive-plugins-list\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Non-exhaustive plugins list</h3>\n<p dir=\"auto\">Here are some plugins created by the eclair community.\nIf you need support for these plugins, head over to their respective github repository.</p>\n<ul dir=\"auto\">\n<li><a href=\"https://github.com/engenegr/eclair-alarmbot-plugin\">Telegram Bot for eclair alerts</a></li>\n</ul>\n<h2 dir=\"auto\"><a id=\"user-content-testnet-usage\" class=\"anchor\" aria-hidden=\"true\" href=\"#testnet-usage\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Testnet usage</h2>\n<p dir=\"auto\">Eclair is configured to run on mainnet by default, but you can still run it on testnet (or regtest): start your Groestlcoin Node in\ntestnet mode (add <code>testnet=1</code> in <code>groestlcoin.conf</code> or start with <code>-testnet</code>), and change Eclair's chain parameter and Groestlcoin RPC port:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"eclair.chain=testnet\neclair.bitcoind.rpcport=17766\"><pre lang=\"conf\"><code>eclair.chain=testnet\neclair.bitcoind.rpcport=17766\n</code></pre></div>\n<p dir=\"auto\">You may also want to take advantage of the new configuration sections in <code>groestlcoin.conf</code> to manage parameters that are network specific,\nso you can easily run your groestlcoin node on both mainnet and testnet. For example you could use:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"server=1\ntxindex=1\n[main]\nrpcuser=&lt;your-mainnet-rpc-user-here&gt;\nrpcpassword=&lt;your-mainnet-rpc-password-here&gt;\nzmqpubrawblock=tcp://127.0.0.1:29000\nzmqpubrawtx=tcp://127.0.0.1:29000\n[test]\nrpcuser=&lt;your-testnet-rpc-user-here&gt;\nrpcpassword=&lt;your-testnet-rpc-password-here&gt;\nzmqpubrawblock=tcp://127.0.0.1:29001\nzmqpubrawtx=tcp://127.0.0.1:29001\"><pre lang=\"conf\"><code>server=1\ntxindex=1\n[main]\nrpcuser=&lt;your-mainnet-rpc-user-here&gt;\nrpcpassword=&lt;your-mainnet-rpc-password-here&gt;\nzmqpubrawblock=tcp://127.0.0.1:29000\nzmqpubrawtx=tcp://127.0.0.1:29000\n[test]\nrpcuser=&lt;your-testnet-rpc-user-here&gt;\nrpcpassword=&lt;your-testnet-rpc-password-here&gt;\nzmqpubrawblock=tcp://127.0.0.1:29001\nzmqpubrawtx=tcp://127.0.0.1:29001\n</code></pre></div>\n<h2 dir=\"auto\"><a id=\"user-content-resources\" class=\"anchor\" aria-hidden=\"true\" href=\"#resources\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Resources</h2>\n<ul dir=\"auto\">\n<li>[1] <a href=\"https://lightning.network/lightning-network-paper.pdf\" rel=\"nofollow\">The Bitcoin Lightning Network: Scalable Off-Chain Instant Payments</a> by Joseph Poon and Thaddeus Dryja</li>\n<li>[2] <a href=\"https://github.com/ElementsProject/lightning/raw/master/doc/deployable-lightning.pdf\">Reaching The Ground With Lightning</a> by Rusty Russell</li>\n<li>[3] <a href=\"https://explorer.acinq.co\" rel=\"nofollow\">Lightning Network Explorer</a> - Explore testnet LN nodes you can connect to</li>\n</ul>\n</article></div>",
    "contributors" : [
      {
        "login" : "pm47",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2028222?v=4",
        "url" : "https://api.github.com/users/pm47",
        "contributions" : 706
      },
      {
        "login" : "sstone",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1573866?v=4",
        "url" : "https://api.github.com/users/sstone",
        "contributions" : 384
      },
      {
        "login" : "t-bast",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/31281497?v=4",
        "url" : "https://api.github.com/users/t-bast",
        "contributions" : 231
      },
      {
        "login" : "dpad85",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/5765435?v=4",
        "url" : "https://api.github.com/users/dpad85",
        "contributions" : 154
      },
      {
        "login" : "araspitzu",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2931875?v=4",
        "url" : "https://api.github.com/users/araspitzu",
        "contributions" : 96
      },
      {
        "login" : "HashEngineering",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/5956129?v=4",
        "url" : "https://api.github.com/users/HashEngineering",
        "contributions" : 45
      },
      {
        "login" : "btcontract",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/9870980?v=4",
        "url" : "https://api.github.com/users/btcontract",
        "contributions" : 21
      },
      {
        "login" : "rorp",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2314888?v=4",
        "url" : "https://api.github.com/users/rorp",
        "contributions" : 12
      },
      {
        "login" : "gruve-p",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/11212268?v=4",
        "url" : "https://api.github.com/users/gruve-p",
        "contributions" : 11
      },
      {
        "login" : "n1bor",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1016563?v=4",
        "url" : "https://api.github.com/users/n1bor",
        "contributions" : 8
      },
      {
        "login" : "verretor",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/10324237?v=4",
        "url" : "https://api.github.com/users/verretor",
        "contributions" : 6
      },
      {
        "login" : "dscotese",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1767796?v=4",
        "url" : "https://api.github.com/users/dscotese",
        "contributions" : 5
      },
      {
        "login" : "dkrm0",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/16935834?v=4",
        "url" : "https://api.github.com/users/dkrm0",
        "contributions" : 5
      },
      {
        "login" : "thomash-acinq",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/81159533?v=4",
        "url" : "https://api.github.com/users/thomash-acinq",
        "contributions" : 4
      },
      {
        "login" : "tompro",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/440368?v=4",
        "url" : "https://api.github.com/users/tompro",
        "contributions" : 3
      },
      {
        "login" : "Christewart",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3514957?v=4",
        "url" : "https://api.github.com/users/Christewart",
        "contributions" : 2
      },
      {
        "login" : "dimitris-t",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/8949706?v=4",
        "url" : "https://api.github.com/users/dimitris-t",
        "contributions" : 2
      },
      {
        "login" : "NicolasDorier",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3020646?v=4",
        "url" : "https://api.github.com/users/NicolasDorier",
        "contributions" : 2
      },
      {
        "login" : "rem0g",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/8766206?v=4",
        "url" : "https://api.github.com/users/rem0g",
        "contributions" : 2
      },
      {
        "login" : "alevchuk",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/64738?v=4",
        "url" : "https://api.github.com/users/alevchuk",
        "contributions" : 1
      },
      {
        "login" : "Kukks",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1818366?v=4",
        "url" : "https://api.github.com/users/Kukks",
        "contributions" : 1
      },
      {
        "login" : "ariskk",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/4972825?v=4",
        "url" : "https://api.github.com/users/ariskk",
        "contributions" : 1
      },
      {
        "login" : "CandleHater",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/50766841?v=4",
        "url" : "https://api.github.com/users/CandleHater",
        "contributions" : 1
      },
      {
        "login" : "GiorgioRegni",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/109447?v=4",
        "url" : "https://api.github.com/users/GiorgioRegni",
        "contributions" : 1
      },
      {
        "login" : "jagottsicher",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/30713344?v=4",
        "url" : "https://api.github.com/users/jagottsicher",
        "contributions" : 1
      },
      {
        "login" : "joemphilips",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/10084960?v=4",
        "url" : "https://api.github.com/users/joemphilips",
        "contributions" : 1
      },
      {
        "login" : "Kelbie",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/19197564?v=4",
        "url" : "https://api.github.com/users/Kelbie",
        "contributions" : 1
      },
      {
        "login" : "Mirobit",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/13236924?v=4",
        "url" : "https://api.github.com/users/Mirobit",
        "contributions" : 1
      },
      {
        "login" : "mikewerwin",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/22568771?v=4",
        "url" : "https://api.github.com/users/mikewerwin",
        "contributions" : 1
      },
      {
        "login" : "natewave",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1384456?v=4",
        "url" : "https://api.github.com/users/natewave",
        "contributions" : 1
      },
      {
        "login" : "fresheneesz",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/149531?v=4",
        "url" : "https://api.github.com/users/fresheneesz",
        "contributions" : 1
      },
      {
        "login" : "nayuta-gondo",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/39823612?v=4",
        "url" : "https://api.github.com/users/nayuta-gondo",
        "contributions" : 1
      },
      {
        "login" : "practicalswift",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/7826565?v=4",
        "url" : "https://api.github.com/users/practicalswift",
        "contributions" : 1
      }
    ],
    "commits" : 1713,
    "topics" : [
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "chatroom" : null,
    "openIssues" : [
    ]
  },
  "settings" : {
    "defaultStableVersion" : true,
    "defaultArtifact" : null,
    "strictVersions" : false,
    "customScalaDoc" : null,
    "documentationLinks" : [
    ],
    "deprecated" : false,
    "contributorsWanted" : false,
    "artifactDeprecations" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "cryptography-and-hashing",
    "beginnerIssuesLabel" : null
  }
}