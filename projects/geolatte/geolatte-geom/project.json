{
  "organization" : "geolatte",
  "repository" : "geolatte-geom",
  "creationDate" : 1614108017000,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1644289324203
    }
  },
  "githubInfo" : {
    "homepage" : "",
    "description" : "A geometry model that conforms to the OGC Simple Features for SQL specification.",
    "logo" : "https://avatars.githubusercontent.com/u/940418?v=4",
    "stars" : 100,
    "forks" : 55,
    "watchers" : 17,
    "issues" : 7,
    "creationDate" : 1311935293000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/GeoLatte/geolatte-geom/workflows/Java%20CI/badge.svg\"><img src=\"https://github.com/GeoLatte/geolatte-geom/workflows/Java%20CI/badge.svg\" alt=\"Build Status\" style=\"max-width: 100%;\"></a>\n<a href=\"https://lgtm.com/projects/g/GeoLatte/geolatte-geom/context:java\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/7aa1df7da4ba6a0af56d198aa0002e2792e6d32f3a92e2006140151b187a5527/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6a6176612f672f47656f4c617474652f67656f6c617474652d67656f6d2e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138\" alt=\"Language grade: Java\" data-canonical-src=\"https://img.shields.io/lgtm/grade/java/g/GeoLatte/geolatte-geom.svg?logo=lgtm&amp;logoWidth=18\" style=\"max-width: 100%;\"></a>\n<a href=\"https://javadoc.io/doc/org.geolatte/geolatte-geom\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/e604f473dac0054fae1f762176cef5c3af0b4354dc05d100b9128ffc32799c97/68747470733a2f2f6a617661646f632e696f2f6261646765322f6f72672e67656f6c617474652f67656f6c617474652d67656f6d2f6a617661646f632e737667\" alt=\"javadoc\" data-canonical-src=\"https://javadoc.io/badge2/org.geolatte/geolatte-geom/javadoc.svg\" style=\"max-width: 100%;\"></a></p>\n<h1 dir=\"auto\"><a id=\"user-content-geolatte-geom\" class=\"anchor\" aria-hidden=\"true\" href=\"#geolatte-geom\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Geolatte-geom</h1>\n<p dir=\"auto\">A geometry model for Java with:</p>\n<ul dir=\"auto\">\n<li>immutable data structures</li>\n<li>support for 2D, 3D, 2DM and 3DM geometries</li>\n<li>A DSL for creating Geometries</li>\n<li>support for several dialects of WKT/WKB (Postgis, Sql Server, SFA 1.1.0 and 1.2.1)</li>\n<li>Codecs for translating from/to native database formats for Postgis, Mysql, Oracle, and Microsoft SQL Server.</li>\n<li>Pluggable, extendable Geometry operations</li>\n<li>Coordinate reference system aware</li>\n<li>space filling curves</li>\n</ul>\n<p dir=\"auto\">The library's geometry model is largely based on the\n<a href=\"https://portal.ogc.org/files/?artifact_id=25355\" rel=\"nofollow\">Simple Feature Access (1.2.1) specification</a>.</p>\n<p dir=\"auto\">GeoLatte-geom is fully interoperable with <a href=\"https://github.com/locationtech/jts\">the Java Topology Suite (JTS)</a>.</p>\n<h1 dir=\"auto\"><a id=\"user-content-using-geolatte-geom\" class=\"anchor\" aria-hidden=\"true\" href=\"#using-geolatte-geom\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Using Geolatte-geom</h1>\n<p dir=\"auto\">Currently we require Java 1.8 or later.</p>\n<p dir=\"auto\">The library is published on Maven Central. For Maven, you can include the following dependency.</p>\n<div class=\"highlight highlight-text-xml position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n&lt;dependency&gt;\n    &lt;groupId&gt;org.geolatte&lt;/groupId&gt;\n    &lt;artifactId&gt;geolatte-geom&lt;/artifactId&gt;\n    &lt;version&gt;1.8.0&lt;/version&gt;\n&lt;/dependency&gt;\"><pre>&lt;<span class=\"pl-ent\">dependency</span>&gt;\n    &lt;<span class=\"pl-ent\">groupId</span>&gt;org.geolatte&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n    &lt;<span class=\"pl-ent\">artifactId</span>&gt;geolatte-geom&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n    &lt;<span class=\"pl-ent\">version</span>&gt;1.8.0&lt;/<span class=\"pl-ent\">version</span>&gt;\n&lt;/<span class=\"pl-ent\">dependency</span>&gt;</pre></div>\n<h1 dir=\"auto\"><a id=\"user-content-quick-start\" class=\"anchor\" aria-hidden=\"true\" href=\"#quick-start\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Quick start</h1>\n<h2 dir=\"auto\"><a id=\"user-content-creating-geometries\" class=\"anchor\" aria-hidden=\"true\" href=\"#creating-geometries\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Creating Geometries</h2>\n<p dir=\"auto\">To create a Geometry we first need to specify the Coordinate Reference System we will be working in. Let's say we use\nWGS84 (for other options, see <a href=\"#coordinate-reference-systems\">below</a>).</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import org.geolatte.geom.*;\n\nimport static org.geolatte.geom.crs.CoordinateReferenceSystems.WGS84;\n\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.geolatte.geom.*</span>;\n\n<span class=\"pl-k\">import static</span> <span class=\"pl-smi\">org.geolatte.geom.crs.CoordinateReferenceSystems.WGS84</span>;\n</pre></div>\n<p dir=\"auto\">The easiest way to create <code>Geometry</code> instances is by using the built-in builder DSL. This allows you to specify\n2D <code>Position</code>s\n(coordinates) using <code>c(x,y)</code>for Cartesian or projected coordinates, and\n<code>g(long,lat)</code> for geodetic or spherical coordinates. (There are also variants for the higher dimensions).</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import static org.geolatte.geom.builder.DSL.*;\"><pre><span class=\"pl-k\">import static</span> <span class=\"pl-smi\">org.geolatte.geom.builder.DSL.*</span>;</pre></div>\n<p dir=\"auto\">Now we can create geometries like so.</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  Point&lt;G2D&gt; pnt=point(WGS84,g(4.33,53.21));\n  \n  LineString&lt;G2D&gt; lstr=linestring(WGS84,g(4.43,53.21),g(4.44,53.20),g(4.45,53.19));\n  \n  Polygon&lt;G2D&gt; pgn=polygon(WGS84,ring(g(4.43,53.21),g(4.44,53.22),g(4.43,53.21)));\"><pre>  <span class=\"pl-k\">Point&lt;<span class=\"pl-smi\">G2D</span>&gt;</span> pnt<span class=\"pl-k\">=</span>point(<span class=\"pl-c1\">WGS84</span>,g(<span class=\"pl-c1\">4.33</span>,<span class=\"pl-c1\">53.21</span>));\n  \n  <span class=\"pl-k\">LineString&lt;<span class=\"pl-smi\">G2D</span>&gt;</span> lstr<span class=\"pl-k\">=</span>linestring(<span class=\"pl-c1\">WGS84</span>,g(<span class=\"pl-c1\">4.43</span>,<span class=\"pl-c1\">53.21</span>),g(<span class=\"pl-c1\">4.44</span>,<span class=\"pl-c1\">53.20</span>),g(<span class=\"pl-c1\">4.45</span>,<span class=\"pl-c1\">53.19</span>));\n  \n  <span class=\"pl-k\">Polygon&lt;<span class=\"pl-smi\">G2D</span>&gt;</span> pgn<span class=\"pl-k\">=</span>polygon(<span class=\"pl-c1\">WGS84</span>,ring(g(<span class=\"pl-c1\">4.43</span>,<span class=\"pl-c1\">53.21</span>),g(<span class=\"pl-c1\">4.44</span>,<span class=\"pl-c1\">53.22</span>),g(<span class=\"pl-c1\">4.43</span>,<span class=\"pl-c1\">53.21</span>)));</pre></div>\n<p dir=\"auto\">We can also create Geometries in a higher-dimensional space. Let's do it in 3D.</p>\n<p dir=\"auto\">First we again need to specify the coordinate reference system we will be working in. In this case, we derive the system\nfrom WGS84 by adding a Vertical system for the elevation.</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  CoordinateReferenceSystem&lt;G3D&gt;  wgs84E=WGS84.addVerticalSystem(LinearUnit.METER,G3D.class);\n        ...\n\n        Point&lt;G3D&gt; pointWithElevation=point(wgs84E,g(4.33,53.21,350));\"><pre>  <span class=\"pl-k\">CoordinateReferenceSystem&lt;<span class=\"pl-smi\">G3D</span>&gt;</span>  wgs84E<span class=\"pl-k\">=</span><span class=\"pl-c1\">WGS84</span><span class=\"pl-k\">.</span>addVerticalSystem(<span class=\"pl-smi\">LinearUnit</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>METER</span>,<span class=\"pl-smi\">G3D</span><span class=\"pl-k\">.</span>class);\n        <span class=\"pl-c1\">...</span>\n\n        <span class=\"pl-k\">Point&lt;<span class=\"pl-smi\">G3D</span>&gt;</span> pointWithElevation<span class=\"pl-k\">=</span>point(wgs84E,g(<span class=\"pl-c1\">4.33</span>,<span class=\"pl-c1\">53.21</span>,<span class=\"pl-c1\">350</span>));</pre></div>\n<h2 dir=\"auto\"><a id=\"user-content-encoding-and-decoding-geometries-to-wktwkb\" class=\"anchor\" aria-hidden=\"true\" href=\"#encoding-and-decoding-geometries-to-wktwkb\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Encoding and Decoding Geometries to WKT/WKB</h2>\n<p dir=\"auto\">Now let's write these out as WKT string.</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import org.geolatte.geom.codec.Wkt;\n  \n  String wkt=Wkt.toWkt(pnt);\n          // &quot;SRID=4326;POINT(4.33 53.21)&quot;\n\n          // or maybe using a specific dialect such as SFA 1.2.1\n          String wktZ=Wkt.toWkt(pntWithElevation,Wkt.Dialect.SFA_1_2_1);\n// &quot;POINT Z (4.33 53.21 350)&quot;\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.geolatte.geom.codec.Wkt</span>;\n  \n  <span class=\"pl-smi\">String</span> wkt<span class=\"pl-k\">=</span><span class=\"pl-smi\">Wkt</span><span class=\"pl-k\">.</span>toWkt(pnt);\n          <span class=\"pl-c\"><span class=\"pl-c\">//</span> \"SRID=4326;POINT(4.33 53.21)\"</span>\n\n          <span class=\"pl-c\"><span class=\"pl-c\">//</span> or maybe using a specific dialect such as SFA 1.2.1</span>\n          <span class=\"pl-smi\">String</span> wktZ<span class=\"pl-k\">=</span><span class=\"pl-smi\">Wkt</span><span class=\"pl-k\">.</span>toWkt(pntWithElevation,<span class=\"pl-smi\">Wkt</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Dialect</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>SFA_1_2_1</span>);\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> \"POINT Z (4.33 53.21 350)\"</span></pre></div>\n<p dir=\"auto\">There is a very similar API for WKB encoding/decoding (see the <code>Wkb</code> codec class).</p>\n<p dir=\"auto\">For historical and practical reasons. The default dialects for WKB/WKT are those used in <a href=\"http://postgis.org\" rel=\"nofollow\">Postgis</a>.</p>\n<h2 dir=\"auto\"><a id=\"user-content-encoding-and-decoding-to-geojson\" class=\"anchor\" aria-hidden=\"true\" href=\"#encoding-and-decoding-to-geojson\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Encoding and Decoding to GeoJson</h2>\n<p dir=\"auto\">See <a href=\"json/README.md\">the json module</a></p>\n<h2 dir=\"auto\"><a id=\"user-content-using-scala\" class=\"anchor\" aria-hidden=\"true\" href=\"#using-scala\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Using Scala?</h2>\n<p dir=\"auto\">There is an experimental module for using this library in idiomatic Scala. See the <a href=\"scala\">scala module</a></p>\n<h2 dir=\"auto\"><a id=\"user-content-javadoc\" class=\"anchor\" aria-hidden=\"true\" href=\"#javadoc\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Javadoc</h2>\n<p dir=\"auto\">The JavaDoc is <a href=\"https://javadoc.io/doc/org.geolatte/geolatte-geom\" rel=\"nofollow\">published on javadoc.io</a>.</p>\n<h1 dir=\"auto\"><a id=\"user-content-the-geometry-model\" class=\"anchor\" aria-hidden=\"true\" href=\"#the-geometry-model\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>The Geometry model</h1>\n<h2 dir=\"auto\"><a id=\"user-content-positions\" class=\"anchor\" aria-hidden=\"true\" href=\"#positions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Positions</h2>\n<p dir=\"auto\">A <code>Position</code> is a tuple of coordinates that specify a position relative to a coordinate reference system. It corresponds\nwith to the concept of <strong>direct position</strong> in the Simple Feature and ISO-19107 specifications.</p>\n<p dir=\"auto\">The coordinate space can be 2-, 3- or 4-dimensional. The first two dimensions are used to specify a point on the earth's\nsurface. The third dimension usually represent altitude or elevation, and the fourth a measurement.</p>\n<p dir=\"auto\">There are two major types of 2D coordinate reference systems. <code>GeographicCoordinateReferenceSystem</code>s specify points on\nthe earth's surface using spherical coordinates (i.e. latitude and longitude).\n<code>ProjectedCoordinateReferenceSystem</code>s use cartesian coordinates (x and y) on a projected plane.</p>\n<p dir=\"auto\">From these 2D base systems we can construct higher-dimensional systems by adding a\n<code>VerticalCoordinateReferenceSystem</code> for elevation and/or a <code>LinearCoordinateReferenceSystem</code> for a (user-defined)\nmeasurement (see <a href=\"#crs\">below</a>).</p>\n<p dir=\"auto\">Consequently, the instantiable (2D) types of <code>Position</code> are <code>G2D</code> (spherical coordinates) and <code>C2D</code> (cartesian\ncoordinates) in a geographic, resp. projected coordinate reference system. Subtypes of <code>G2D</code>for the higher dimensional\ncoordinate reference system are <code>G3D</code> (position + elevation), <code>G2DM</code> (position + measure), and <code>G3DM</code>. For <code>C2D</code> a\nparallel hierarchy exists. This leads to the following class hierarchy.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"docs/resources/positions_hierarchy.png\"><img src=\"docs/resources/positions_hierarchy.png\" alt=\"Position Class Diagram\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\"><a id=\"user-content-geometry\" class=\"anchor\" aria-hidden=\"true\" href=\"#geometry\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Geometry</h2>\n<p dir=\"auto\">A <code>Geometry</code> is a topologically closed set (in the mathematical sense) of <code>Position</code>s. The instantiable <code>Geometry</code>\nsubclasses all specify this set using one or more boundaries. The boundaries in turn are specified by interpolation\nbetween consecutive elements in a list of <code>Position</code>s. These <code>Position</code>s are called the <em>vertices</em> of the\n<code>Geometry</code>.</p>\n<p dir=\"auto\">A distinctive feature of this library is that <code>Geometry</code> class is parameterized by <code>Position</code> type. This means that e.g.\na <code>Point&lt;C2D&gt;</code> is a different type than <code>Point&lt;G2D&gt;</code>. This ensures that it is always explicit what the coordinates mean\n(projected or spherical), and what types of operation make sense. E.g. the euclydian distance on the plane works for\nprojected coordinates, but makes no sense for spherical coordinates.</p>\n<p dir=\"auto\">The instantiable subclasses of <code>Geometry</code> are:</p>\n<ul dir=\"auto\">\n<li><code>Point</code>: a single position</li>\n<li><code>LineString</code>: a 1-dimensional curve specified by linear interpolation between its vertices</li>\n<li><code>Polygon</code>: a 2-dimensional space enclosed by an outer <code>LinearRing</code> (a closed <code>LineString</code>), minus the space enclosed\nby any inner <code>LinearRing</code>s.</li>\n<li><code>MultiPoint</code>: a collection of <code>Point</code>s</li>\n<li><code>MultiLineString</code>: a collection of <code>LineString</code>s</li>\n<li><code>MultiPolygon</code>: a collection of <code>Polygon</code>s</li>\n<li><code>GeometryCollection</code>: a collection of <code>Geometry</code>s</li>\n</ul>\n<h2 dir=\"auto\"><a id=\"user-content-coordinate-reference-systems\" class=\"anchor\" aria-hidden=\"true\" href=\"#coordinate-reference-systems\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a><a name=\"user-content-crs\"></a>Coordinate Reference Systems</h2>\n<p dir=\"auto\">For many operations a <code>CoordinateReferenceSystem</code> is required. The most important ways to create or get hold of an\n<code>CoordinateReferenceSystem</code> instance is:</p>\n<ul dir=\"auto\">\n<li>Using one of the statically declared systems in the <code>CoordinateReferenceSystems</code> class (e.g. <code>WGS84</code>, <code>WEB_MERCATOR</code>)</li>\n<li>Find the system by its <a href=\"https://epsg.org/home.html\" rel=\"nofollow\">EPSG</a> ID in the <code>CrsRepository</code>. The <code>CrsRegistry</code> has most of the\ncoordinate reference systems in use.</li>\n</ul>\n<p dir=\"auto\">As already mentioned, you can create higher-dimensional coordinate reference systems by adding a vertical or linear\nsystem.</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  CoordinateReferenceSystem&lt;C2D&gt; crs=CrsRegistry.getProjectedCoordinateReferenceSystemForEPSG(31370);\n  CoordinateReferenceSystem&lt;C3D&gt; crsZ=crs.addVerticalSystem(LinearUnit.METER,C3D.class);\n  CoordinateReferenceSystem&lt;C3DM&gt; crsZM=crsZ.addLinearSystem(LinearUnit.METER,C3DM.class);\"><pre>  <span class=\"pl-k\">CoordinateReferenceSystem&lt;<span class=\"pl-smi\">C2D</span>&gt;</span> crs<span class=\"pl-k\">=</span><span class=\"pl-smi\">CrsRegistry</span><span class=\"pl-k\">.</span>getProjectedCoordinateReferenceSystemForEPSG(<span class=\"pl-c1\">31370</span>);\n  <span class=\"pl-k\">CoordinateReferenceSystem&lt;<span class=\"pl-smi\">C3D</span>&gt;</span> crsZ<span class=\"pl-k\">=</span>crs<span class=\"pl-k\">.</span>addVerticalSystem(<span class=\"pl-smi\">LinearUnit</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>METER</span>,<span class=\"pl-smi\">C3D</span><span class=\"pl-k\">.</span>class);\n  <span class=\"pl-k\">CoordinateReferenceSystem&lt;<span class=\"pl-smi\">C3DM</span>&gt;</span> crsZM<span class=\"pl-k\">=</span>crsZ<span class=\"pl-k\">.</span>addLinearSystem(<span class=\"pl-smi\">LinearUnit</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>METER</span>,<span class=\"pl-smi\">C3DM</span><span class=\"pl-k\">.</span>class);</pre></div>\n<h2 dir=\"auto\"><a id=\"user-content-geometry-operations\" class=\"anchor\" aria-hidden=\"true\" href=\"#geometry-operations\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Geometry operations</h2>\n<p dir=\"auto\">The <a href=\"https://portal.ogc.org/files/?artifact_id=25355\" rel=\"nofollow\">Simple Feature specification</a> specifies a number of spatial query\nand analysis operations as methods on the <code>Geometry</code> classes. From a design standpoint, declaring these operations as\nmethods has several drawbacks:</p>\n<ul dir=\"auto\">\n<li>Some operations need very different implementations in case of projected vs. geographic coordinate reference systems.</li>\n<li>It precludes the possibility of having alternative implementations for the operations with perhaps very different\nperformance or correctness properties</li>\n</ul>\n<p dir=\"auto\">For these reasons the spatial operations are separated into their own classes. Currently, two types are supported:</p>\n<ul dir=\"auto\">\n<li><code>ProjectedGeometryOperations</code> : operations on projected (planar) geometries (i.e. <code>C2D</code> and subtypes)</li>\n<li><code>MeasureGeometryOperations</code> : operations specific to projected (planar) geometries with a Measure (i.e. <code>C2DM</code>\n, <code>C3DM</code>)</li>\n</ul>\n<p dir=\"auto\">At present there is no support for operations on geometries in a <code>GeographicCoordinateSystem</code>.</p>\n<p dir=\"auto\">You can get hold of an operations class using the <code>GeometryOperations</code> factory class. Currently there are only default\nimplementations available. The <code>ProjectedGeometryOperations</code> implementation will delegate most operations to the\ncorresponding JTS implementation.</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    // example of a contains test with planar geometries\n    ProjectedGeometryOperations pgo=GeometryOperations.projectedGeometryOperations();\n            Point&lt;C2D&gt; point=point(WEB_MERCATOR,c(4.33,53.21));\n        Polygon&lt;C2D&gt; polygon=polygon(WEB_MERCATOR,ring(c(4.43,53.21),c(4.44,53.22),c(4.43,53.21)));\n        boolean isPntInPoly=pgo.contains(polygon,point);\n\n        // example  op an operation on measured geometries\n        MeasureGeometryOperations mgo=GeometryOperations.measureGeometryOperations();\n        LineString&lt;C2DM&gt; linestring=linestring(crsM,cM(4.43,53.21,0),cM(4.44,53.20,1),cM(4.45,53.19,2));\n        //create a geometry along the linestring that is between 1.5 and 1.8\n        Geometry&lt;C2DM&gt; c2DMGeometry=mgo.locateBetween(linestring,1.5,1.8);\"><pre>    <span class=\"pl-c\"><span class=\"pl-c\">//</span> example of a contains test with planar geometries</span>\n    <span class=\"pl-smi\">ProjectedGeometryOperations</span> pgo<span class=\"pl-k\">=</span><span class=\"pl-smi\">GeometryOperations</span><span class=\"pl-k\">.</span>projectedGeometryOperations();\n            <span class=\"pl-k\">Point&lt;<span class=\"pl-smi\">C2D</span>&gt;</span> point<span class=\"pl-k\">=</span>point(<span class=\"pl-c1\">WEB_MERCATOR</span>,c(<span class=\"pl-c1\">4.33</span>,<span class=\"pl-c1\">53.21</span>));\n        <span class=\"pl-k\">Polygon&lt;<span class=\"pl-smi\">C2D</span>&gt;</span> polygon<span class=\"pl-k\">=</span>polygon(<span class=\"pl-c1\">WEB_MERCATOR</span>,ring(c(<span class=\"pl-c1\">4.43</span>,<span class=\"pl-c1\">53.21</span>),c(<span class=\"pl-c1\">4.44</span>,<span class=\"pl-c1\">53.22</span>),c(<span class=\"pl-c1\">4.43</span>,<span class=\"pl-c1\">53.21</span>)));\n        <span class=\"pl-k\">boolean</span> isPntInPoly<span class=\"pl-k\">=</span>pgo<span class=\"pl-k\">.</span>contains(polygon,point);\n\n        <span class=\"pl-c\"><span class=\"pl-c\">//</span> example  op an operation on measured geometries</span>\n        <span class=\"pl-smi\">MeasureGeometryOperations</span> mgo<span class=\"pl-k\">=</span><span class=\"pl-smi\">GeometryOperations</span><span class=\"pl-k\">.</span>measureGeometryOperations();\n        <span class=\"pl-k\">LineString&lt;<span class=\"pl-smi\">C2DM</span>&gt;</span> linestring<span class=\"pl-k\">=</span>linestring(crsM,cM(<span class=\"pl-c1\">4.43</span>,<span class=\"pl-c1\">53.21</span>,<span class=\"pl-c1\">0</span>),cM(<span class=\"pl-c1\">4.44</span>,<span class=\"pl-c1\">53.20</span>,<span class=\"pl-c1\">1</span>),cM(<span class=\"pl-c1\">4.45</span>,<span class=\"pl-c1\">53.19</span>,<span class=\"pl-c1\">2</span>));\n        <span class=\"pl-c\"><span class=\"pl-c\">//</span>create a geometry along the linestring that is between 1.5 and 1.8</span>\n        <span class=\"pl-k\">Geometry&lt;<span class=\"pl-smi\">C2DM</span>&gt;</span> c2DMGeometry<span class=\"pl-k\">=</span>mgo<span class=\"pl-k\">.</span>locateBetween(linestring,<span class=\"pl-c1\">1.5</span>,<span class=\"pl-c1\">1.8</span>);</pre></div>\n<h1 dir=\"auto\"><a id=\"user-content-jts-interop\" class=\"anchor\" aria-hidden=\"true\" href=\"#jts-interop\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>JTS interop</h1>\n<p dir=\"auto\">Because JTS has been the dominant geometry library in the Java ecosystem, JTS interoperability has been a major concern.\nThe <code>JTS</code> class supports conversion from/to JTS <code>Geometry</code> instances.</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  import org.geolatte.geom.jts.JTS;\n//Geolatte to JTS\n  org.locationtech.jts.geom.Point jtsPoint=JTS.to(point(WGS84,g(4.32,53.12)));\n          //.. and back\n          org.geolatte.geom.Point&lt;?&gt; glPnt=JTS.from(jtsPoint);\n        //or if you know the CRS in advance\n        org.geolatte.geom.Point&lt;G2D&gt; glPnt2=JTS.from(jtsPoint,WGS84);\"><pre>  <span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.geolatte.geom.jts.JTS</span>;\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>Geolatte to JTS</span>\n  <span class=\"pl-smi\">org.locationtech.jts.geom<span class=\"pl-k\">.</span>Point</span> jtsPoint<span class=\"pl-k\">=</span><span class=\"pl-c1\">JTS</span><span class=\"pl-k\">.</span>to(point(<span class=\"pl-c1\">WGS84</span>,g(<span class=\"pl-c1\">4.32</span>,<span class=\"pl-c1\">53.12</span>)));\n          <span class=\"pl-c\"><span class=\"pl-c\">//</span>.. and back</span>\n          <span class=\"pl-k\">org.geolatte.geom.Point&lt;?&gt;</span> glPnt<span class=\"pl-k\">=</span><span class=\"pl-c1\">JTS</span><span class=\"pl-k\">.</span>from(jtsPoint);\n        <span class=\"pl-c\"><span class=\"pl-c\">//</span>or if you know the CRS in advance</span>\n        <span class=\"pl-k\">org.geolatte.geom.Point&lt;<span class=\"pl-smi\">G2D</span>&gt;</span> glPnt2<span class=\"pl-k\">=</span><span class=\"pl-c1\">JTS</span><span class=\"pl-k\">.</span>from(jtsPoint,<span class=\"pl-c1\">WGS84</span>);</pre></div>\n</article></div>",
    "contributors" : [
      {
        "login" : "maesenka",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/467961?v=4",
        "url" : "https://api.github.com/users/maesenka",
        "contributions" : 552
      },
      {
        "login" : "cvanfleteren",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1270803?v=4",
        "url" : "https://api.github.com/users/cvanfleteren",
        "contributions" : 10
      },
      {
        "login" : "dependabot[bot]",
        "avatarUrl" : "https://avatars.githubusercontent.com/in/29110?v=4",
        "url" : "https://api.github.com/users/dependabot%5Bbot%5D",
        "contributions" : 8
      },
      {
        "login" : "alexandervanhecke",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/8317507?v=4",
        "url" : "https://api.github.com/users/alexandervanhecke",
        "contributions" : 6
      },
      {
        "login" : "mprins",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1165786?v=4",
        "url" : "https://api.github.com/users/mprins",
        "contributions" : 6
      },
      {
        "login" : "IgnacioCalvo",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/17334320?v=4",
        "url" : "https://api.github.com/users/IgnacioCalvo",
        "contributions" : 6
      },
      {
        "login" : "jvdvegt",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2600739?v=4",
        "url" : "https://api.github.com/users/jvdvegt",
        "contributions" : 5
      },
      {
        "login" : "breglerj",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/29888756?v=4",
        "url" : "https://api.github.com/users/breglerj",
        "contributions" : 5
      },
      {
        "login" : "vdwoudyv",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/953485?v=4",
        "url" : "https://api.github.com/users/vdwoudyv",
        "contributions" : 5
      },
      {
        "login" : "GisMarsch",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/15008871?v=4",
        "url" : "https://api.github.com/users/GisMarsch",
        "contributions" : 4
      },
      {
        "login" : "simonparadies",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/31405573?v=4",
        "url" : "https://api.github.com/users/simonparadies",
        "contributions" : 3
      },
      {
        "login" : "glandais",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/864152?v=4",
        "url" : "https://api.github.com/users/glandais",
        "contributions" : 2
      },
      {
        "login" : "dwadler",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/7352808?v=4",
        "url" : "https://api.github.com/users/dwadler",
        "contributions" : 1
      },
      {
        "login" : "guischulz",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/26159925?v=4",
        "url" : "https://api.github.com/users/guischulz",
        "contributions" : 1
      },
      {
        "login" : "jwgmeligmeyling",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3469492?v=4",
        "url" : "https://api.github.com/users/jwgmeligmeyling",
        "contributions" : 1
      },
      {
        "login" : "JLLeitschuh",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1323708?v=4",
        "url" : "https://api.github.com/users/JLLeitschuh",
        "contributions" : 1
      },
      {
        "login" : "kad-kleijm",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/70878619?v=4",
        "url" : "https://api.github.com/users/kad-kleijm",
        "contributions" : 1
      },
      {
        "login" : "ITCeMM",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/68112154?v=4",
        "url" : "https://api.github.com/users/ITCeMM",
        "contributions" : 1
      },
      {
        "login" : "mwiater1",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/6033295?v=4",
        "url" : "https://api.github.com/users/mwiater1",
        "contributions" : 1
      },
      {
        "login" : "tiago-s-vieira",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/75946028?v=4",
        "url" : "https://api.github.com/users/tiago-s-vieira",
        "contributions" : 1
      },
      {
        "login" : "PeterW-LWL",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/14937653?v=4",
        "url" : "https://api.github.com/users/PeterW-LWL",
        "contributions" : 1
      },
      {
        "login" : "stephanps",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/8776471?v=4",
        "url" : "https://api.github.com/users/stephanps",
        "contributions" : 1
      },
      {
        "login" : "billtian",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3282433?v=4",
        "url" : "https://api.github.com/users/billtian",
        "contributions" : 1
      },
      {
        "login" : "idkw",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/7012331?v=4",
        "url" : "https://api.github.com/users/idkw",
        "contributions" : 1
      },
      {
        "login" : "mu-bro",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/6582781?v=4",
        "url" : "https://api.github.com/users/mu-bro",
        "contributions" : 1
      }
    ],
    "commits" : 625,
    "topics" : [
      "spatial",
      "gis",
      "java",
      "geometry-model",
      "geometry"
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "chatroom" : null,
    "openIssues" : [
      {
        "number" : 138,
        "title" : "CoordinateSystems#combine() method should also change CrsId",
        "url" : "https://github.com/GeoLatte/geolatte-geom/issues/138"
      },
      {
        "number" : 127,
        "title" : "Problem converting from EPSG:32634 to EPSG:4326",
        "url" : "https://github.com/GeoLatte/geolatte-geom/issues/127"
      },
      {
        "number" : 120,
        "title" : "Userguide",
        "url" : "https://github.com/GeoLatte/geolatte-geom/issues/120"
      },
      {
        "number" : 70,
        "title" : "Check Geometry/Geography support in MS SQL Server JDBC drivers",
        "url" : "https://github.com/GeoLatte/geolatte-geom/issues/70"
      },
      {
        "number" : 62,
        "title" : "Add support for PostGIS  Geographies",
        "url" : "https://github.com/GeoLatte/geolatte-geom/issues/62"
      },
      {
        "number" : 58,
        "title" : "SQL Server: Lat/Lon ordering is wrong when doing encoding/decoding",
        "url" : "https://github.com/GeoLatte/geolatte-geom/issues/58"
      },
      {
        "number" : 50,
        "title" : "MS SQL binary format Version 2 should be supported",
        "url" : "https://github.com/GeoLatte/geolatte-geom/issues/50"
      }
    ],
    "scalaPercentage" : null
  },
  "settings" : {
    "defaultStableVersion" : true,
    "defaultArtifact" : null,
    "strictVersions" : false,
    "customScalaDoc" : null,
    "documentationLinks" : [
    ],
    "deprecated" : false,
    "contributorsWanted" : false,
    "artifactDeprecations" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "geometry-and-geopositionning",
    "beginnerIssuesLabel" : null
  }
}