{
  "organization" : "verizon",
  "repository" : "helm",
  "creationDate" : 1488224165000,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1653647431560
    }
  },
  "githubInfo" : {
    "homepage" : null,
    "description" : "A native Scala client for interacting with Consul",
    "logo" : "https://avatars.githubusercontent.com/u/12649763?v=4",
    "stars" : 81,
    "forks" : 25,
    "watchers" : 7,
    "issues" : 3,
    "creationDate" : 1488215206000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-helm\" class=\"anchor\" aria-hidden=\"true\" href=\"#helm\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Helm</h1>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"docs/src/img/logo.png\"><img src=\"docs/src/img/logo.png\" alt=\"Logo\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a href=\"https://travis-ci.org/Verizon/helm\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/802a9f58fda695127a541844b9476698bd434cc398834ce9a54bb66ebfc1335e/68747470733a2f2f7472617669732d63692e6f72672f566572697a6f6e2f68656c6d2e7376673f6272616e63683d6d6173746572\" alt=\"Build Status\" data-canonical-src=\"https://travis-ci.org/Verizon/helm.svg?branch=master\" style=\"max-width: 100%;\"></a>\n<a href=\"https://maven-badges.herokuapp.com/maven-central/io.verizon.helm/core_2.11\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/524da56eda673cfa468e72918e1865107f9a7b45289765ade8c94f6362d30322/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f696f2e766572697a6f6e2e68656c6d2f636f72655f322e31312f62616467652e737667\" alt=\"Maven Central\" data-canonical-src=\"https://maven-badges.herokuapp.com/maven-central/io.verizon.helm/core_2.11/badge.svg\" style=\"max-width: 100%;\"></a>\n<a href=\"https://codecov.io/gh/Verizon/helm\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/ddd05f784b55f530acfd45c3b957ef527d31875d50cd2e3996f44f1d2de94849/68747470733a2f2f636f6465636f762e696f2f67682f566572697a6f6e2f68656c6d2f6272616e63682f6d61737465722f67726170682f62616467652e737667\" alt=\"codecov\" data-canonical-src=\"https://codecov.io/gh/Verizon/helm/branch/master/graph/badge.svg\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">A native <a href=\"http://scala-lang.org\" rel=\"nofollow\">Scala</a> client for interacting with <a href=\"https://www.consul.io/\" rel=\"nofollow\">Consul</a>. There is currently one supported client, which uses <a href=\"http://http4s.org\" rel=\"nofollow\">http4s</a> to make HTTP calls to Consul. Alternative implementations could be added with relative ease by providing an additional free interpreter for the <code>ConsulOp</code> algebra.</p>\n<h2 dir=\"auto\"><a id=\"user-content-getting-started\" class=\"anchor\" aria-hidden=\"true\" href=\"#getting-started\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Getting Started</h2>\n<p dir=\"auto\">Add the following to your <code>build.sbt</code>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"libraryDependencies += &quot;io.verizon.helm&quot; %% &quot;http4s&quot; % &quot;1.4.78-scalaz-7.1&quot;\"><pre class=\"notranslate\"><code>libraryDependencies += \"io.verizon.helm\" %% \"http4s\" % \"1.4.78-scalaz-7.1\"\n</code></pre></div>\n<p dir=\"auto\">The <em>Helm</em> binaries are located on maven central, so no additional resolvers are needed.</p>\n<h3 dir=\"auto\"><a id=\"user-content-algebra\" class=\"anchor\" aria-hidden=\"true\" href=\"#algebra\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Algebra</h3>\n<p dir=\"auto\">Consul operations are specified by the <code>ConsulOp</code> algebra.  Two\nexamples are <code>get</code> and <code>set</code>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import helm._\nimport ConsulOp.ConsulOpF\n\nval s: ConsulOpF[Unit] = : ConsulOp.kvSet(&quot;key&quot;, &quot;value&quot;)\n\nval g: ConsulOpF[Option[String]] = : ConsulOp.kvGet(&quot;key&quot;)\"><pre class=\"notranslate\"><code>import helm._\nimport ConsulOp.ConsulOpF\n\nval s: ConsulOpF[Unit] = : ConsulOp.kvSet(\"key\", \"value\")\n\nval g: ConsulOpF[Option[String]] = : ConsulOp.kvGet(\"key\")\n</code></pre></div>\n<p dir=\"auto\">These are however just descriptions of what operations the program might perform in the future, just creating these operations does not\nactually execute the operations. In order to perform the gets and sets, we need to use the <a href=\"http://http4s.org\" rel=\"nofollow\">http4s</a> interpreter.</p>\n<h3 dir=\"auto\"><a id=\"user-content-the-http4s-interpreter\" class=\"anchor\" aria-hidden=\"true\" href=\"#the-http4s-interpreter\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>The http4s interpreter</h3>\n<p dir=\"auto\">First we create an interpreter, which requires an http4s client and\na base url for consul:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import cats.effect.IO\nimport helm.http4s._\nimport org.http4s.Uri.uri\nimport org.http4s.client.blaze.Http1Client\n\nval client = Http1Client[IO]().unsafeRunSync\nval baseUrl = uri(&quot;http://127.0.0.1:8500&quot;)\n\nval interpreter = new Http4sConsulClient(baseUrl, client)\"><pre class=\"notranslate\"><code>import cats.effect.IO\nimport helm.http4s._\nimport org.http4s.Uri.uri\nimport org.http4s.client.blaze.Http1Client\n\nval client = Http1Client[IO]().unsafeRunSync\nval baseUrl = uri(\"http://127.0.0.1:8500\")\n\nval interpreter = new Http4sConsulClient(baseUrl, client)\n</code></pre></div>\n<p dir=\"auto\">Now we can apply commands to our http4s client to get back IOs\nwhich actually interact with consul.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import cats.effect.IO\n\nval s: IO[Unit] = helm.run(interpreter, ConsulOp.kvSet(&quot;testkey&quot;, &quot;testvalue&quot;))\n\nval g: IO[Option[String]] = helm.run(interpreter, ConsulOp.kvGet(&quot;testkey&quot;))\n\n// actually execute the calls\ns.unsafeRunSync\ng.unsafeRunSync\"><pre class=\"notranslate\"><code>import cats.effect.IO\n\nval s: IO[Unit] = helm.run(interpreter, ConsulOp.kvSet(\"testkey\", \"testvalue\"))\n\nval g: IO[Option[String]] = helm.run(interpreter, ConsulOp.kvGet(\"testkey\"))\n\n// actually execute the calls\ns.unsafeRunSync\ng.unsafeRunSync\n</code></pre></div>\n<p dir=\"auto\">Typically, the <em>Helm</em> algebra would be a part of a <code>Coproduct</code> with other algebras in a larger program, so running the <code>IO</code> immediately after <code>helm.run</code> is not typical.</p>\n<h2 dir=\"auto\"><a id=\"user-content-contributing\" class=\"anchor\" aria-hidden=\"true\" href=\"#contributing\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Contributing</h2>\n<p dir=\"auto\">Contributions are welcome; particularly to expand the algebra with additional operations that are supported by Consul but not yet supported by <em>Helm</em>.</p>\n</article></div>",
    "contributors" : [
      {
        "login" : "timperrett",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/458?v=4",
        "url" : "https://github.com/timperrett",
        "contributions" : 37
      },
      {
        "login" : "rossabaker",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/142698?v=4",
        "url" : "https://github.com/rossabaker",
        "contributions" : 28
      },
      {
        "login" : "aldiyen",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/974835?v=4",
        "url" : "https://github.com/aldiyen",
        "contributions" : 27
      },
      {
        "login" : "stew",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/66772?v=4",
        "url" : "https://github.com/stew",
        "contributions" : 24
      },
      {
        "login" : "ppressives",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/9866186?v=4",
        "url" : "https://github.com/ppressives",
        "contributions" : 2
      },
      {
        "login" : "jasonmartens",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1844931?v=4",
        "url" : "https://github.com/jasonmartens",
        "contributions" : 1
      }
    ],
    "commits" : 119,
    "topics" : [
      "consul",
      "infrastructure",
      "reasonable"
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "chatroom" : null,
    "openIssues" : [
      {
        "number" : 17,
        "title" : "question: support for per-request token?",
        "url" : "https://github.com/Verizon/helm/issues/17"
      }
    ],
    "scalaPercentage" : 100,
    "license" : null
  },
  "settings" : {
    "defaultStableVersion" : true,
    "defaultArtifact" : null,
    "strictVersions" : false,
    "customScalaDoc" : null,
    "documentationLinks" : [
    ],
    "deprecated" : false,
    "contributorsWanted" : false,
    "artifactDeprecations" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "deployment-and-cloud",
    "beginnerIssuesLabel" : null
  }
}