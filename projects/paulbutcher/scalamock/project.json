{
  "organization" : "paulbutcher",
  "repository" : "scalamock",
  "creationDate" : 1350132252000,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1723608471233
    }
  },
  "githubInfo" : {
    "homepage" : "http://scalamock.org/",
    "description" : "Native Scala mocking framework",
    "logo" : "https://avatars.githubusercontent.com/u/61163?v=4",
    "stars" : 502,
    "forks" : 99,
    "watchers" : 22,
    "issues" : 30,
    "creationDate" : 1319491922000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div class=\"markdown-heading\" dir=\"auto\"><h1 class=\"heading-element\" dir=\"auto\">ScalaMock</h1><a id=\"user-content-scalamock\" class=\"anchor\" aria-label=\"Permalink: ScalaMock\" href=\"#scalamock\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">Native Scala mocking.</p>\n<p dir=\"auto\">Official website: <a href=\"https://scalamock.org/\" rel=\"nofollow\">scalamock.org</a></p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Examples</h2><a id=\"user-content-examples\" class=\"anchor\" aria-label=\"Permalink: Examples\" href=\"#examples\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h3 class=\"heading-element\" dir=\"auto\">Expectations-First Style</h3><a id=\"user-content-expectations-first-style\" class=\"anchor\" aria-label=\"Permalink: Expectations-First Style\" href=\"#expectations-first-style\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"test(&quot;drawline interaction with turtle&quot;) {\n  // Create mock Turtle object\n  val m = mock[Turtle]\n  \n  // Set expectations\n  (m.setPosition _).expects(10.0, 10.0)\n  (m.forward _).expects(5.0)\n  (m.getPosition _).expects().returning(15.0, 10.0)\n\n  // Exercise System Under Test\n  drawLine(m, (10.0, 10.0), (15.0, 10.0))\n}\"><pre>test(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>drawline interaction with turtle<span class=\"pl-pds\">\"</span></span>) {\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> Create mock Turtle object</span>\n  <span class=\"pl-k\">val</span> <span class=\"pl-v\">m</span> <span class=\"pl-k\">=</span> mock[<span class=\"pl-en\">Turtle</span>]\n  \n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> Set expectations</span>\n  (m.setPosition _).expects(<span class=\"pl-c1\">10.0</span>, <span class=\"pl-c1\">10.0</span>)\n  (m.forward _).expects(<span class=\"pl-c1\">5.0</span>)\n  (m.getPosition _).expects().returning(<span class=\"pl-c1\">15.0</span>, <span class=\"pl-c1\">10.0</span>)\n\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> Exercise System Under Test</span>\n  drawLine(m, (<span class=\"pl-c1\">10.0</span>, <span class=\"pl-c1\">10.0</span>), (<span class=\"pl-c1\">15.0</span>, <span class=\"pl-c1\">10.0</span>))\n}</pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h3 class=\"heading-element\" dir=\"auto\">Record-then-Verify (Mockito) Style</h3><a id=\"user-content-record-then-verify-mockito-style\" class=\"anchor\" aria-label=\"Permalink: Record-then-Verify (Mockito) Style\" href=\"#record-then-verify-mockito-style\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"test(&quot;drawline interaction with turtle&quot;) {\n  // Create stub Turtle\n  val m = stub[Turtle]\n  \n  // Setup return values\n  (m.getPosition _).when().returns(15.0, 10.0)\n\n  // Exercise System Under Test\n  drawLine(m, (10.0, 10.0), (15.0, 10.0))\n\n  // Verify expectations met\n  (m.setPosition _).verify(10.0, 10.0)\n  (m.forward _).verify(5.0)\n}\"><pre>test(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>drawline interaction with turtle<span class=\"pl-pds\">\"</span></span>) {\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> Create stub Turtle</span>\n  <span class=\"pl-k\">val</span> <span class=\"pl-v\">m</span> <span class=\"pl-k\">=</span> stub[<span class=\"pl-en\">Turtle</span>]\n  \n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> Setup return values</span>\n  (m.getPosition _).when().returns(<span class=\"pl-c1\">15.0</span>, <span class=\"pl-c1\">10.0</span>)\n\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> Exercise System Under Test</span>\n  drawLine(m, (<span class=\"pl-c1\">10.0</span>, <span class=\"pl-c1\">10.0</span>), (<span class=\"pl-c1\">15.0</span>, <span class=\"pl-c1\">10.0</span>))\n\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> Verify expectations met</span>\n  (m.setPosition _).verify(<span class=\"pl-c1\">10.0</span>, <span class=\"pl-c1\">10.0</span>)\n  (m.forward _).verify(<span class=\"pl-c1\">5.0</span>)\n}</pre></div>\n<p dir=\"auto\">A more complete example is on our <a href=\"http://scalamock.org/quick-start/\" rel=\"nofollow\">Quickstart</a> page.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Features</h2><a id=\"user-content-features\" class=\"anchor\" aria-label=\"Permalink: Features\" href=\"#features\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<ul dir=\"auto\">\n<li>Fully typesafe</li>\n<li>Full support for Scala features such as:\n<ul dir=\"auto\">\n<li>Polymorphic (type parameterised) methods</li>\n<li>Operators (methods with symbolic names)</li>\n<li>Overloaded methods</li>\n<li>Type constraints</li>\n</ul>\n</li>\n<li>ScalaTest and Specs2 integration</li>\n<li>Mock and Stub support</li>\n<li>Macro Mocks and JVM Proxy Mocks</li>\n<li>Scala.js support</li>\n<li>built for Scala 2.12, 2.13, 3</li>\n<li>Scala 2.10 support was included up to ScalaMock 4.2.0</li>\n<li>Scala 2.11 support was included up to ScalaMock 5.2.0</li>\n</ul>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Using ScalaMock</h2><a id=\"user-content-using-scalamock\" class=\"anchor\" aria-label=\"Permalink: Using ScalaMock\" href=\"#using-scalamock\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">Artefacts are published to Maven Central and Sonatype OSS.</p>\n<p dir=\"auto\">For ScalaTest, to use ScalaMock in your Tests, add the following to your <code>build.sbt</code>:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"libraryDependencies += Seq(&quot;org.scalamock&quot; %% &quot;scalamock&quot; % &quot;5.2.0&quot; % Test,\n    &quot;org.scalatest&quot; %% &quot;scalatest&quot; % &quot;3.2.0&quot; % Test)\"><pre>libraryDependencies <span class=\"pl-k\">+</span><span class=\"pl-k\">=</span> <span class=\"pl-en\">Seq</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>org.scalamock<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>scalamock<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>5.2.0<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-en\">Test</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>org.scalatest<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>scalatest<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>3.2.0<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-en\">Test</span>)</pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Scala 3 Migration Notes</h2><a id=\"user-content-scala-3-migration-notes\" class=\"anchor\" aria-label=\"Permalink: Scala 3 Migration Notes\" href=\"#scala-3-migration-notes\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<ol dir=\"auto\">\n<li>Type should be specified for methods with by-name parameters</li>\n</ol>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"trait TestTrait:\n  def byNameParam(x: =&gt; Int): String\n\nval t = mock[TestTrait]\n\n// this one no longer compiles\n(t.byNameParam _).expects(*).returns(&quot;&quot;)\n\n// this one should be used instead\n(t.byNameParam(_: Int)).expects(*).returns(&quot;&quot;)\"><pre><span class=\"pl-k\">trait</span> <span class=\"pl-en\">TestTrait</span><span class=\"pl-k\">:</span>\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">byNameParam</span>(<span class=\"pl-v\">x</span>: <span class=\"pl-k\">=&gt;</span> <span class=\"pl-en\">Int</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">String</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">t</span> <span class=\"pl-k\">=</span> mock[<span class=\"pl-en\">TestTrait</span>]\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> this one no longer compiles</span>\n(t.byNameParam _).expects(<span class=\"pl-k\">*</span>).returns(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> this one should be used instead</span>\n(t.byNameParam(<span class=\"pl-v\">_</span>: <span class=\"pl-en\">Int</span>)).expects(<span class=\"pl-k\">*</span>).returns(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>)</pre></div>\n<ol start=\"2\" dir=\"auto\">\n<li></li>\n</ol>\n<ul dir=\"auto\">\n<li>Not initialized vars are not supported anymore, use <code>scala.compiletime.uninitialized</code> instead</li>\n<li>Vars are <strong>not mockable</strong> anymore</li>\n</ul>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"trait X:\n  var y: Int  // No longer compiles\n  \n  var y: Int = scala.compile.uninitialized // Should be used instead\"><pre><span class=\"pl-k\">trait</span> <span class=\"pl-en\">X</span><span class=\"pl-k\">:</span>\n  <span class=\"pl-k\">var</span> <span class=\"pl-v\">y</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Int</span>  <span class=\"pl-c\"><span class=\"pl-c\">//</span> No longer compiles</span>\n  \n  <span class=\"pl-k\">var</span> <span class=\"pl-v\">y</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Int</span> <span class=\"pl-k\">=</span> scala.compile.uninitialized <span class=\"pl-c\"><span class=\"pl-c\">//</span> Should be used instead</span></pre></div>\n<p dir=\"auto\">Mocking of non-abstract java classes is not available without workaround</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public class JavaClass {\n    public int simpleMethod(String b) { return 4; }\n}\n\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">JavaClass</span> {\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">int</span> <span class=\"pl-en\">simpleMethod</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">b</span>) { <span class=\"pl-k\">return</span> <span class=\"pl-c1\">4</span>; }\n}</pre></div>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"val m = mock[JavaClass] // No longer compiles\n\nclass JavaClassExtended extends JavaClass\n\nval mm = mock[JavaClassExtended] // should be used instead\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-v\">m</span> <span class=\"pl-k\">=</span> mock[<span class=\"pl-en\">JavaClass</span>] <span class=\"pl-c\"><span class=\"pl-c\">//</span> No longer compiles</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">JavaClassExtended</span> <span class=\"pl-k\">extends</span> <span class=\"pl-en\">JavaClass</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">mm</span> <span class=\"pl-k\">=</span> mock[<span class=\"pl-en\">JavaClassExtended</span>] <span class=\"pl-c\"><span class=\"pl-c\">//</span> should be used instead</span></pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Documentation</h2><a id=\"user-content-documentation\" class=\"anchor\" aria-label=\"Permalink: Documentation\" href=\"#documentation\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">For usage in Maven or Gradle, integration with Specs2, and more example examples see the <a href=\"http://scalamock.org/user-guide/\" rel=\"nofollow\">User Guide</a></p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Acknowledgements</h2><a id=\"user-content-acknowledgements\" class=\"anchor\" aria-label=\"Permalink: Acknowledgements\" href=\"#acknowledgements\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">YourKit is kindly supporting open source projects with its full-featured Java Profiler.\nYourKit, LLC is the creator of innovative and intelligent tools for profiling\nJava and .NET applications. Take a look at YourKit's leading software products:\n<a href=\"http://www.yourkit.com/java/profiler/index.jsp\" rel=\"nofollow\">YourKit Java Profiler</a> and\n<a href=\"http://www.yourkit.com/.net/profiler/index.jsp\" rel=\"nofollow\">YourKit .NET Profiler</a>.</p>\n<p dir=\"auto\">Many thanks to Jetbrains for providing us with an OSS licence for their fine development\ntools such as <a href=\"https://www.jetbrains.com/idea/\" rel=\"nofollow\">IntelliJ IDEA</a>.</p>\n<p dir=\"auto\">Also, thanks to <a href=\"https://github.com/fthomas/scala-steward\">https://github.com/fthomas/scala-steward</a> for helping to keep our dependencies updated automatically.</p>\n</article></div>",
    "contributors" : [
      {
        "login" : "paulbutcher",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/61163?v=4",
        "url" : "https://github.com/paulbutcher",
        "contributions" : 311
      },
      {
        "login" : "barkhorn",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3852104?v=4",
        "url" : "https://github.com/barkhorn",
        "contributions" : 230
      },
      {
        "login" : "scala-steward",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/43047562?v=4",
        "url" : "https://github.com/scala-steward",
        "contributions" : 111
      },
      {
        "login" : "pawel-wiejacha",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/7749867?v=4",
        "url" : "https://github.com/pawel-wiejacha",
        "contributions" : 86
      },
      {
        "login" : "maqdev",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/614676?v=4",
        "url" : "https://github.com/maqdev",
        "contributions" : 24
      },
      {
        "login" : "xuwei-k",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/389787?v=4",
        "url" : "https://github.com/xuwei-k",
        "contributions" : 6
      },
      {
        "login" : "Philippus",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1923596?v=4",
        "url" : "https://github.com/Philippus",
        "contributions" : 5
      },
      {
        "login" : "goshacodes",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/134854076?v=4",
        "url" : "https://github.com/goshacodes",
        "contributions" : 4
      },
      {
        "login" : "wangxhere",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/8857579?v=4",
        "url" : "https://github.com/wangxhere",
        "contributions" : 4
      },
      {
        "login" : "SethTisue",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/161079?v=4",
        "url" : "https://github.com/SethTisue",
        "contributions" : 3
      },
      {
        "login" : "martijnhoekstra",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/882449?v=4",
        "url" : "https://github.com/martijnhoekstra",
        "contributions" : 2
      },
      {
        "login" : "sullis",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/30938?v=4",
        "url" : "https://github.com/sullis",
        "contributions" : 2
      },
      {
        "login" : "hhimanshu",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/6589036?v=4",
        "url" : "https://github.com/hhimanshu",
        "contributions" : 2
      },
      {
        "login" : "cheeseng",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1322009?v=4",
        "url" : "https://github.com/cheeseng",
        "contributions" : 2
      },
      {
        "login" : "hydra",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/57075?v=4",
        "url" : "https://github.com/hydra",
        "contributions" : 2
      },
      {
        "login" : "backuitist",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1017537?v=4",
        "url" : "https://github.com/backuitist",
        "contributions" : 1
      },
      {
        "login" : "cb372",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/106760?v=4",
        "url" : "https://github.com/cb372",
        "contributions" : 1
      },
      {
        "login" : "by-dam",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1948559?v=4",
        "url" : "https://github.com/by-dam",
        "contributions" : 1
      },
      {
        "login" : "dodnert",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/7461725?v=4",
        "url" : "https://github.com/dodnert",
        "contributions" : 1
      },
      {
        "login" : "ddworak",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/6950688?v=4",
        "url" : "https://github.com/ddworak",
        "contributions" : 1
      },
      {
        "login" : "dwickern",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/752885?v=4",
        "url" : "https://github.com/dwickern",
        "contributions" : 1
      },
      {
        "login" : "povder",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/16050375?v=4",
        "url" : "https://github.com/povder",
        "contributions" : 1
      },
      {
        "login" : "luiz290788",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/707366?v=4",
        "url" : "https://github.com/luiz290788",
        "contributions" : 1
      },
      {
        "login" : "lj-ditrapani",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/5594604?v=4",
        "url" : "https://github.com/lj-ditrapani",
        "contributions" : 1
      },
      {
        "login" : "mkasberg",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/12214617?v=4",
        "url" : "https://github.com/mkasberg",
        "contributions" : 1
      },
      {
        "login" : "nimatrueway",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2261274?v=4",
        "url" : "https://github.com/nimatrueway",
        "contributions" : 1
      },
      {
        "login" : "valericus",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1207378?v=4",
        "url" : "https://github.com/valericus",
        "contributions" : 1
      }
    ],
    "commits" : 806,
    "topics" : [
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "openIssues" : [
      {
        "number" : 507,
        "title" : "Mocking Slick Table results in compile error",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/507"
      },
      {
        "number" : 501,
        "title" : "update github pages docs for scala 3",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/501"
      },
      {
        "number" : 500,
        "title" : "Testing scala Parser and get `Parameter type in structural refinement may not refer to an abstract type defined outside that refinement`",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/500"
      },
      {
        "number" : 499,
        "title" : "\"Error while emitting\" on wrong mock usage",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/499"
      },
      {
        "number" : 489,
        "title" : "explicit wrapping in withExpectations needed when working with specs2 Specification",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/489"
      },
      {
        "number" : 453,
        "title" : "Documentation: Mocking 0-parameter function and parameterless function",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/453"
      },
      {
        "number" : 445,
        "title" : "ScalaMock macro does not infer/resolve context-bound type-parameters correctly",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/445"
      },
      {
        "number" : 443,
        "title" : "Specs2 Example Test Not Failing When Assertion Changed",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/443"
      },
      {
        "number" : 420,
        "title" : "Update to ScalaMock 5.1.0 breaks argument matching",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/420"
      },
      {
        "number" : 413,
        "title" : "Cannot mock overloaded methods if types of their arguments are parametrised with wildcard type",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/413"
      },
      {
        "number" : 412,
        "title" : "Mocking interface that defines public clone method fails on Scala 2.13.6",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/412"
      },
      {
        "number" : 245,
        "title" : "Compilation error on mocking java class with varargs constructor",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/245"
      },
      {
        "number" : 225,
        "title" : "Fail to mock Java Generic interface with overloaded method (different number of params) ",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/225"
      },
      {
        "number" : 223,
        "title" : "An unexpected call to one of the method of a mock doesn't always fails a test",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/223"
      },
      {
        "number" : 209,
        "title" : "issues with functions returning `this.type`",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/209"
      },
      {
        "number" : 198,
        "title" : "compilation error when mocking classes defined inside traits",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/198"
      },
      {
        "number" : 191,
        "title" : "error when mocking a Scala.js native method",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/191"
      },
      {
        "number" : 170,
        "title" : "Compiler error when mocking classes with generics",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/170"
      },
      {
        "number" : 150,
        "title" : "Compiler crash on function-return style currying",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/150"
      },
      {
        "number" : 131,
        "title" : "Issues mocking curried method with variable argument parameter",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/131"
      },
      {
        "number" : 93,
        "title" : "Overloaded method cannot be mocked if one of its parameters is a generic available to the trait.",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/93"
      },
      {
        "number" : 86,
        "title" : "Type error when mocking java method with generic parameter declared without type parameter",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/86"
      },
      {
        "number" : 76,
        "title" : "Cannot mock trait with methods with bounded type parameters",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/76"
      },
      {
        "number" : 63,
        "title" : "Type Mismatch Error when Mocking Custom Map Implementation",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/63"
      },
      {
        "number" : 60,
        "title" : "Option of nested trait causes \"method has incompatible type\" error",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/60"
      },
      {
        "number" : 39,
        "title" : "Overloaded methods with parameters passed by-name cannot be mocked",
        "url" : "https://github.com/paulbutcher/ScalaMock/issues/39"
      }
    ],
    "scalaPercentage" : 98,
    "license" : "MIT",
    "commitActivity" : [
    ]
  },
  "settings" : {
    "preferStableVersion" : true,
    "defaultArtifact" : "scalamock",
    "customScalaDoc" : "https://www.javadoc.io/doc/org.scalamock/scalamock_2.12/[version]",
    "documentationLinks" : [
      {
        "Homepage" : "http://scalamock.org/"
      },
      {
        "User Guide" : "http://scalamock.org/user-guide/"
      },
      {
        "Quick Start" : "http://scalamock.org/quick-start/"
      },
      {
        "FAQ" : "http://scalamock.org/user-guide/faq/"
      }
    ],
    "contributorsWanted" : false,
    "deprecatedArtifacts" : [
      "scalamock-core-tests",
      "scalamock-examples",
      "scalamock-core",
      "scalamock-specs2-support",
      "scalamock-scalatest-support"
    ],
    "cliArtifacts" : [
      "scalamock"
    ],
    "category" : "testing",
    "chatroom" : null
  }
}