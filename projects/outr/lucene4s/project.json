{
  "organization" : "outr",
  "repository" : "lucene4s",
  "creationDate" : 1477668294800,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1644303326076
    }
  },
  "githubInfo" : {
    "homepage" : null,
    "description" : "Light-weight convenience wrapper around Lucene to simplify complex tasks and add Scala sugar.",
    "logo" : "https://avatars.githubusercontent.com/u/5854353?v=4",
    "stars" : 47,
    "forks" : 15,
    "watchers" : 6,
    "issues" : 7,
    "creationDate" : 1476211258000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-lucene4s\" class=\"anchor\" aria-hidden=\"true\" href=\"#lucene4s\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>lucene4s</h1>\n<p dir=\"auto\"><a href=\"https://travis-ci.org/outr/lucene4s\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/3c27f70f404f83281ea141e44699f5ae632c1ce3132e4d65d1b9166cb7628206/68747470733a2f2f7472617669732d63692e6f72672f6f7574722f6c7563656e6534732e7376673f6272616e63683d6d6173746572\" alt=\"Build Status\" data-canonical-src=\"https://travis-ci.org/outr/lucene4s.svg?branch=master\" style=\"max-width: 100%;\"></a>\n<a href=\"https://waffle.io/outr/lucene4s\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/d06913407bdb285f6873a3ee082307e4f0f91ffd087ead196dd03896f9110ab8/68747470733a2f2f62616467652e776166666c652e696f2f6f7574722f6c7563656e6534732e706e673f6c6162656c3d7265616479267469746c653d5265616479\" alt=\"Stories in Ready\" data-canonical-src=\"https://badge.waffle.io/outr/lucene4s.png?label=ready&amp;title=Ready\" style=\"max-width: 100%;\"></a>\n<a href=\"https://gitter.im/outr/lucene4s\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/5dbac0213da25c445bd11f168587c11a200ba153ef3014e8408e462e410169b3/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667\" alt=\"Gitter\" data-canonical-src=\"https://badges.gitter.im/Join%20Chat.svg\" style=\"max-width: 100%;\"></a>\n<a href=\"https://maven-badges.herokuapp.com/maven-central/com.outr/lucene4s_2.12\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/e739fd902301a44063f85926d9460e47866cee12561dd51194a4fc3a280a5590/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f636f6d2e6f7574722f6c7563656e6534735f322e31322e737667\" alt=\"Maven Central\" data-canonical-src=\"https://img.shields.io/maven-central/v/com.outr/lucene4s_2.12.svg\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Light-weight convenience wrapper around Lucene to simplify complex tasks and add Scala sugar.</p>\n<h2 dir=\"auto\"><a id=\"user-content-setup\" class=\"anchor\" aria-hidden=\"true\" href=\"#setup\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Setup</h2>\n<p dir=\"auto\">lucene4s is published to Sonatype OSS and Maven Central currently supporting Scala 2.11, 2.12, 2.13, and 3.0.</p>\n<p dir=\"auto\">Configuring the dependency in SBT simply requires:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"libraryDependencies += &quot;com.outr&quot; %% &quot;lucene4s&quot; % &quot;1.11.1&quot;\"><pre><code>libraryDependencies += \"com.outr\" %% \"lucene4s\" % \"1.11.1\"\n</code></pre></div>\n<h2 dir=\"auto\"><a id=\"user-content-using\" class=\"anchor\" aria-hidden=\"true\" href=\"#using\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Using</h2>\n<h3 dir=\"auto\"><a id=\"user-content-imports\" class=\"anchor\" aria-hidden=\"true\" href=\"#imports\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Imports</h3>\n<p dir=\"auto\">You may find yourself needing other imports depending on what you're doing, but the majority of functionality can be\nachieved simply importing <code>com.outr.lucene4s._</code>:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import com.outr.lucene4s._\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">com</span>.<span class=\"pl-en\">outr</span>.<span class=\"pl-en\">lucene4s</span>.<span class=\"pl-en\">_</span></pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-creating-a-lucene-instance\" class=\"anchor\" aria-hidden=\"true\" href=\"#creating-a-lucene-instance\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Creating a Lucene Instance</h3>\n<p dir=\"auto\"><code>Lucene</code> is the object utilized for doing anything with Lucene, so you first need to instantiate it:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val directory = Paths.get(&quot;index&quot;)\nval lucene = new DirectLucene(Nil, directory = Option(directory))\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">directory</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Paths</span>.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>index<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">lucene</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">DirectLucene</span>(<span class=\"pl-en\">Nil</span>, directory <span class=\"pl-k\">=</span> <span class=\"pl-en\">Option</span>(directory))</pre></div>\n<p dir=\"auto\">NOTE: If you leave <code>directory</code> blank or set it to None (the default) it will use an in-memory index.</p>\n<h3 dir=\"auto\"><a id=\"user-content-creating-fields\" class=\"anchor\" aria-hidden=\"true\" href=\"#creating-fields\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Creating Fields</h3>\n<p dir=\"auto\">For type-safety and convenience we can create the fields we'll be using in the document ahead of time:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val name = lucene.create.field[String](&quot;name&quot;)\nval address = lucene.create.field[String](&quot;address&quot;)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">name</span> <span class=\"pl-k\">=</span> lucene.create.field[<span class=\"pl-en\">String</span>](<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">address</span> <span class=\"pl-k\">=</span> lucene.create.field[<span class=\"pl-en\">String</span>](<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>address<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-inserting-documents\" class=\"anchor\" aria-hidden=\"true\" href=\"#inserting-documents\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Inserting Documents</h3>\n<p dir=\"auto\">Inserting is quite easy using the document builder:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"lucene.doc().fields(name(&quot;John Doe&quot;), address(&quot;123 Somewhere Rd.&quot;)).index()\nlucene.doc().fields(name(&quot;Jane Doe&quot;), address(&quot;123 Somewhere Rd.&quot;)).index()\"><pre>lucene.doc().fields(name(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>John Doe<span class=\"pl-pds\">\"</span></span>), address(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>123 Somewhere Rd.<span class=\"pl-pds\">\"</span></span>)).index()\nlucene.doc().fields(name(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Jane Doe<span class=\"pl-pds\">\"</span></span>), address(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>123 Somewhere Rd.<span class=\"pl-pds\">\"</span></span>)).index()</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-querying-documents\" class=\"anchor\" aria-hidden=\"true\" href=\"#querying-documents\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Querying Documents</h3>\n<p dir=\"auto\">Querying documents is just as easy with the query builder:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val paged = lucene.query().sort(Sort(name)).search()\npaged.results.foreach { searchResult =&gt;\n  println(s&quot;Name: ${searchResult(name)}, Address: ${searchResult(address)}&quot;)\n}\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">paged</span> <span class=\"pl-k\">=</span> lucene.query().sort(<span class=\"pl-en\">Sort</span>(name)).search()\npaged.results.foreach { searchResult <span class=\"pl-k\">=&gt;</span>\n  println(<span class=\"pl-k\">s</span><span class=\"pl-s\">\"</span><span class=\"pl-s\">Name: </span>${searchResult(name)}<span class=\"pl-s\">, Address: </span>${searchResult(address)}<span class=\"pl-s\">\"</span>)\n}</pre></div>\n<p dir=\"auto\">This will return a <code>PagedResults</code> instance with the page size set to the <code>limit</code>. There are convenience methods for\nnavigating the pagination and accessing the results.</p>\n<p dir=\"auto\">The above code will output:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Name: John Doe, Address: 123 Somewhere Rd.\nName: Jane Doe, Address: 123 Somewhere Rd.\"><pre><code>Name: John Doe, Address: 123 Somewhere Rd.\nName: Jane Doe, Address: 123 Somewhere Rd.\n</code></pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-highlighting-results\" class=\"anchor\" aria-hidden=\"true\" href=\"#highlighting-results\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Highlighting Results</h3>\n<p dir=\"auto\">Though querying is nice, we may want to stylize the output to show the matched results. This is pretty simple:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val paged = lucene.query().sort(Sort(name)).filter(fuzzy(name(&quot;jhn&quot;))).highlight().search()\npaged.results.foreach { searchResult =&gt;\n  val highlighting = searchResult.highlighting(name).head\n  println(s&quot;Fragment: ${highlighting.fragment}, Word: ${highlighting.word}&quot;)\n}\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">paged</span> <span class=\"pl-k\">=</span> lucene.query().sort(<span class=\"pl-en\">Sort</span>(name)).filter(fuzzy(name(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>jhn<span class=\"pl-pds\">\"</span></span>))).highlight().search()\npaged.results.foreach { searchResult <span class=\"pl-k\">=&gt;</span>\n  <span class=\"pl-k\">val</span> <span class=\"pl-smi\">highlighting</span> <span class=\"pl-k\">=</span> searchResult.highlighting(name).head\n  println(<span class=\"pl-k\">s</span><span class=\"pl-s\">\"</span><span class=\"pl-s\">Fragment: </span>${highlighting.fragment}<span class=\"pl-s\">, Word: </span>${highlighting.word}<span class=\"pl-s\">\"</span>)\n}</pre></div>\n<p dir=\"auto\">The above code will output:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Fragment: &lt;em&gt;John&lt;/em&gt; Doe, Word: John\nFragment: &lt;em&gt;Jane&lt;/em&gt; Doe, Word: Jane\"><pre><code>Fragment: &lt;em&gt;John&lt;/em&gt; Doe, Word: John\nFragment: &lt;em&gt;Jane&lt;/em&gt; Doe, Word: Jane\n</code></pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-faceted-searching\" class=\"anchor\" aria-hidden=\"true\" href=\"#faceted-searching\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Faceted Searching</h3>\n<p dir=\"auto\">See <a href=\"https://github.com/outr/lucene4s/blob/master/implementation/src/test/scala/tests/FacetsSpec.scala\">https://github.com/outr/lucene4s/blob/master/implementation/src/test/scala/tests/FacetsSpec.scala</a></p>\n<h3 dir=\"auto\"><a id=\"user-content-full-text-searching\" class=\"anchor\" aria-hidden=\"true\" href=\"#full-text-searching\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Full-Text Searching</h3>\n<p dir=\"auto\">In lucene4s the <code>Lucene</code> instance holds a <code>fullText</code> <code>Field</code> that contains a concatenation of all the fields that\nare configured as <code>fullTextSearchable</code>.  This defaults to <code>Lucene.defaultFullTextSearchable</code> which defaults to false.</p>\n<p dir=\"auto\">The <code>fullText</code> field is the default field used for searches if it's not specified in the <code>SearchTerm</code>. Let's see an example:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val paged = lucene.query().filter(wildcard(&quot;doe*&quot;)).search()\npaged.total should be(4)\npaged.results(0)(firstName) should be(&quot;John&quot;)\npaged.results(1)(firstName) should be(&quot;Jane&quot;)\npaged.results(2)(firstName) should be(&quot;Baby&quot;)\npaged.results(3)(firstName) should be(&quot;James&quot;)\"><pre><code>val paged = lucene.query().filter(wildcard(\"doe*\")).search()\npaged.total should be(4)\npaged.results(0)(firstName) should be(\"John\")\npaged.results(1)(firstName) should be(\"Jane\")\npaged.results(2)(firstName) should be(\"Baby\")\npaged.results(3)(firstName) should be(\"James\")\n</code></pre></div>\n<p dir=\"auto\">For a complete example, see: <a href=\"https://github.com/outr/lucene4s/blob/master/implementation/src/test/scala/tests/FullTextSpec.scala\">https://github.com/outr/lucene4s/blob/master/implementation/src/test/scala/tests/FullTextSpec.scala</a></p>\n<h3 dir=\"auto\"><a id=\"user-content-keyword-searching\" class=\"anchor\" aria-hidden=\"true\" href=\"#keyword-searching\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Keyword Searching</h3>\n<p dir=\"auto\">As we saw previously, the <code>fullText</code> field provides us with a concatenation of all fields configured to be <code>fullTextSearchable</code>.\nIn addition, if you create an instance of <code>KeywordIndexing</code> you can query against a no-duplicates index of keywords for\nthe <code>fullText</code> (although you can override defaults to apply keyword indexing to any field). All we have to do is create\nand instance referencing the <code>Lucene</code> instance and the name (used for storage purposes):</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val keywordIndexing = KeywordIndexing(lucene, &quot;keywords&quot;)\nval keywords = keywordIndexing.search(&quot;do*&quot;)\nprintln(&quot;Keywords: ${keywords.results.map(_.word).mkString(&quot;, &quot;)}&quot;)\"><pre><code>val keywordIndexing = KeywordIndexing(lucene, \"keywords\")\nval keywords = keywordIndexing.search(\"do*\")\nprintln(\"Keywords: ${keywords.results.map(_.word).mkString(\", \")}\")\n</code></pre></div>\n<p dir=\"auto\">The above code would output:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Keywords: Doe\"><pre><code>Keywords: Doe\n</code></pre></div>\n<p dir=\"auto\">For the complete example see: <a href=\"https://github.com/outr/lucene4s/blob/master/implementation/src/test/scala/tests/SimpleSpec.scala\">https://github.com/outr/lucene4s/blob/master/implementation/src/test/scala/tests/SimpleSpec.scala</a></p>\n<h3 dir=\"auto\"><a id=\"user-content-case-class-support\" class=\"anchor\" aria-hidden=\"true\" href=\"#case-class-support\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Case Class Support</h3>\n<p dir=\"auto\">lucene4s provides a powerful Macro-based system to generate two-way mappings between case classes and Lucene fields at\ncompile-time. This is accomplished through the use of <code>Searchable</code>.  The setup is pretty simple.</p>\n<h4 dir=\"auto\"><a id=\"user-content-setup-1\" class=\"anchor\" aria-hidden=\"true\" href=\"#setup-1\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Setup</h4>\n<p dir=\"auto\">First we need to define a case class to model the data in the index:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"case class Person(id: Int, firstName: String, lastName: String, age: Int, address: String, city: String, state: String, zip: String)\"><pre><span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Person</span>(<span class=\"pl-v\">id</span>: <span class=\"pl-en\">Int</span>, <span class=\"pl-v\">firstName</span>: <span class=\"pl-en\">String</span>, <span class=\"pl-v\">lastName</span>: <span class=\"pl-en\">String</span>, <span class=\"pl-v\">age</span>: <span class=\"pl-en\">Int</span>, <span class=\"pl-v\">address</span>: <span class=\"pl-en\">String</span>, <span class=\"pl-v\">city</span>: <span class=\"pl-en\">String</span>, <span class=\"pl-v\">state</span>: <span class=\"pl-en\">String</span>, <span class=\"pl-v\">zip</span>: <span class=\"pl-en\">String</span>)</pre></div>\n<p dir=\"auto\">As you can see, this is a bare-bones case class with nothing special about it.</p>\n<p dir=\"auto\">Next we need to define a <code>Searchable</code> trait the defines the unique identification for update and delete:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"trait SearchablePerson extends Searchable[Person] {\n  // This is necessary for update and delete to reference the correct document.\n  override def idSearchTerms(person: Person): List[SearchTerm] = List(exact(id(person.id)))\n  \n  /*\n    Though at compile-time all fields will be generated from the params in `Person`, for code-completion we can define\n    an unimplemented method in order to properly reference the field. This will still compile without this definition,\n    but most IDEs will complain.\n   */\n  def id: Field[Int]\n}\"><pre><span class=\"pl-k\">trait</span> <span class=\"pl-en\">SearchablePerson</span> <span class=\"pl-k\">extends</span> <span class=\"pl-e\">Searchable</span>[<span class=\"pl-en\">Person</span>] {\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> This is necessary for update and delete to reference the correct document.</span>\n  <span class=\"pl-k\">override</span> <span class=\"pl-k\">def</span> <span class=\"pl-en\">idSearchTerms</span>(<span class=\"pl-v\">person</span>: <span class=\"pl-en\">Person</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">List</span>[<span class=\"pl-en\">SearchTerm</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">List</span>(exact(id(person.id)))\n  \n  <span class=\"pl-c\"><span class=\"pl-c\">/*</span></span>\n<span class=\"pl-c\">    Though at compile-time all fields will be generated from the params in `Person`, for code-completion we can define</span>\n<span class=\"pl-c\">    an unimplemented method in order to properly reference the field. This will still compile without this definition,</span>\n<span class=\"pl-c\">    but most IDEs will complain.</span>\n<span class=\"pl-c\">   <span class=\"pl-c\">*/</span></span>\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">id</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Field</span>[<span class=\"pl-en\">Int</span>]\n}</pre></div>\n<p dir=\"auto\">As the last part of our set up we simply need to generate it from our <code>Lucene</code> instance:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val people = lucene.create.searchable[SearchablePerson]\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">people</span> <span class=\"pl-k\">=</span> lucene.create.searchable[<span class=\"pl-en\">SearchablePerson</span>]</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-inserting\" class=\"anchor\" aria-hidden=\"true\" href=\"#inserting\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Inserting</h4>\n<p dir=\"auto\">Now that we've configured everything inserting a person is trivial:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"people.insert(Person(1, &quot;John&quot;, &quot;Doe&quot;, 23, &quot;123 Somewhere Rd.&quot;, &quot;Lalaland&quot;, &quot;California&quot;, &quot;12345&quot;)).index()\"><pre>people.insert(<span class=\"pl-en\">Person</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>John<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Doe<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">23</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>123 Somewhere Rd.<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Lalaland<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>California<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>12345<span class=\"pl-pds\">\"</span></span>)).index()</pre></div>\n<p dir=\"auto\">Notice that we still have to call <code>index()</code> at the end for it to actually invoke. This allows us to do more advanced\ntasks like adding facets, adding non-Searchable fields, etc. before actually inserting.</p>\n<h4 dir=\"auto\"><a id=\"user-content-updating\" class=\"anchor\" aria-hidden=\"true\" href=\"#updating\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Updating</h4>\n<p dir=\"auto\">Now lets try updating our <code>Person</code>:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"people.update(Person(1, &quot;John&quot;, &quot;Doe&quot;, 23, &quot;321 Nowhere St.&quot;, &quot;Lalaland&quot;, &quot;California&quot;, &quot;12345&quot;)).index()\"><pre>people.update(<span class=\"pl-en\">Person</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>John<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Doe<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">23</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>321 Nowhere St.<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Lalaland<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>California<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>12345<span class=\"pl-pds\">\"</span></span>)).index()</pre></div>\n<p dir=\"auto\">As you can see here, the signature is quite similar to <code>insert</code>. Internally this will utilize <code>idSearchTerms</code> as we\ndeclared previously to apply the update. In this case that means as long as we don't change the id (1) then calls to\nupdate will replace an existing record if one exists.</p>\n<h4 dir=\"auto\"><a id=\"user-content-querying\" class=\"anchor\" aria-hidden=\"true\" href=\"#querying\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Querying</h4>\n<p dir=\"auto\">Querying works very much the same as in the previous examples, except we get our <code>QueryBuilder</code> from our <code>people</code>\ninstance:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val paged = people.query().search()\npaged.entries.foreach { person =&gt;\n  println(s&quot;Person: $person&quot;)\n}\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">paged</span> <span class=\"pl-k\">=</span> people.query().search()\npaged.entries.foreach { person <span class=\"pl-k\">=&gt;</span>\n  println(<span class=\"pl-k\">s</span><span class=\"pl-s\">\"</span><span class=\"pl-s\">Person: </span>$person<span class=\"pl-s\">\"</span>)\n}</pre></div>\n<p dir=\"auto\">Note that instead of calling <code>paged.results</code> we call <code>paged.entries</code> as it represents the conversion to <code>Person</code>. We can\nstill use <code>paged.results</code> if we want access to the <code>SearchResult</code> like before.</p>\n<h4 dir=\"auto\"><a id=\"user-content-deleting\" class=\"anchor\" aria-hidden=\"true\" href=\"#deleting\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Deleting</h4>\n<p dir=\"auto\">Deleting is just as easy as inserting and updating:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"people.delete(Person(1, &quot;John&quot;, &quot;Doe&quot;, 23, &quot;321 Nowhere St.&quot;, &quot;Lalaland&quot;, &quot;California&quot;, &quot;12345&quot;))\"><pre>people.delete(<span class=\"pl-en\">Person</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>John<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Doe<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">23</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>321 Nowhere St.<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Lalaland<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>California<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>12345<span class=\"pl-pds\">\"</span></span>))</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-additional-information\" class=\"anchor\" aria-hidden=\"true\" href=\"#additional-information\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Additional Information</h4>\n<p dir=\"auto\">All <code>Searchable</code> implementations automatically define a <code>docType</code> field that is used to uniquely separate different\n<code>Searchable</code> instances so you don't have to worry about multiple different instances overlapping.</p>\n<p dir=\"auto\">For more examples see <a href=\"https://github.com/outr/lucene4s/blob/master/implementation/src/test/scala/tests/SearchableSpec.scala\">https://github.com/outr/lucene4s/blob/master/implementation/src/test/scala/tests/SearchableSpec.scala</a></p>\n<h3 dir=\"auto\"><a id=\"user-content-geospatial-support\" class=\"anchor\" aria-hidden=\"true\" href=\"#geospatial-support\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Geospatial Support</h3>\n<p dir=\"auto\">One of the great features of Lucene is geospatial querying and what Lucene wrapper would be complete without it?</p>\n<h4 dir=\"auto\"><a id=\"user-content-creating-a-spatial-field\" class=\"anchor\" aria-hidden=\"true\" href=\"#creating-a-spatial-field\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Creating a Spatial Field</h4>\n<p dir=\"auto\">In order to create a stored, queryable, filterable, and sortable latitude and longitude you need only create a\n<code>SpatialPoint</code> field:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val location: Field[SpatialPoint] = lucene.create.field[SpatialPoint](&quot;location&quot;)\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">location</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Field</span>[<span class=\"pl-en\">SpatialPoint</span>] <span class=\"pl-k\">=</span> lucene.create.field[<span class=\"pl-en\">SpatialPoint</span>](<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>location<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-sorting-nearest-a-point\" class=\"anchor\" aria-hidden=\"true\" href=\"#sorting-nearest-a-point\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Sorting Nearest a Point</h4>\n<p dir=\"auto\">Most of the time it's most useful to take an existing latitude and longitude and sort your results returning the\nnearest documents to that location:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val paged = lucene.query().sort(Sort.nearest(location, SpatialPoint(40.7142, -74.0119))).search()\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">paged</span> <span class=\"pl-k\">=</span> lucene.query().sort(<span class=\"pl-en\">Sort</span>.nearest(location, <span class=\"pl-en\">SpatialPoint</span>(<span class=\"pl-c1\">40.7142</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">74.0119</span>))).search()</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-filtering-by-distance\" class=\"anchor\" aria-hidden=\"true\" href=\"#filtering-by-distance\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Filtering by Distance</h4>\n<p dir=\"auto\">If you want to filter your results to only include entries within a certain range of a location:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val newYorkCity = SpatialPoint(40.7142, -74.0119)\nval paged = lucene\n  .query()\n  .sort(Sort.nearest(location, newYorkCity))\n  .filter(spatialDistance(location, newYorkCity, 50.miles))\n  .search()\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">newYorkCity</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">SpatialPoint</span>(<span class=\"pl-c1\">40.7142</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">74.0119</span>)\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">paged</span> <span class=\"pl-k\">=</span> lucene\n  .query()\n  .sort(<span class=\"pl-en\">Sort</span>.nearest(location, newYorkCity))\n  .filter(spatialDistance(location, newYorkCity, <span class=\"pl-c1\">50</span>.miles))\n  .search()</pre></div>\n</article></div>",
    "contributors" : [
      {
        "login" : "darkfrog26",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/877534?v=4",
        "url" : "https://api.github.com/users/darkfrog26",
        "contributions" : 146
      },
      {
        "login" : "jonas-depop",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/33638234?v=4",
        "url" : "https://api.github.com/users/jonas-depop",
        "contributions" : 3
      },
      {
        "login" : "ajrnz",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1515832?v=4",
        "url" : "https://api.github.com/users/ajrnz",
        "contributions" : 2
      },
      {
        "login" : "simerplaha",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1773953?v=4",
        "url" : "https://api.github.com/users/simerplaha",
        "contributions" : 1
      }
    ],
    "commits" : 152,
    "topics" : [
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "chatroom" : null,
    "openIssues" : [
      {
        "number" : 13,
        "title" : "Support for nested queries",
        "url" : "https://github.com/outr/lucene4s/issues/13"
      },
      {
        "number" : 11,
        "title" : "Support for grouping",
        "url" : "https://github.com/outr/lucene4s/issues/11"
      }
    ],
    "scalaPercentage" : null,
    "license" : null
  },
  "settings" : {
    "defaultStableVersion" : true,
    "defaultArtifact" : "lucene4s",
    "strictVersions" : false,
    "customScalaDoc" : null,
    "documentationLinks" : [
    ],
    "deprecated" : false,
    "contributorsWanted" : true,
    "artifactDeprecations" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "indexing-and-searching",
    "beginnerIssuesLabel" : null
  }
}