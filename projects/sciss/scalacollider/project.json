{
  "organization" : "sciss",
  "repository" : "scalacollider",
  "creationDate" : 1356114442000,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1660810344106
    }
  },
  "githubInfo" : {
    "homepage" : "https://www.sciss.de/scalaCollider/",
    "description" : "A Scala sound synthesis library based on SuperCollider.",
    "logo" : "https://avatars.githubusercontent.com/u/131300?v=4",
    "stars" : 197,
    "forks" : 19,
    "watchers" : 16,
    "issues" : 9,
    "creationDate" : 1260463150000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-scalacollider\" class=\"anchor\" aria-hidden=\"true\" href=\"#scalacollider\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>ScalaCollider</h1>\n<p dir=\"auto\"><a href=\"https://gitter.im/Sciss/ScalaCollider?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/5dbac0213da25c445bd11f168587c11a200ba153ef3014e8408e462e410169b3/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667\" alt=\"Gitter\" data-canonical-src=\"https://badges.gitter.im/Join%20Chat.svg\" style=\"max-width: 100%;\"></a>\n<a href=\"https://github.com/Sciss/ScalaCollider/actions?query=workflow%3A%22Scala+CI%22\"><img src=\"https://github.com/Sciss/ScalaCollider/workflows/Scala%20CI/badge.svg?branch=main\" alt=\"Build Status\" style=\"max-width: 100%;\"></a>\n<a href=\"https://maven-badges.herokuapp.com/maven-central/de.sciss/scalacollider_2.13\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/8dc575c9efdbcc5aac5afa249c74888d113dacfb6ac81fdb87766822e8c312a0/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f64652e73636973732f7363616c61636f6c6c696465725f322e31332f62616467652e737667\" alt=\"Maven Central\" data-canonical-src=\"https://maven-badges.herokuapp.com/maven-central/de.sciss/scalacollider_2.13/badge.svg\" style=\"max-width: 100%;\"></a>\n<a href=\"https://liberapay.com/sciss/donate\" rel=\"nofollow\"><img alt=\"Donate using Liberapay\" src=\"https://camo.githubusercontent.com/52e5c49c5effcd1c973f1d2cc96cf7160fe8d194254b5d890937834c23b6fab7/68747470733a2f2f6c69626572617061792e636f6d2f6173736574732f776964676574732f646f6e6174652e737667\" height=\"24\" data-canonical-src=\"https://liberapay.com/assets/widgets/donate.svg\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\"><a id=\"user-content-statement\" class=\"anchor\" aria-hidden=\"true\" href=\"#statement\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>statement</h2>\n<p dir=\"auto\">ScalaCollider is a <a href=\"https://supercollider.github.io/\" rel=\"nofollow\">SuperCollider</a> client for the Scala programming language.\nIt is (C)opyright 2008–2021 by Hanns Holger Rutz. All rights reserved. ScalaCollider is released under\nthe <a href=\"https://github.com/Sciss/ScalaCollider/raw/main/LICENSE\">GNU Affero General Public License</a> v3+ and comes\nwith absolutely no warranties. To contact the author, send an e-mail to <code>contact at sciss.de</code>.</p>\n<p dir=\"auto\">SuperCollider is one of the most elaborate open source sound synthesis frameworks. It comes with its own language\n'SCLang' that controls the sound synthesis processes on a server, 'scsynth'. ScalaCollider is an alternative to\n'SCLang', giving you the (perhaps) familiar Scala language to express these sound synthesis processes, and letting\nyou hook up any other Scala, Java or JVM-based libraries. ScalaCollider's function is more reduced than 'SCLang',\nfocusing on UGen graphs and server-side resources such as buses and buffers. Other functionality is part of the\nstandard Scala library, e.g. collections and GUI. Other functionality, such as plotting, MIDI, client-side\nsequencing (<code>Pdef</code>, <code>Routine</code>, etc.) must be added through dedicated libraries (see section 'packages' below).</p>\n<p dir=\"auto\">While ScalaCollider itself is in the form of a <em>library</em>, you can use it inside a plain REPL, or via the\n<a href=\"https://github.com/Sciss/ScalaColliderSwing\">ScalaCollider-Swing</a> project that adds an easy-to-use standalone\napplication or mini-IDE. On the ScalaCollider-Swing page, you'll find a link to download a readily compiled binary\nfor this standalone version.</p>\n<p dir=\"auto\"><strong>Note:</strong> An even more elaborate way to use ScalaCollider, is through <a href=\"https://github.com/Sciss/SoundProcesses\">SoundProcesses</a>\nand its graphical front-end <a href=\"https://sciss.de/mellite\" rel=\"nofollow\">Mellite</a>.</p>\n<h2 dir=\"auto\"><a id=\"user-content-download-and-resources\" class=\"anchor\" aria-hidden=\"true\" href=\"#download-and-resources\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>download and resources</h2>\n<p dir=\"auto\">The current version of ScalaCollider (the library) can be downloaded\nfrom <a href=\"https://github.com/Sciss/ScalaCollider\">github.com/Sciss/ScalaCollider</a>.</p>\n<p dir=\"auto\">More information is available from the wiki\nat <a href=\"https://github.com/Sciss/ScalaCollider/wiki\">github.com/Sciss/ScalaCollider/wiki</a>. The API documentation is\navailable at <a href=\"https://sciss.de/scalaCollider/latest/api/de/sciss/synth/index.html\" rel=\"nofollow\">sciss.de/scalaCollider/latest/api</a>.</p>\n<p dir=\"auto\">The best way to ask questions, no matter if newbie or expert, is to use the Gitter channel (see badge above)\nor the mailing list\nat <a href=\"http://groups.google.com/group/scalacollider\" rel=\"nofollow\">groups.google.com/group/scalacollider</a>. To subscribe, simply\nsend a mail to <code>ScalaCollider+subscribe@googlegroups.com</code> (you will receive a mail asking for confirmation).</p>\n<p dir=\"auto\">The early architectural design of ScalaCollider is documented in the SuperCollider 2010 symposium proceedings:\n<a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.186.9817&amp;rep=rep1&amp;type=pdf\" rel=\"nofollow\">H.H.Rutz, Rethinking the SuperCollider Client...</a>.\nHowever, many design decisions have been revised or refined in the meantime.</p>\n<p dir=\"auto\">The file <a href=\"https://github.com/Sciss/ScalaCollider/blob/main/ExampleCmd.sc\">ExampleCmd.sc</a> is a good\nstarting point for understanding how UGen graphs are written in ScalaCollider. You can directly copy and paste these\nexamples into the ScalaCollider-Swing application's interpreter window.</p>\n<p dir=\"auto\">See the section 'starting a SuperCollider server' below, for another simple example of running a server (possibly\nfrom your own application code).</p>\n<h2 dir=\"auto\"><a id=\"user-content-building\" class=\"anchor\" aria-hidden=\"true\" href=\"#building\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>building</h2>\n<p dir=\"auto\">ScalaCollider builds with <a href=\"http://scala-sbt.org/\" rel=\"nofollow\">sbt</a> against Scala 2.13, 2.12, Dotty (JVM) and Scala 2.13 (JS).\nThe last version to support Scala 2.11 was 1.28.4.\nNote that because of an incompatibility between ScalaOSC and Scala.js, support for Scala.js is currently incomplete,\nand consequently some OSC related tests are not run under Scala.js.</p>\n<p dir=\"auto\">ScalaCollider requires SuperCollider server to be installed and/or running. The recommended version as of\nthis writing is 3.10. Note that the UGens are provided by the\nseparate <a href=\"https://github.com/Sciss/ScalaColliderUGens\">ScalaColliderUGens</a> project. A simple Swing front end is\nprovided by the <a href=\"https://github.com/Sciss/ScalaColliderSwing\">ScalaColliderSwing</a> project.</p>\n<p dir=\"auto\">Targets for sbt:</p>\n<ul dir=\"auto\">\n<li><code>clean</code> – removes previous build artefacts</li>\n<li><code>compile</code> – compiles classes into target/scala-version/classes</li>\n<li><code>doc</code> – generates api in target/scala-version/api/index.html</li>\n<li><code>package</code> – packages jar in target/scala-version</li>\n<li><code>rootJVM/console</code> – opens a Scala REPL with ScalaCollider on the classpath</li>\n</ul>\n<h2 dir=\"auto\"><a id=\"user-content-linking\" class=\"anchor\" aria-hidden=\"true\" href=\"#linking\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>linking</h2>\n<p dir=\"auto\">To use this project as a library, use the following artifact:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"libraryDependencies += &quot;de.sciss&quot; %% &quot;scalacollider&quot; % v\"><pre class=\"notranslate\"><code>libraryDependencies += \"de.sciss\" %% \"scalacollider\" % v\n</code></pre></div>\n<p dir=\"auto\">The current version <code>v</code> is <code>\"2.7.3\"</code></p>\n<h2 dir=\"auto\"><a id=\"user-content-contributing\" class=\"anchor\" aria-hidden=\"true\" href=\"#contributing\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>contributing</h2>\n<p dir=\"auto\">Please see the file <a href=\"CONTRIBUTING.md\">CONTRIBUTING.md</a></p>\n<h2 dir=\"auto\"><a id=\"user-content-repl-test\" class=\"anchor\" aria-hidden=\"true\" href=\"#repl-test\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>REPL test</h2>\n<p dir=\"auto\">Here is how a quick REPL check looks. <code>sbt rootJVM/console</code> will start with default Scala (2.13),\nwhile <code>sbt ++3.0.0 rootJVM/console</code> allows you to use the new Scala 3.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ sbt rootJVM/console\n[info] welcome to sbt 1.5.2 (Debian Java 11.0.11)\n...\n[info] loading settings for project scalacollider-build from plugins.sbt ...\n[info] loading project definition from ~/Documents/devel/ScalaCollider/project\n[info] loading settings for project scalacollider from build.sbt ...\n[info] set current project to scalacollider (in build file:~/Documents/devel/ScalaCollider/)\n[info] Starting scala interpreter...\nWelcome to Scala 2.13.5 (OpenJDK 64-Bit Server VM, Java 11.0.11).\nType in expressions for evaluation. Or try :help.\nimport de.sciss.osc\nimport de.sciss.synth._\nimport de.sciss.synth.ugen._\nimport Predef.{any2stringadd=&gt;_, _}\nimport Import._\nimport Ops._\ndef s: de.sciss.synth.Server\ndef boot(): Unit\n\nscala&gt; boot()\n\nscala&gt; Found 109 LADSPA plugins\nJackDriver: client name is 'SuperCollider'\nSC_AudioDriver: sample rate = 48000.000000, driver's block size = 1024\nSuperCollider 3 server ready.\nJackDriver: max output latency 42.7 ms\n\nscala&gt; play {\n| val f = LFSaw.ar(20).linExp(-1, 1, 300, 600)\n| val s = SinOsc.ar(Seq(f, f * 1.01))\n| s * 0.3\n| }\nval res1: de.sciss.synth.Synth = Synth(&lt;localhost&gt;,1000) : &lt;temp_1&gt;\n\nscala&gt; s.freeAll()\"><pre>$ sbt rootJVM<span class=\"pl-k\">/</span>console\n[info] welcome to sbt <span class=\"pl-c1\">1.5.2</span> (<span class=\"pl-en\">Debian</span> <span class=\"pl-en\">Java</span> <span class=\"pl-c1\">11.0.11</span>)\n...\n[info] loading settings <span class=\"pl-k\">for</span> project scalacollider<span class=\"pl-k\">-</span>build from plugins.sbt ...\n[info] loading project definition from <span class=\"pl-k\">~/</span><span class=\"pl-en\">Documents</span><span class=\"pl-k\">/</span>devel<span class=\"pl-k\">/</span><span class=\"pl-en\">ScalaCollider</span><span class=\"pl-k\">/</span>project\n[info] loading settings <span class=\"pl-k\">for</span> project scalacollider from build.sbt ...\n[info] set current project to scalacollider (in build file<span class=\"pl-k\">:</span><span class=\"pl-k\">~/</span><span class=\"pl-en\">Documents</span><span class=\"pl-k\">/</span>devel<span class=\"pl-k\">/</span><span class=\"pl-en\">ScalaCollider</span><span class=\"pl-k\">/</span>)\n[info] <span class=\"pl-en\">Starting</span> scala interpreter...\n<span class=\"pl-en\">Welcome</span> to <span class=\"pl-en\">Scala</span> <span class=\"pl-c1\">2.13.5</span> (<span class=\"pl-en\">OpenJDK</span> <span class=\"pl-c1\">64</span><span class=\"pl-k\">-</span><span class=\"pl-en\">Bit</span> <span class=\"pl-en\">Server</span> <span class=\"pl-en\">VM</span>, <span class=\"pl-en\">Java</span> <span class=\"pl-c1\">11.0.11</span>).\n<span class=\"pl-en\">Type</span> in expressions <span class=\"pl-k\">for</span> evaluation. <span class=\"pl-en\">Or</span> <span class=\"pl-k\">try</span> <span class=\"pl-k\">:</span>help.\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">de</span>.<span class=\"pl-en\">sciss</span>.<span class=\"pl-en\">osc</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">de</span>.<span class=\"pl-en\">sciss</span>.<span class=\"pl-en\">synth</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">de</span>.<span class=\"pl-en\">sciss</span>.<span class=\"pl-en\">synth</span>.<span class=\"pl-en\">ugen</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">Predef</span>.{<span class=\"pl-en\">any2stringadd</span><span class=\"pl-k\">=&gt;</span><span class=\"pl-en\">_</span>, <span class=\"pl-en\">_</span>}\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">Import</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">Ops</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">s</span><span class=\"pl-k\">:</span> de.sciss.synth.<span class=\"pl-en\">Server</span>\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">boot</span>()<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span>\n\nscala<span class=\"pl-k\">&gt;</span> boot()\n\nscala<span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Found</span> <span class=\"pl-c1\">109</span> <span class=\"pl-en\">LADSPA</span> plugins\n<span class=\"pl-en\">JackDriver</span><span class=\"pl-k\">:</span> client name is <span class=\"pl-s\">'<span class=\"pl-ii\">SuperCollider</span>'</span>\n<span class=\"pl-en\">SC_AudioDriver</span><span class=\"pl-k\">:</span> sample rate <span class=\"pl-k\">=</span> <span class=\"pl-c1\">48000.000000</span>, driver<span class=\"pl-c1\">'s</span> block size <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1024</span>\n<span class=\"pl-en\">SuperCollider</span> <span class=\"pl-c1\">3</span> server ready.\n<span class=\"pl-en\">JackDriver</span><span class=\"pl-k\">:</span> max output latency <span class=\"pl-c1\">42.7</span> ms\n\nscala<span class=\"pl-k\">&gt;</span> play {\n<span class=\"pl-k\">|</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">f</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">LFSaw</span>.ar(<span class=\"pl-c1\">20</span>).linExp(<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">300</span>, <span class=\"pl-c1\">600</span>)\n<span class=\"pl-k\">|</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">s</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">SinOsc</span>.ar(<span class=\"pl-en\">Seq</span>(f, f <span class=\"pl-k\">*</span> <span class=\"pl-c1\">1.01</span>))\n<span class=\"pl-k\">|</span> s <span class=\"pl-k\">*</span> <span class=\"pl-c1\">0.3</span>\n<span class=\"pl-k\">|</span> }\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">res1</span><span class=\"pl-k\">:</span> de.sciss.synth.<span class=\"pl-en\">Synth</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Synth</span>(&lt;<span class=\"pl-ent\">localhost</span>&gt;,<span class=\"pl-c1\">1000</span>) <span class=\"pl-k\">:</span> &lt;<span class=\"pl-ent\">temp_1</span>&gt;\n\nscala<span class=\"pl-k\">&gt;</span> s.freeAll()</pre></div>\n<p dir=\"auto\">An alternative terminal REPL is <a href=\"https://ammonite.io/#Ammonite-REPL\" rel=\"nofollow\">Ammonite</a>. If you have it installed, you\ncan launch it with <code>amm</code> and \"import\" ScalaCollider:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ amm\nLoading...\nWelcome to the Ammonite Repl 2.4.0 (Scala 2.13.6 Java 11.0.11)\n@ import $ivy.`de.sciss::scalacollider:2.6.4`, de.sciss.synth._, Import._, Ops._, ugen._ \nimport $ivy.$                              , de.sciss.synth._, Import._, Ops._, ugen._\n\n@ Server.run(_ =&gt; ()) \n\n@ Found 109 LADSPA plugins\nJackDriver: client name is 'SuperCollider'\nSC_AudioDriver: sample rate = 48000.000000, driver's block size = 1024\nSuperCollider 3 server ready.\nJackDriver: max output latency 42.7 ms\n@ play { WhiteNoise.ar(Seq.fill(2)(0.3)) } \nres2: Synth = Synth(server = &lt;localhost&gt;, id = 1000)\n\n@ Server.default.freeAll()\n  \n@ exit \nBye!\"><pre>$ amm\n<span class=\"pl-en\">Loading</span>...\n<span class=\"pl-en\">Welcome</span> to the <span class=\"pl-en\">Ammonite</span> <span class=\"pl-en\">Repl</span> <span class=\"pl-c1\">2.4.0</span> (<span class=\"pl-en\">Scala</span> <span class=\"pl-c1\">2.13.6</span> <span class=\"pl-en\">Java</span> <span class=\"pl-c1\">11.0.11</span>)\n<span class=\"pl-k\">@</span> <span class=\"pl-k\">import</span> <span class=\"pl-en\">$ivy</span>.<span class=\"pl-en\">`de.sciss::scalacollider:2.6.4`</span>, <span class=\"pl-en\">de</span>.<span class=\"pl-en\">sciss</span>.<span class=\"pl-en\">synth</span>.<span class=\"pl-en\">_</span>, <span class=\"pl-en\">Import</span>.<span class=\"pl-en\">_</span>, <span class=\"pl-en\">Ops</span>.<span class=\"pl-en\">_</span>, <span class=\"pl-en\">ugen</span>.<span class=\"pl-en\">_</span> \n<span class=\"pl-k\">import</span> <span class=\"pl-en\">$ivy</span>.<span class=\"pl-en\">$</span>                              , <span class=\"pl-en\">de</span>.<span class=\"pl-en\">sciss</span>.<span class=\"pl-en\">synth</span>.<span class=\"pl-en\">_</span>, <span class=\"pl-en\">Import</span>.<span class=\"pl-en\">_</span>, <span class=\"pl-en\">Ops</span>.<span class=\"pl-en\">_</span>, <span class=\"pl-en\">ugen</span>.<span class=\"pl-en\">_</span>\n\n<span class=\"pl-k\">@</span> <span class=\"pl-en\">Server</span>.run(_ <span class=\"pl-k\">=&gt;</span> ()) \n\n<span class=\"pl-k\">@</span> <span class=\"pl-en\">Found</span> <span class=\"pl-c1\">109</span> <span class=\"pl-en\">LADSPA</span> plugins\n<span class=\"pl-en\">JackDriver</span><span class=\"pl-k\">:</span> client name is <span class=\"pl-s\">'<span class=\"pl-ii\">SuperCollider</span>'</span>\n<span class=\"pl-en\">SC_AudioDriver</span><span class=\"pl-k\">:</span> sample rate <span class=\"pl-k\">=</span> <span class=\"pl-c1\">48000.000000</span>, driver<span class=\"pl-c1\">'s</span> block size <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1024</span>\n<span class=\"pl-en\">SuperCollider</span> <span class=\"pl-c1\">3</span> server ready.\n<span class=\"pl-en\">JackDriver</span><span class=\"pl-k\">:</span> max output latency <span class=\"pl-c1\">42.7</span> ms\n<span class=\"pl-k\">@</span> play { <span class=\"pl-en\">WhiteNoise</span>.ar(<span class=\"pl-en\">Seq</span>.fill(<span class=\"pl-c1\">2</span>)(<span class=\"pl-c1\">0.3</span>)) } \nres2<span class=\"pl-k\">:</span> <span class=\"pl-en\">Synth</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Synth</span>(server <span class=\"pl-k\">=</span> &lt;<span class=\"pl-ent\">localhost</span>&gt;, id <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1000</span>)\n\n<span class=\"pl-k\">@</span> <span class=\"pl-en\">Server</span>.default.freeAll()\n  \n<span class=\"pl-k\">@</span> exit \n<span class=\"pl-en\">Bye</span><span class=\"pl-k\">!</span></pre></div>\n<h2 dir=\"auto\"><a id=\"user-content-starting-a-supercollider-server\" class=\"anchor\" aria-hidden=\"true\" href=\"#starting-a-supercollider-server\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>starting a SuperCollider server</h2>\n<p dir=\"auto\">Inside a regular Scala source code file,\nthe following short example illustrates how a server can be launched, and a synth played:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import de.sciss.synth._\nimport ugen._\nimport Import._\nimport Ops._\n\nval cfg = Server.Config()\ncfg.program = &quot;/path/to/scsynth&quot;\n// runs a server and executes the function\n// when the server is booted, with the\n// server as its argument \nServer.run(cfg) { s =&gt;\n  s.dumpOSC()\n  // `play` is imported from object `Ops`.\n  // It provides a convenience method for wrapping\n  // a synth graph function in an `Out` element\n  // and playing it back.\n  play {\n    val f = LFSaw.kr(0.4).mulAdd(24, LFSaw.kr(Seq(8, 7.23)).mulAdd(3, 80)).midiCps\n    CombN.ar(SinOsc.ar(f) * 0.04, 0.2, 0.2, 4)\n  }\n}    \"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">de</span>.<span class=\"pl-en\">sciss</span>.<span class=\"pl-en\">synth</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">ugen</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">Import</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">Ops</span>.<span class=\"pl-en\">_</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">cfg</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Server</span>.<span class=\"pl-en\">Config</span>()\ncfg.program <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/path/to/scsynth<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> runs a server and executes the function</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> when the server is booted, with the</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> server as its argument </span>\n<span class=\"pl-en\">Server</span>.run(cfg) { s <span class=\"pl-k\">=&gt;</span>\n  s.dumpOSC()\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> `play` is imported from object `Ops`.</span>\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> It provides a convenience method for wrapping</span>\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> a synth graph function in an `Out` element</span>\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> and playing it back.</span>\n  play {\n    <span class=\"pl-k\">val</span> <span class=\"pl-smi\">f</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">LFSaw</span>.kr(<span class=\"pl-c1\">0.4</span>).mulAdd(<span class=\"pl-c1\">24</span>, <span class=\"pl-en\">LFSaw</span>.kr(<span class=\"pl-en\">Seq</span>(<span class=\"pl-c1\">8</span>, <span class=\"pl-c1\">7.23</span>)).mulAdd(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">80</span>)).midiCps\n    <span class=\"pl-en\">CombN</span>.ar(<span class=\"pl-en\">SinOsc</span>.ar(f) <span class=\"pl-k\">*</span> <span class=\"pl-c1\">0.04</span>, <span class=\"pl-c1\">0.2</span>, <span class=\"pl-c1\">0.2</span>, <span class=\"pl-c1\">4</span>)\n  }\n}    </pre></div>\n<p dir=\"auto\">For more sound examples, see <code>ExampleCmd.sc</code>. There is also an introductory video for\nthe <a href=\"https://github.com/Sciss/ScalaColliderSwing\">Swing frontend</a>\nat <a href=\"http://www.screencast.com/t/YjUwNDZjMT\" rel=\"nofollow\">www.screencast.com/t/YjUwNDZjMT</a>, and some of\nthe <a href=\"https://www.sciss.de/mellite/tutorials.html\" rel=\"nofollow\">Mellite tutorials</a> also introduce ScalaCollider concepts.</p>\n<p dir=\"auto\"><strong>Troubleshooting:</strong> If the above boots the server, but on Linux you do not\nhear any sound, probably the Jack audio server does not establish connections between\nSuperCollider and your sound card. The easiest is to use a program such as QJackCtl\nto automatically wire them up. Alternatively, you can set environment variables\n<code>SC_JACK_DEFAULT_INPUTS</code> and <code>SC_JACK_DEFAULT_OUTPUTS</code> before starting Scala, e.g.</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"export SC_JACK_DEFAULT_INPUTS=&quot;system:capture_1,system:capture_2&quot;\nexport SC_JACK_DEFAULT_OUTPUTS=&quot;system:playback_1,system:playback_2&quot;\"><pre><span class=\"pl-k\">export</span> SC_JACK_DEFAULT_INPUTS=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>system:capture_1,system:capture_2<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-k\">export</span> SC_JACK_DEFAULT_OUTPUTS=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>system:playback_1,system:playback_2<span class=\"pl-pds\">\"</span></span></pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-specifying-sc_home\" class=\"anchor\" aria-hidden=\"true\" href=\"#specifying-sc_home\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Specifying <code>SC_HOME</code></h3>\n<p dir=\"auto\"><strong>Note</strong>: This section is mostly irrelevant on Linux, where <code>scsynth</code> is normally found on <code>$PATH</code>, and thus no\nfurther customisation is needed.</p>\n<p dir=\"auto\">You might omit to set the <code>program</code> of the server's configuration, as ScalaCollider will by default read the\nsystem property <code>SC_HOME</code>, and if that is not set, the environment variable <code>SC_HOME</code>. Environment variables are\nstored depending on your operating system.\nFor example, if you run ScalaCollider from a Bash terminal, you edit <code>~/.bash_profile</code>. The entry\nis something like:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"export SC_HOME=/path/to/folder-of-scsynth\"><pre class=\"notranslate\"><code>export SC_HOME=/path/to/folder-of-scsynth\n</code></pre></div>\n<p dir=\"auto\">On linux, the environment variables probably go in <code>~/.profile</code> or <code>~/.bashrc</code>.</p>\n<h2 dir=\"auto\"><a id=\"user-content-packages\" class=\"anchor\" aria-hidden=\"true\" href=\"#packages\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>packages</h2>\n<p dir=\"auto\">ScalaCollider's core functionality may be extended by other libraries I or other people wrote. The following three\nlibraries are dependencies and therefore always available in ScalaCollider:</p>\n<ul dir=\"auto\">\n<li>UGens are defined by the <a href=\"https://github.com/Sciss/ScalaColliderUGens\">ScalaCollider-UGens</a> library.</li>\n<li>Audio file functionality is provided by the <a href=\"https://github.com/Sciss/AudioFile\">AudioFile</a> library.</li>\n<li>Open Sound Control functionality is provided by the <a href=\"https://github.com/Sciss/ScalaOSC\">ScalaOSC</a> library.</li>\n</ul>\n<p dir=\"auto\">Here are some examples for libraries not included:</p>\n<ul dir=\"auto\">\n<li>Patterns functionality is  available through the <a href=\"https://github.com/Sciss/Patterns\">Patterns</a> library, which\nis supported through\n<a href=\"https://github.com/Sciss/SoundProcesses\">SoundProcesses</a> rather than vanilla ScalaCollider. SoundProcesses also\ntakes the role of more high-level abstractions similar to <code>NodeProxy</code>, for example.</li>\n<li>MIDI functionality can be added with the <a href=\"https://github.com/Sciss/ScalaMIDI\">ScalaMIDI</a> library.</li>\n<li>Plotting is most easily achieved through <a href=\"https://github.com/Sciss/scala-chart\">Scala-Chart</a>, which is\nconveniently included in ScalaCollider-Swing.</li>\n</ul>\n</article></div>",
    "contributors" : [
      {
        "login" : "Sciss",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/131300?v=4",
        "url" : "https://github.com/Sciss",
        "contributions" : 581
      }
    ],
    "commits" : 581,
    "topics" : [
      "scalacollider",
      "sound-synthesis-processes",
      "computer-music",
      "sound",
      "music-composition",
      "supercollider"
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "chatroom" : null,
    "openIssues" : [
      {
        "number" : 99,
        "title" : "Avoid printing \"Bad file descriptor\" when stopping server",
        "url" : "https://github.com/Sciss/ScalaCollider/issues/99"
      },
      {
        "number" : 98,
        "title" : "Boot does not initiate handshake when verbosity is < 0",
        "url" : "https://github.com/Sciss/ScalaCollider/issues/98"
      },
      {
        "number" : 95,
        "title" : "better Seq[Double] => GE support?",
        "url" : "https://github.com/Sciss/ScalaCollider/issues/95"
      },
      {
        "number" : 94,
        "title" : "site: re-enable snippet compilation",
        "url" : "https://github.com/Sciss/ScalaCollider/issues/94"
      },
      {
        "number" : 92,
        "title" : "Examples for Buffer sine1-3",
        "url" : "https://github.com/Sciss/ScalaCollider/issues/92"
      },
      {
        "number" : 57,
        "title" : "Buffer constructor ops",
        "url" : "https://github.com/Sciss/ScalaCollider/issues/57"
      },
      {
        "number" : 51,
        "title" : "Possible fix for doc-links with overloaded methods",
        "url" : "https://github.com/Sciss/ScalaCollider/issues/51"
      },
      {
        "number" : 45,
        "title" : "More Env methods",
        "url" : "https://github.com/Sciss/ScalaCollider/issues/45"
      },
      {
        "number" : 41,
        "title" : "macro-based poll",
        "url" : "https://github.com/Sciss/ScalaCollider/issues/41"
      }
    ],
    "scalaPercentage" : 93,
    "license" : "AGPL-3.0",
    "commitActivity" : [
      {
        "total" : 0,
        "week" : 1629590400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1630195200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1630800000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1631404800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 1,
        "week" : 1632009600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      },
      {
        "total" : 4,
        "week" : 1632614400000,
        "days" : [
          1,
          3,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1633219200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 2,
        "week" : 1633824000000,
        "days" : [
          0,
          0,
          2,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1634428800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 1,
        "week" : 1635033600000,
        "days" : [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1635638400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1636243200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1636848000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1637452800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1638057600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1638662400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1639267200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1639872000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1640476800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1641081600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1641686400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1642291200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1642896000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1643500800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1644105600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1644710400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1645315200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1645920000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1646524800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1647129600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1647734400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1648339200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1648944000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1649548800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1650153600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1650758400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1651363200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1651968000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1652572800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1653177600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1653782400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1654387200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1654992000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1655596800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1656201600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1656806400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1657411200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1658016000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1658620800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1659225600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1659830400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1660435200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      }
    ]
  },
  "settings" : {
    "preferStableVersion" : true,
    "defaultArtifact" : "scalacollider",
    "strictVersions" : false,
    "customScalaDoc" : null,
    "documentationLinks" : [
    ],
    "deprecated" : false,
    "contributorsWanted" : true,
    "deprecatedArtifacts" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "audio-and-music",
    "beginnerIssuesLabel" : null
  }
}