{
  "organization" : "fthomas",
  "repository" : "fs2-cron",
  "creationDate" : 1535297733000,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1730771195759
    }
  },
  "githubInfo" : {
    "homepage" : "",
    "description" : "FS2 streams based on cron expressions",
    "logo" : "https://avatars.githubusercontent.com/u/141252?v=4",
    "stars" : 134,
    "forks" : 18,
    "watchers" : 7,
    "issues" : 0,
    "creationDate" : 1535129312000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div class=\"markdown-heading\" dir=\"auto\"><h1 class=\"heading-element\" dir=\"auto\">fs2-cron</h1><a id=\"user-content-fs2-cron\" class=\"anchor\" aria-label=\"Permalink: fs2-cron\" href=\"#fs2-cron\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\"><a href=\"https://github.com/fthomas/fs2-cron/actions/workflows/ci.yml\"><img src=\"https://camo.githubusercontent.com/27a02fd9daefd6ee1b8c8c60711cf9c14e4b4b29ca91117b1b6bbe9453334088/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f6674686f6d61732f6673322d63726f6e2f63692e796d6c3f6272616e63683d6d6173746572\" alt=\"GitHub Workflow Status\" data-canonical-src=\"https://img.shields.io/github/actions/workflow/status/fthomas/fs2-cron/ci.yml?branch=master\" style=\"max-width: 100%;\"></a>\n<a href=\"https://codecov.io/gh/fthomas/fs2-cron\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/4e4bcfd3a35d54a86d06bc48179ac76676dbc6abc5a2a52fc9b4f543fbfe2b4e/68747470733a2f2f636f6465636f762e696f2f67682f6674686f6d61732f6673322d63726f6e2f6272616e63682f6d61737465722f67726170682f62616467652e737667\" alt=\"codecov\" data-canonical-src=\"https://codecov.io/gh/fthomas/fs2-cron/branch/master/graph/badge.svg\" style=\"max-width: 100%;\"></a>\n<a href=\"https://gitter.im/fthomas/fs2-cron?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/f792994420a4bd4466a1ef86862dfcef63788eac70cabba80f1a0491b5078ef8/68747470733a2f2f6261646765732e6769747465722e696d2f6674686f6d61732f6673322d63726f6e2e737667\" alt=\"Join the chat at https://gitter.im/fthomas/fs2-cron\" data-canonical-src=\"https://badges.gitter.im/fthomas/fs2-cron.svg\" style=\"max-width: 100%;\"></a>\n<a href=\"https://index.scala-lang.org/fthomas/fs2-cron/fs2-cron-core\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/458f30375224bb86d7588f45ee01cda9a2c99667927d60d4e80383b6e4af12f5/68747470733a2f2f696e6465782e7363616c612d6c616e672e6f72672f6674686f6d61732f6673322d63726f6e2f6c61746573742e7376673f636f6c6f723d626c7565\" alt=\"Scaladex\" data-canonical-src=\"https://index.scala-lang.org/fthomas/fs2-cron/latest.svg?color=blue\" style=\"max-width: 100%;\"></a>\n<a href=\"https://javadoc.io/doc/eu.timepit/fs2-cron-core_2.12\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/4d626ed106b3ea6d0d84a427ca613c75204b2ccaf7ef38a12a2340e8ade90642/68747470733a2f2f7777772e6a617661646f632e696f2f62616467652f65752e74696d657069742f6673322d63726f6e2d636f72655f322e31322e7376673f636f6c6f723d626c7565266c6162656c3d5363616c61646f63\" alt=\"Scaladoc\" data-canonical-src=\"https://www.javadoc.io/badge/eu.timepit/fs2-cron-core_2.12.svg?color=blue&amp;label=Scaladoc\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><strong>fs2-cron</strong> is a microlibrary that provides <a href=\"https://github.com/functional-streams-for-scala/fs2\">FS2</a> streams based\non <a href=\"https://github.com/alonsodomin/cron4s\">Cron4s</a> cron expressions or <a href=\"https://github.com/eikek/calev\">Calev</a> calendar\nevents.</p>\n<p dir=\"auto\">It is provided for Scala 2.12, 2.13 and <code>fs2-cron-calev</code> also for\nScala 3.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Examples</h2><a id=\"user-content-examples\" class=\"anchor\" aria-label=\"Permalink: Examples\" href=\"#examples\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import cats.effect.IO\nimport cats.effect.unsafe.implicits.global\nimport fs2.Stream\nimport java.time.LocalTime\n\nval printTime = Stream.eval(IO(println(LocalTime.now)))\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">cats</span>.<span class=\"pl-en\">effect</span>.<span class=\"pl-en\">IO</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">cats</span>.<span class=\"pl-en\">effect</span>.<span class=\"pl-en\">unsafe</span>.<span class=\"pl-en\">implicits</span>.<span class=\"pl-en\">global</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">fs2</span>.<span class=\"pl-en\">Stream</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">java</span>.<span class=\"pl-en\">time</span>.<span class=\"pl-en\">LocalTime</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">printTime</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Stream</span>.eval(<span class=\"pl-en\">IO</span>(println(<span class=\"pl-en\">LocalTime</span>.now)))</pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h3 class=\"heading-element\" dir=\"auto\">Using Cron4s library</h3><a id=\"user-content-using-cron4s-library\" class=\"anchor\" aria-label=\"Permalink: Using Cron4s library\" href=\"#using-cron4s-library\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">Requires the <code>fs2-cron-cron4s</code> module:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import cron4s.Cron\nimport eu.timepit.fs2cron.cron4s.Cron4sScheduler\n\nval cronScheduler = Cron4sScheduler.systemDefault[IO]\n// cronScheduler: eu.timepit.fs2cron.Scheduler[IO, cron4s.expr.CronExpr] = eu.timepit.fs2cron.cron4s.Cron4sScheduler$$anon$1@3b612fa5\n\nval evenSeconds = Cron.unsafeParse(&quot;*/2 * * ? * *&quot;)\n// evenSeconds: cron4s.package.CronExpr = CronExpr(\n//   seconds = */2,\n//   minutes = *,\n//   hours = *,\n//   daysOfMonth = ?,\n//   months = *,\n//   daysOfWeek = *\n// )\n\nval scheduled = cronScheduler.awakeEvery(evenSeconds) &gt;&gt; printTime\n// scheduled: Stream[[x]IO[x], Unit] = Stream(..)\n\nscheduled.take(3).compile.drain.unsafeRunSync()\n// 22:34:46.145109392\n// 22:34:48.001058522\n// 22:34:50.001971813\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">cron4s</span>.<span class=\"pl-en\">Cron</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">eu</span>.<span class=\"pl-en\">timepit</span>.<span class=\"pl-en\">fs2cron</span>.<span class=\"pl-en\">cron4s</span>.<span class=\"pl-en\">Cron4sScheduler</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">cronScheduler</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Cron4sScheduler</span>.systemDefault[<span class=\"pl-en\">IO</span>]\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> cronScheduler: eu.timepit.fs2cron.Scheduler[IO, cron4s.expr.CronExpr] = eu.timepit.fs2cron.cron4s.Cron4sScheduler$$anon$1@3b612fa5</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">evenSeconds</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Cron</span>.unsafeParse(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>*/2 * * ? * *<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> evenSeconds: cron4s.package.CronExpr = CronExpr(</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   seconds = */2,</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   minutes = *,</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   hours = *,</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   daysOfMonth = ?,</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   months = *,</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   daysOfWeek = *</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> )</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">scheduled</span> <span class=\"pl-k\">=</span> cronScheduler.awakeEvery(evenSeconds) <span class=\"pl-k\">&gt;&gt;</span> printTime\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> scheduled: Stream[[x]IO[x], Unit] = Stream(..)</span>\n\nscheduled.take(<span class=\"pl-c1\">3</span>).compile.drain.unsafeRunSync()\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:34:46.145109392</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:34:48.001058522</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:34:50.001971813</span></pre></div>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"val everyFiveSeconds = Cron.unsafeParse(&quot;*/5 * * ? * *&quot;)\n// everyFiveSeconds: cron4s.package.CronExpr = CronExpr(\n//   seconds = */5,\n//   minutes = *,\n//   hours = *,\n//   daysOfMonth = ?,\n//   months = *,\n//   daysOfWeek = *\n// )\n\nval scheduledTasks = cronScheduler.schedule(List(\n  evenSeconds      -&gt; Stream.eval(IO(println(LocalTime.now.toString + &quot; task 1&quot;))),\n  everyFiveSeconds -&gt; Stream.eval(IO(println(LocalTime.now.toString + &quot; task 2&quot;)))\n))\n// scheduledTasks: Stream[IO, Unit] = Stream(..)\n\nscheduledTasks.take(9).compile.drain.unsafeRunSync()\n// 22:34:52.001721651 task 1\n// 22:34:54.001702294 task 1\n// 22:34:55.002032079 task 2\n// 22:34:56.000919733 task 1\n// 22:34:58.000939089 task 1\n// 22:35:00.001158852 task 1\n// 22:35:00.001743567 task 2\n// 22:35:02.001037743 task 1\n// 22:35:04.001006980 task 1\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-v\">everyFiveSeconds</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Cron</span>.unsafeParse(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>*/5 * * ? * *<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> everyFiveSeconds: cron4s.package.CronExpr = CronExpr(</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   seconds = */5,</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   minutes = *,</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   hours = *,</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   daysOfMonth = ?,</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   months = *,</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   daysOfWeek = *</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> )</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">scheduledTasks</span> <span class=\"pl-k\">=</span> cronScheduler.schedule(<span class=\"pl-en\">List</span>(\n  evenSeconds      <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Stream</span>.eval(<span class=\"pl-en\">IO</span>(println(<span class=\"pl-en\">LocalTime</span>.now.toString <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> task 1<span class=\"pl-pds\">\"</span></span>))),\n  everyFiveSeconds <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Stream</span>.eval(<span class=\"pl-en\">IO</span>(println(<span class=\"pl-en\">LocalTime</span>.now.toString <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> task 2<span class=\"pl-pds\">\"</span></span>)))\n))\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> scheduledTasks: Stream[IO, Unit] = Stream(..)</span>\n\nscheduledTasks.take(<span class=\"pl-c1\">9</span>).compile.drain.unsafeRunSync()\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:34:52.001721651 task 1</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:34:54.001702294 task 1</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:34:55.002032079 task 2</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:34:56.000919733 task 1</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:34:58.000939089 task 1</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:35:00.001158852 task 1</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:35:00.001743567 task 2</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:35:02.001037743 task 1</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:35:04.001006980 task 1</span></pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h4 class=\"heading-element\" dir=\"auto\">Cancelling the scheduled task</h4><a id=\"user-content-cancelling-the-scheduled-task\" class=\"anchor\" aria-label=\"Permalink: Cancelling the scheduled task\" href=\"#cancelling-the-scheduled-task\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">Using <code>Stream#interruptWhen(haltWhenTrue)</code></p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import cats.effect._\nimport cron4s.Cron\nimport eu.timepit.fs2cron.cron4s.Cron4sScheduler\nimport fs2.Stream\nimport fs2.concurrent.SignallingRef\n\nimport java.time.LocalTime\nimport scala.concurrent.duration._\n\nobject TestApp extends IOApp.Simple {\n  val printTime = Stream.eval(IO(println(LocalTime.now)))\n\n  override def run: IO[Unit] = {\n    val cronScheduler = Cron4sScheduler.systemDefault[IO]\n    val evenSeconds = Cron.unsafeParse(&quot;*/2 * * ? * *&quot;)\n    val scheduled = cronScheduler.awakeEvery(evenSeconds) &gt;&gt; printTime\n    val cancel = SignallingRef[IO, Boolean](false)\n\n    for {\n      c &lt;- cancel\n      s &lt;- scheduled.interruptWhen(c).repeat.compile.drain.start\n      //prints about 5 times before stop\n      _ &lt;- Temporal[IO].sleep(10.seconds) &gt;&gt; c.set(true)\n    } yield s\n  }\n}\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">cats</span>.<span class=\"pl-en\">effect</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">cron4s</span>.<span class=\"pl-en\">Cron</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">eu</span>.<span class=\"pl-en\">timepit</span>.<span class=\"pl-en\">fs2cron</span>.<span class=\"pl-en\">cron4s</span>.<span class=\"pl-en\">Cron4sScheduler</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">fs2</span>.<span class=\"pl-en\">Stream</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">fs2</span>.<span class=\"pl-en\">concurrent</span>.<span class=\"pl-en\">SignallingRef</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">java</span>.<span class=\"pl-en\">time</span>.<span class=\"pl-en\">LocalTime</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">scala</span>.<span class=\"pl-en\">concurrent</span>.<span class=\"pl-en\">duration</span>.<span class=\"pl-en\">_</span>\n\n<span class=\"pl-k\">object</span> <span class=\"pl-en\">TestApp</span> <span class=\"pl-k\">extends</span> <span class=\"pl-en\">IOApp</span>.<span class=\"pl-en\">Simple</span> {\n  <span class=\"pl-k\">val</span> <span class=\"pl-v\">printTime</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Stream</span>.eval(<span class=\"pl-en\">IO</span>(println(<span class=\"pl-en\">LocalTime</span>.now)))\n\n  <span class=\"pl-k\">override</span> <span class=\"pl-k\">def</span> <span class=\"pl-en\">run</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">IO</span>[<span class=\"pl-en\">Unit</span>] <span class=\"pl-k\">=</span> {\n    <span class=\"pl-k\">val</span> <span class=\"pl-v\">cronScheduler</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Cron4sScheduler</span>.systemDefault[<span class=\"pl-en\">IO</span>]\n    <span class=\"pl-k\">val</span> <span class=\"pl-v\">evenSeconds</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Cron</span>.unsafeParse(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>*/2 * * ? * *<span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-k\">val</span> <span class=\"pl-v\">scheduled</span> <span class=\"pl-k\">=</span> cronScheduler.awakeEvery(evenSeconds) <span class=\"pl-k\">&gt;&gt;</span> printTime\n    <span class=\"pl-k\">val</span> <span class=\"pl-v\">cancel</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">SignallingRef</span>[<span class=\"pl-en\">IO</span>, <span class=\"pl-en\">Boolean</span>](<span class=\"pl-c1\">false</span>)\n\n    <span class=\"pl-k\">for</span> {\n      c <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">-</span> cancel\n      s <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">-</span> scheduled.interruptWhen(c).repeat.compile.drain.start\n      <span class=\"pl-c\"><span class=\"pl-c\">//</span>prints about 5 times before stop</span>\n      _ <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">-</span> <span class=\"pl-en\">Temporal</span>[<span class=\"pl-en\">IO</span>].sleep(<span class=\"pl-c1\">10</span>.seconds) <span class=\"pl-k\">&gt;&gt;</span> c.set(<span class=\"pl-c1\">true</span>)\n    } <span class=\"pl-k\">yield</span> s\n  }\n}</pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h3 class=\"heading-element\" dir=\"auto\">Using Calev library</h3><a id=\"user-content-using-calev-library\" class=\"anchor\" aria-label=\"Permalink: Using Calev library\" href=\"#using-calev-library\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">Requires the <code>fs2-cron-calev</code> module:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import com.github.eikek.calev.CalEvent\nimport eu.timepit.fs2cron.calev.CalevScheduler\n\nval calevScheduler = CalevScheduler.systemDefault[IO]\n// calevScheduler: eu.timepit.fs2cron.Scheduler[IO, CalEvent] = eu.timepit.fs2cron.calev.CalevScheduler$$anon$1@5b72ab85\nval oddSeconds = CalEvent.unsafe(&quot;*-*-* *:*:1/2&quot;)\n// oddSeconds: CalEvent = CalEvent(\n//   weekday = All,\n//   date = DateEvent(year = All, month = All, day = All),\n//   time = TimeEvent(\n//     hour = All,\n//     minute = All,\n//     seconds = List(values = Vector(Single(value = 1, rep = Some(value = 2))))\n//   ),\n//   zone = None\n// )\n\nval calevScheduled = calevScheduler.awakeEvery(oddSeconds) &gt;&gt; printTime\n// calevScheduled: Stream[[x]IO[x], Unit] = Stream(..)\ncalevScheduled.take(3).compile.drain.unsafeRunSync()\n// 22:35:05.005121709\n// 22:35:07.000442205\n// 22:35:09.000989961\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">com</span>.<span class=\"pl-en\">github</span>.<span class=\"pl-en\">eikek</span>.<span class=\"pl-en\">calev</span>.<span class=\"pl-en\">CalEvent</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">eu</span>.<span class=\"pl-en\">timepit</span>.<span class=\"pl-en\">fs2cron</span>.<span class=\"pl-en\">calev</span>.<span class=\"pl-en\">CalevScheduler</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">calevScheduler</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">CalevScheduler</span>.systemDefault[<span class=\"pl-en\">IO</span>]\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> calevScheduler: eu.timepit.fs2cron.Scheduler[IO, CalEvent] = eu.timepit.fs2cron.calev.CalevScheduler$$anon$1@5b72ab85</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">oddSeconds</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">CalEvent</span>.unsafe(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>*-*-* *:*:1/2<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> oddSeconds: CalEvent = CalEvent(</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   weekday = All,</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   date = DateEvent(year = All, month = All, day = All),</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   time = TimeEvent(</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>     hour = All,</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>     minute = All,</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>     seconds = List(values = Vector(Single(value = 1, rep = Some(value = 2))))</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   ),</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   zone = None</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> )</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">calevScheduled</span> <span class=\"pl-k\">=</span> calevScheduler.awakeEvery(oddSeconds) <span class=\"pl-k\">&gt;&gt;</span> printTime\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> calevScheduled: Stream[[x]IO[x], Unit] = Stream(..)</span>\ncalevScheduled.take(<span class=\"pl-c1\">3</span>).compile.drain.unsafeRunSync()\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:35:05.005121709</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:35:07.000442205</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:35:09.000989961</span></pre></div>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"val everyFourSeconds = CalEvent.unsafe(&quot;*-*-* *:*:0/4&quot;)\n// everyFourSeconds: CalEvent = CalEvent(\n//   weekday = All,\n//   date = DateEvent(year = All, month = All, day = All),\n//   time = TimeEvent(\n//     hour = All,\n//     minute = All,\n//     seconds = List(values = Vector(Single(value = 0, rep = Some(value = 4))))\n//   ),\n//   zone = None\n// )\n\nval calevScheduledTasks = calevScheduler.schedule(List(\n  oddSeconds      -&gt; Stream.eval(IO(println(LocalTime.now.toString + &quot; task 1&quot;))),\n  everyFourSeconds -&gt; Stream.eval(IO(println(LocalTime.now.toString + &quot; task 2&quot;)))\n))\n// calevScheduledTasks: Stream[IO, Unit] = Stream(..)\n\ncalevScheduledTasks.take(9).compile.drain.unsafeRunSync()\n// 22:35:11.000475346 task 1\n// 22:35:12.000865309 task 2\n// 22:35:13.000723319 task 1\n// 22:35:15.001042916 task 1\n// 22:35:16.000423061 task 2\n// 22:35:17.000806045 task 1\n// 22:35:19.000158236 task 1\n// 22:35:20.000879932 task 2\n// 22:35:21.000786710 task 1\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-v\">everyFourSeconds</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">CalEvent</span>.unsafe(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>*-*-* *:*:0/4<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> everyFourSeconds: CalEvent = CalEvent(</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   weekday = All,</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   date = DateEvent(year = All, month = All, day = All),</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   time = TimeEvent(</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>     hour = All,</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>     minute = All,</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>     seconds = List(values = Vector(Single(value = 0, rep = Some(value = 4))))</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   ),</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>   zone = None</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> )</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">calevScheduledTasks</span> <span class=\"pl-k\">=</span> calevScheduler.schedule(<span class=\"pl-en\">List</span>(\n  oddSeconds      <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Stream</span>.eval(<span class=\"pl-en\">IO</span>(println(<span class=\"pl-en\">LocalTime</span>.now.toString <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> task 1<span class=\"pl-pds\">\"</span></span>))),\n  everyFourSeconds <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">Stream</span>.eval(<span class=\"pl-en\">IO</span>(println(<span class=\"pl-en\">LocalTime</span>.now.toString <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> task 2<span class=\"pl-pds\">\"</span></span>)))\n))\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> calevScheduledTasks: Stream[IO, Unit] = Stream(..)</span>\n\ncalevScheduledTasks.take(<span class=\"pl-c1\">9</span>).compile.drain.unsafeRunSync()\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:35:11.000475346 task 1</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:35:12.000865309 task 2</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:35:13.000723319 task 1</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:35:15.001042916 task 1</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:35:16.000423061 task 2</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:35:17.000806045 task 1</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:35:19.000158236 task 1</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:35:20.000879932 task 2</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> 22:35:21.000786710 task 1</span></pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Using fs2-cron</h2><a id=\"user-content-using-fs2-cron\" class=\"anchor\" aria-label=\"Permalink: Using fs2-cron\" href=\"#using-fs2-cron\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">The latest version of the library is available for Scala 2.12 and 2.13.</p>\n<p dir=\"auto\">If you're using sbt, add the following to your build:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"libraryDependencies ++= Seq(\n  &quot;eu.timepit&quot; %% &quot;fs2-cron-cron4s&quot; % &quot;0.9.0&quot; //and/or\n  &quot;eu.timepit&quot; %% &quot;fs2-cron-calev&quot; % &quot;0.9.0&quot;\n)\"><pre>libraryDependencies <span class=\"pl-k\">++</span><span class=\"pl-k\">=</span> <span class=\"pl-en\">Seq</span>(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>eu.timepit<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>fs2-cron-cron4s<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0.9.0<span class=\"pl-pds\">\"</span></span> <span class=\"pl-c\"><span class=\"pl-c\">//</span>and/or</span>\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>eu.timepit<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>fs2-cron-calev<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0.9.0<span class=\"pl-pds\">\"</span></span>\n)</pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">License</h2><a id=\"user-content-license\" class=\"anchor\" aria-label=\"Permalink: License\" href=\"#license\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\"><strong>fs2-cron</strong> is licensed under the Apache License, Version 2.0, available at\n<a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">http://www.apache.org/licenses/LICENSE-2.0</a> and also in the\n<a href=\"https://github.com/fthomas/status-page/blob/master/LICENSE\">LICENSE</a> file.</p>\n</article></div>",
    "contributors" : [
      {
        "login" : "scala-steward",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/43047562?v=4",
        "url" : "https://github.com/scala-steward",
        "contributions" : 518
      },
      {
        "login" : "mergify[bot]",
        "avatarUrl" : "https://avatars.githubusercontent.com/in/10562?v=4",
        "url" : "https://github.com/apps/mergify",
        "contributions" : 375
      },
      {
        "login" : "fthomas",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/141252?v=4",
        "url" : "https://github.com/fthomas",
        "contributions" : 184
      },
      {
        "login" : "gatorcse",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/358979?v=4",
        "url" : "https://github.com/gatorcse",
        "contributions" : 6
      },
      {
        "login" : "eikek",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/701128?v=4",
        "url" : "https://github.com/eikek",
        "contributions" : 6
      },
      {
        "login" : "THeinemann",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/16024165?v=4",
        "url" : "https://github.com/THeinemann",
        "contributions" : 5
      },
      {
        "login" : "kubukoz",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/894884?v=4",
        "url" : "https://github.com/kubukoz",
        "contributions" : 1
      },
      {
        "login" : "kwark",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/629786?v=4",
        "url" : "https://github.com/kwark",
        "contributions" : 1
      },
      {
        "login" : "gitter-badger",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/8518239?v=4",
        "url" : "https://github.com/gitter-badger",
        "contributions" : 1
      },
      {
        "login" : "lucafrancesc",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/42385040?v=4",
        "url" : "https://github.com/lucafrancesc",
        "contributions" : 1
      }
    ],
    "commits" : 1098,
    "topics" : [
      "cron",
      "cron4s",
      "scala",
      "fs2",
      "functional-programming"
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "openIssues" : [
    ],
    "scalaPercentage" : 98,
    "license" : "Apache-2.0",
    "commitActivity" : [
    ]
  },
  "settings" : {
    "preferStableVersion" : true,
    "defaultArtifact" : null,
    "customScalaDoc" : null,
    "documentationLinks" : [
    ],
    "contributorsWanted" : false,
    "deprecatedArtifacts" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "schedulers",
    "chatroom" : null
  }
}