{
  "organization" : "alexarchambault",
  "repository" : "case-app",
  "creationDate" : 1416296388062,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1644297869883
    }
  },
  "githubInfo" : {
    "homepage" : "",
    "description" : "Type-level & seamless command-line argument parsing for Scala",
    "logo" : "https://avatars.githubusercontent.com/u/7063723?v=4",
    "stars" : 263,
    "forks" : 37,
    "watchers" : 13,
    "issues" : 33,
    "creationDate" : 1414065453000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-case-app\" class=\"anchor\" aria-hidden=\"true\" href=\"#case-app\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>case-app</h1>\n<p dir=\"auto\"><em>Type-level &amp; seamless command-line argument parsing for Scala</em></p>\n<p dir=\"auto\"><a href=\"https://travis-ci.org/alexarchambault/case-app\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/b9ea2e1864995f899ebb9a3ccbe0337b49442b7d7512bb0315a2a97711aa9ff6/68747470733a2f2f7472617669732d63692e6f72672f616c657861726368616d6261756c742f636173652d6170702e737667\" alt=\"Build Status\" data-canonical-src=\"https://travis-ci.org/alexarchambault/case-app.svg\" style=\"max-width: 100%;\"></a>\n<a href=\"https://gitter.im/alexarchambault/case-app?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/5dbac0213da25c445bd11f168587c11a200ba153ef3014e8408e462e410169b3/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667\" alt=\"Gitter\" data-canonical-src=\"https://badges.gitter.im/Join%20Chat.svg\" style=\"max-width: 100%;\"></a>\n<a href=\"https://maven-badges.herokuapp.com/maven-central/com.github.alexarchambault/case-app_2.12\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/10e80246bbf0427349233d14fbaf245efb341454612514343b8b1a8ffbbe8139/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f636f6d2e6769746875622e616c657861726368616d6261756c742f636173652d6170705f322e31322e737667\" alt=\"Maven Central\" data-canonical-src=\"https://img.shields.io/maven-central/v/com.github.alexarchambault/case-app_2.12.svg\" style=\"max-width: 100%;\"></a>\n<a href=\"http://javadoc-badge.appspot.com/com.github.alexarchambault/case-app_2.12\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/4d539c13a6996e747994bcbc3ccce4b1bd61e282f649b878571940070edf4bf8/687474703a2f2f6a617661646f632d62616467652e61707073706f742e636f6d2f636f6d2e6769746875622e616c657861726368616d6261756c742f636173652d6170705f322e31322e7376673f6c6162656c3d7363616c61646f63\" alt=\"Scaladoc\" data-canonical-src=\"http://javadoc-badge.appspot.com/com.github.alexarchambault/case-app_2.12.svg?label=scaladoc\" style=\"max-width: 100%;\"></a>\n<a href=\"https://gitpod.io/#https://github.com/alexarchambault/case-app\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/daadb4894128d1e19b72d80236f5959f1f2b47f9fe081373f3246131f0189f6c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f476974706f642d72656164792d2d746f2d2d636f64652d626c75653f6c6f676f3d676974706f64\" alt=\"Gitpod Ready-to-Code\" data-canonical-src=\"https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\"><a id=\"user-content-imports\" class=\"anchor\" aria-hidden=\"true\" href=\"#imports\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Imports</h3>\n<p dir=\"auto\">The code snippets below assume that the content of <code>caseapp</code> is imported,</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import caseapp._\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">caseapp</span>.<span class=\"pl-en\">_</span></pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-parse-a-simple-set-of-options\" class=\"anchor\" aria-hidden=\"true\" href=\"#parse-a-simple-set-of-options\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Parse a simple set of options</h3>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"case class Options(\n  user: Option[String],\n  enableFoo: Boolean = false,\n  file: List[String]\n)\n\nCaseApp.parse[Options](\n  Seq(&quot;--user&quot;, &quot;alice&quot;, &quot;--file&quot;, &quot;a&quot;, &quot;--file&quot;, &quot;b&quot;)\n) == Right((Options(Some(&quot;alice&quot;), false, List(&quot;a&quot;, &quot;b&quot;)), Seq.empty))\"><pre><span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Options</span>(\n  <span class=\"pl-v\">user</span>: <span class=\"pl-en\">Option</span>[<span class=\"pl-en\">String</span>],\n  <span class=\"pl-v\">enableFoo</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n  <span class=\"pl-v\">file</span>: <span class=\"pl-en\">List</span>[<span class=\"pl-en\">String</span>]\n)\n\n<span class=\"pl-en\">CaseApp</span>.parse[<span class=\"pl-en\">Options</span>](\n  <span class=\"pl-en\">Seq</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>--user<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>alice<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>--file<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>--file<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b<span class=\"pl-pds\">\"</span></span>)\n) <span class=\"pl-k\">==</span> <span class=\"pl-en\">Right</span>((<span class=\"pl-en\">Options</span>(<span class=\"pl-en\">Some</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>alice<span class=\"pl-pds\">\"</span></span>), <span class=\"pl-c1\">false</span>, <span class=\"pl-en\">List</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b<span class=\"pl-pds\">\"</span></span>)), <span class=\"pl-en\">Seq</span>.empty))</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-required-and-optional-arguments\" class=\"anchor\" aria-hidden=\"true\" href=\"#required-and-optional-arguments\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Required and optional arguments</h3>\n<p dir=\"auto\">All arguments are required by default. To define an optional argument simply\nwrap its type into <code>Option[T]</code>.</p>\n<p dir=\"auto\">Optional arguments can also be defined by providing a default value.\nThere are two ways to do that:</p>\n<ul dir=\"auto\">\n<li>providing default value ad hoc in the case class definition</li>\n<li>defining default value for a type with <a href=\"https://github.com/alexarchambault/case-app/blob/master/core/shared/src/main/scala/caseapp/core/default/Default.scala\">Default</a>\ntype class</li>\n</ul>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"case class Options(\n  user: Option[String],\n  enableFoo: Boolean = false,\n  file: List[String] = Nil\n)\n\nCaseApp.parse[Options](Seq()) == Right((Options(None, false, Nil), Seq.empty))\"><pre><span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Options</span>(\n  <span class=\"pl-v\">user</span>: <span class=\"pl-en\">Option</span>[<span class=\"pl-en\">String</span>],\n  <span class=\"pl-v\">enableFoo</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n  <span class=\"pl-v\">file</span>: <span class=\"pl-en\">List</span>[<span class=\"pl-en\">String</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">Nil</span>\n)\n\n<span class=\"pl-en\">CaseApp</span>.parse[<span class=\"pl-en\">Options</span>](<span class=\"pl-en\">Seq</span>()) <span class=\"pl-k\">==</span> <span class=\"pl-en\">Right</span>((<span class=\"pl-en\">Options</span>(<span class=\"pl-en\">None</span>, <span class=\"pl-c1\">false</span>, <span class=\"pl-en\">Nil</span>), <span class=\"pl-en\">Seq</span>.empty))</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-lists\" class=\"anchor\" aria-hidden=\"true\" href=\"#lists\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Lists</h3>\n<p dir=\"auto\">Some arguments can be specified several times on the command-line. These\nshould be typed as lists, e.g. <code>file</code> in</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"case class Options(\n  user: Option[String],\n  enableFoo: Boolean = false,\n  file: List[String]\n)\n\nCaseApp.parse[Options](\n  Seq(&quot;--file&quot;, &quot;a&quot;, &quot;--file&quot;, &quot;b&quot;)\n) == Right((Options(None, false, List(&quot;a&quot;, &quot;b&quot;)), Seq.empty))\"><pre><span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Options</span>(\n  <span class=\"pl-v\">user</span>: <span class=\"pl-en\">Option</span>[<span class=\"pl-en\">String</span>],\n  <span class=\"pl-v\">enableFoo</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n  <span class=\"pl-v\">file</span>: <span class=\"pl-en\">List</span>[<span class=\"pl-en\">String</span>]\n)\n\n<span class=\"pl-en\">CaseApp</span>.parse[<span class=\"pl-en\">Options</span>](\n  <span class=\"pl-en\">Seq</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>--file<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>--file<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b<span class=\"pl-pds\">\"</span></span>)\n) <span class=\"pl-k\">==</span> <span class=\"pl-en\">Right</span>((<span class=\"pl-en\">Options</span>(<span class=\"pl-en\">None</span>, <span class=\"pl-c1\">false</span>, <span class=\"pl-en\">List</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b<span class=\"pl-pds\">\"</span></span>)), <span class=\"pl-en\">Seq</span>.empty))</pre></div>\n<p dir=\"auto\">If an argument is specified several times, but is not typed as a <code>List</code> (or an accumulating type,\nsee below), the final value of its corresponding field is the last provided in the arguments.</p>\n<h3 dir=\"auto\"><a id=\"user-content-pluggable-support-for-argument-expansion-before-argument-parsing\" class=\"anchor\" aria-hidden=\"true\" href=\"#pluggable-support-for-argument-expansion-before-argument-parsing\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Pluggable support for argument expansion before argument parsing</h3>\n<p dir=\"auto\">By default, all arguments are parsed as-is.\nTo enable expanding arguments before argument parsing,\noverride</p>\n<p dir=\"auto\">If supported by the platform, <em>case-app</em> can expand each argument of the form: <code>@&lt;filename&gt;</code> with\nthe contents of <code>&lt;filename&gt;</code> where each line constitutes a distinct argument.</p>\n<p dir=\"auto\">For example, <code>@args</code> where <code>args</code> is a file containing the following:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"--\n-foo\n1\"><pre><code>--\n-foo\n1\n</code></pre></div>\n<p dir=\"auto\">is equivalent to: <code>-- -foo </code>.</p>\n<p dir=\"auto\">This behavior is disabled by default.</p>\n<p dir=\"auto\">To enable argument file expansion, override <code>CaseApp.expandArgs</code> as follows:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import caseapp.core.parser.PlatformArgsExpander\n\noverride def expandArgs(args: List[String]): List[String] = PlatformArgsExpander.expand(args)\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">caseapp</span>.<span class=\"pl-en\">core</span>.<span class=\"pl-en\">parser</span>.<span class=\"pl-en\">PlatformArgsExpander</span>\n\n<span class=\"pl-k\">override</span> <span class=\"pl-k\">def</span> <span class=\"pl-en\">expandArgs</span>(<span class=\"pl-v\">args</span>: <span class=\"pl-en\">List</span>[<span class=\"pl-en\">String</span>])<span class=\"pl-k\">:</span> <span class=\"pl-en\">List</span>[<span class=\"pl-en\">String</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">PlatformArgsExpander</span>.expand(args)</pre></div>\n<p dir=\"auto\">Alternatively, override this function with a custom argument expansion mechanism.</p>\n<h3 dir=\"auto\"><a id=\"user-content-whole-application-with-argument-parsing\" class=\"anchor\" aria-hidden=\"true\" href=\"#whole-application-with-argument-parsing\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Whole application with argument parsing</h3>\n<p dir=\"auto\"><em>case-app</em> can take care of the creation of the <code>main</code> method parsing\ncommand-line arguments.</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import caseapp._\n\ncase class ExampleOptions(\n  foo: String,\n  bar: Int\n)\n\nobject Example extends CaseApp[ExampleOptions] {\n\n  def run(options: ExampleOptions, arg: RemainingArgs): Unit = {\n    // Core of the app\n    // ...\n  }\n\n}\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">caseapp</span>.<span class=\"pl-en\">_</span>\n\n<span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">ExampleOptions</span>(\n  <span class=\"pl-v\">foo</span>: <span class=\"pl-en\">String</span>,\n  <span class=\"pl-v\">bar</span>: <span class=\"pl-en\">Int</span>\n)\n\n<span class=\"pl-k\">object</span> <span class=\"pl-en\">Example</span> <span class=\"pl-k\">extends</span> <span class=\"pl-e\">CaseApp</span>[<span class=\"pl-en\">ExampleOptions</span>] {\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">run</span>(<span class=\"pl-v\">options</span>: <span class=\"pl-en\">ExampleOptions</span>, <span class=\"pl-v\">arg</span>: <span class=\"pl-en\">RemainingArgs</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span> <span class=\"pl-k\">=</span> {\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> Core of the app</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> ...</span>\n  }\n\n}</pre></div>\n<p dir=\"auto\"><code>Example</code> in the above example will then have a <code>main</code> method, parsing\nthe arguments it is given to an <code>ExampleOptions</code>, then calling the <code>run</code> method\nif parsing was successful.</p>\n<h3 dir=\"auto\"><a id=\"user-content-automatic-help-and-usage-options\" class=\"anchor\" aria-hidden=\"true\" href=\"#automatic-help-and-usage-options\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Automatic help and usage options</h3>\n<p dir=\"auto\">Running the above example with the <code>--help</code> (or <code>-h</code>) option will print an help message\nof the form</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Example\nUsage: example [options]\n  --foo  &lt;value&gt;\n  --bar  &lt;value&gt;\"><pre><code>Example\nUsage: example [options]\n  --foo  &lt;value&gt;\n  --bar  &lt;value&gt;\n</code></pre></div>\n<p dir=\"auto\">Calling it with the <code>--usage</code> option will print</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Usage: example [options]\"><pre><code>Usage: example [options]\n</code></pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-customizing-items-of-the-help--usage-message\" class=\"anchor\" aria-hidden=\"true\" href=\"#customizing-items-of-the-help--usage-message\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Customizing items of the help / usage message</h3>\n<p dir=\"auto\">Several parts of the above help message can be customized by annotating\n<code>ExampleOptions</code> or its fields:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@AppName(&quot;MyApp&quot;)\n@AppVersion(&quot;0.1.0&quot;)\n@ProgName(&quot;my-app-cli&quot;)\ncase class ExampleOptions(\n  @HelpMessage(&quot;the foo&quot;)\n  @ValueDescription(&quot;foo&quot;)\n    foo: String,\n  @HelpMessage(&quot;the bar&quot;)\n  @ValueDescription(&quot;bar&quot;)\n    bar: Int\n)\"><pre><span class=\"pl-k\">@</span><span class=\"pl-en\">AppName</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>MyApp<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">@</span><span class=\"pl-en\">AppVersion</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0.1.0<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">@</span><span class=\"pl-en\">ProgName</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>my-app-cli<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">ExampleOptions</span>(\n  <span class=\"pl-k\">@</span><span class=\"pl-en\">HelpMessage</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>the foo<span class=\"pl-pds\">\"</span></span>)\n  <span class=\"pl-k\">@</span><span class=\"pl-en\">ValueDescription</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>foo<span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-v\">foo</span>: <span class=\"pl-en\">String</span>,\n  <span class=\"pl-k\">@</span><span class=\"pl-en\">HelpMessage</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>the bar<span class=\"pl-pds\">\"</span></span>)\n  <span class=\"pl-k\">@</span><span class=\"pl-en\">ValueDescription</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bar<span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-v\">bar</span>: <span class=\"pl-en\">Int</span>\n)</pre></div>\n<p dir=\"auto\">Called with the <code>--help</code> or <code>-h</code> option, would print</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"MyApp 0.1.0\nUsage: my-app-cli [options]\n  --foo  &lt;foo&gt;: the foo\n  --bar  &lt;bar&gt;: the bar\"><pre><code>MyApp 0.1.0\nUsage: my-app-cli [options]\n  --foo  &lt;foo&gt;: the foo\n  --bar  &lt;bar&gt;: the bar\n</code></pre></div>\n<p dir=\"auto\">Note the application name that changed, on the first line. Note also the version\nnumber appended next to it. The program name, after <code>Usage: </code>, was changed too.</p>\n<p dir=\"auto\">Lastly, the options value descriptions (<code>&lt;foo&gt;</code> and <code>&lt;bar&gt;</code>) and help messages\n(<code>the foo</code> and <code>the bar</code>), were customized.</p>\n<h3 dir=\"auto\"><a id=\"user-content-extra-option-names\" class=\"anchor\" aria-hidden=\"true\" href=\"#extra-option-names\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Extra option names</h3>\n<p dir=\"auto\">Alternative option names can be specified, like</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"case class ExampleOptions(\n  @ExtraName(&quot;f&quot;)\n    foo: String,\n  @ExtraName(&quot;b&quot;)\n    bar: Int\n)\"><pre><span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">ExampleOptions</span>(\n  <span class=\"pl-k\">@</span><span class=\"pl-en\">ExtraName</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>f<span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-v\">foo</span>: <span class=\"pl-en\">String</span>,\n  <span class=\"pl-k\">@</span><span class=\"pl-en\">ExtraName</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b<span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-v\">bar</span>: <span class=\"pl-en\">Int</span>\n)</pre></div>\n<p dir=\"auto\"><code>--foo</code> and <code>-f</code>, and <code>--bar</code> and <code>-b</code> would then be equivalent.</p>\n<h3 dir=\"auto\"><a id=\"user-content-long--short-options\" class=\"anchor\" aria-hidden=\"true\" href=\"#long--short-options\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Long / short options</h3>\n<p dir=\"auto\">Field names, or extra names as above, longer than one letter are considered\nlong options, prefixed with <code>--</code>. One letter long names are short options,\nprefixed with a single <code>-</code>.</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"case class ExampleOptions(\n  a: Int,\n  foo: String\n)\"><pre><span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">ExampleOptions</span>(\n  <span class=\"pl-v\">a</span>: <span class=\"pl-en\">Int</span>,\n  <span class=\"pl-v\">foo</span>: <span class=\"pl-en\">String</span>\n)</pre></div>\n<p dir=\"auto\">would accept <code>--foo bar</code> and <code>-a 2</code> as arguments to set <code>foo</code> or <code>a</code>.</p>\n<h3 dir=\"auto\"><a id=\"user-content-pascal-case-conversion\" class=\"anchor\" aria-hidden=\"true\" href=\"#pascal-case-conversion\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Pascal case conversion</h3>\n<p dir=\"auto\">Field names or extra names as above, written in pascal case, are split\nand hyphenized.</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"case class Options(\n  fooBar: Double\n)\"><pre><span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Options</span>(\n  <span class=\"pl-v\">fooBar</span>: <span class=\"pl-en\">Double</span>\n)</pre></div>\n<p dir=\"auto\">would accept arguments like <code>--foo-bar 2.2</code>.</p>\n<h3 dir=\"auto\"><a id=\"user-content-reusing-options\" class=\"anchor\" aria-hidden=\"true\" href=\"#reusing-options\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Reusing options</h3>\n<p dir=\"auto\">Sets of options can be shared between applications:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"case class CommonOptions(\n  foo: String,\n  bar: Int\n)\n\ncase class First(\n  baz: Double,\n  @Recurse\n    common: CommonOptions\n) {\n\n  // ...\n\n}\n\ncase class Second(\n  bas: Long,\n  @Recurse\n    common: CommonOptions\n) {\n\n  // ...\n\n}\"><pre><span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">CommonOptions</span>(\n  <span class=\"pl-v\">foo</span>: <span class=\"pl-en\">String</span>,\n  <span class=\"pl-v\">bar</span>: <span class=\"pl-en\">Int</span>\n)\n\n<span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">First</span>(\n  <span class=\"pl-v\">baz</span>: <span class=\"pl-en\">Double</span>,\n  <span class=\"pl-k\">@</span><span class=\"pl-en\">Recurse</span>\n    <span class=\"pl-v\">common</span>: <span class=\"pl-en\">CommonOptions</span>\n) {\n\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> ...</span>\n\n}\n\n<span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Second</span>(\n  <span class=\"pl-v\">bas</span>: <span class=\"pl-en\">Long</span>,\n  <span class=\"pl-k\">@</span><span class=\"pl-en\">Recurse</span>\n    <span class=\"pl-v\">common</span>: <span class=\"pl-en\">CommonOptions</span>\n) {\n\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> ...</span>\n\n}</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-commands\" class=\"anchor\" aria-hidden=\"true\" href=\"#commands\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Commands</h3>\n<p dir=\"auto\"><em>case-app</em> has a support for commands.</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"sealed trait DemoCommand\n\ncase class First(\n  foo: Int,\n  bar: String\n) extends DemoCommand\n\ncase class Second(\n  baz: Double\n) extends DemoCommand\n\nobject MyApp extends CommandApp[DemoCommand] {\n  def run(command: DemoCommand, args: RemainingArgs): Unit = {}\n}\"><pre><span class=\"pl-k\">sealed</span> <span class=\"pl-k\">trait</span> <span class=\"pl-en\">DemoCommand</span>\n\n<span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">First</span>(\n  <span class=\"pl-v\">foo</span>: <span class=\"pl-en\">Int</span>,\n  <span class=\"pl-v\">bar</span>: <span class=\"pl-en\">String</span>\n) <span class=\"pl-k\">extends</span> <span class=\"pl-e\">DemoCommand</span>\n\n<span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Second</span>(\n  <span class=\"pl-v\">baz</span>: <span class=\"pl-en\">Double</span>\n) <span class=\"pl-k\">extends</span> <span class=\"pl-e\">DemoCommand</span>\n\n<span class=\"pl-k\">object</span> <span class=\"pl-en\">MyApp</span> <span class=\"pl-k\">extends</span> <span class=\"pl-e\">CommandApp</span>[<span class=\"pl-en\">DemoCommand</span>] {\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">run</span>(<span class=\"pl-v\">command</span>: <span class=\"pl-en\">DemoCommand</span>, <span class=\"pl-v\">args</span>: <span class=\"pl-en\">RemainingArgs</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">Unit</span> <span class=\"pl-k\">=</span> {}\n}</pre></div>\n<p dir=\"auto\"><code>MyApp</code> can then be called with arguments like</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"my-app first --foo 2 --bar a\nmy-app second --baz 2.4\"><pre><code>my-app first --foo 2 --bar a\nmy-app second --baz 2.4\n</code></pre></div>\n<ul dir=\"auto\">\n<li>help messages</li>\n<li>customization</li>\n<li>base command</li>\n<li>...</li>\n</ul>\n<h3 dir=\"auto\"><a id=\"user-content-counters\" class=\"anchor\" aria-hidden=\"true\" href=\"#counters\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Counters</h3>\n<p dir=\"auto\"><em>Needs to be updated</em></p>\n<p dir=\"auto\">Some more complex options can be specified multiple times on the command-line and should be\n\"accumulated\". For example, one would want to define a verbose option like</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"case class Options(\n  @ExtraName(&quot;v&quot;) verbose: Int\n)\"><pre><span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Options</span>(\n  <span class=\"pl-k\">@</span><span class=\"pl-en\">ExtraName</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>v<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-v\">verbose</span>: <span class=\"pl-en\">Int</span>\n)</pre></div>\n<p dir=\"auto\">Verbosity would then have be specified on the command-line like <code>--verbose 3</code>.\nBut the usual preferred way of increasing verbosity is to repeat the verbosity\noption, like in <code>-v -v -v</code>. To accept the latter,\ntag <code>verbose</code> type with <code>Counter</code>:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"case class Options(\n  @ExtraName(&quot;v&quot;) verbose: Int @@ Counter\n)\"><pre><span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Options</span>(\n  <span class=\"pl-k\">@</span><span class=\"pl-en\">ExtraName</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>v<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-v\">verbose</span>: <span class=\"pl-en\">Int</span> <span class=\"pl-k\">@@</span> <span class=\"pl-en\">Counter</span>\n)</pre></div>\n<p dir=\"auto\"><code>verbose</code> (and <code>v</code>) option will then be viewed as a flag, and the\n<code>verbose</code> variable will contain\nthe number of times this flag is specified on the command-line.</p>\n<p dir=\"auto\">It can optionally be given a default value other than 0. This\nvalue will be increased by the number of times <code>-v</code> or <code>--verbose</code>\nwas specified in the arguments.</p>\n<h3 dir=\"auto\"><a id=\"user-content-user-defined-option-types\" class=\"anchor\" aria-hidden=\"true\" href=\"#user-defined-option-types\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>User-defined option types</h3>\n<p dir=\"auto\"><em>Needs to be updated</em></p>\n<p dir=\"auto\">Use your own option types by defining implicit <code>ArgParser</code>s for them, like in</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import caseapp.core.argparser.{ArgParser, SimpleArgParser}\n\ntrait Custom\n\nimplicit val customArgParser: ArgParser[Custom] =\n  SimpleArgParser.from[Custom](&quot;custom&quot;) { s =&gt;\n    // parse s\n    // return\n    // - Left(a caseapp.core.Error instance) in case of error\n    // - Right(custom) in case of success\n    ???\n  }\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">caseapp</span>.<span class=\"pl-en\">core</span>.<span class=\"pl-en\">argparser</span>.{<span class=\"pl-en\">ArgParser</span>, <span class=\"pl-en\">SimpleArgParser</span>}\n\n<span class=\"pl-k\">trait</span> <span class=\"pl-en\">Custom</span>\n\n<span class=\"pl-k\">implicit</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">customArgParser</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">ArgParser</span>[<span class=\"pl-en\">Custom</span>] <span class=\"pl-k\">=</span>\n  <span class=\"pl-en\">SimpleArgParser</span>.from[<span class=\"pl-en\">Custom</span>](<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>custom<span class=\"pl-pds\">\"</span></span>) { s <span class=\"pl-k\">=&gt;</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> parse s</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> return</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> - Left(a caseapp.core.Error instance) in case of error</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> - Right(custom) in case of success</span>\n    <span class=\"pl-k\">???</span>\n  }</pre></div>\n<p dir=\"auto\">Then use them like</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"case class Options(\n  custom: Custom,\n  foo: String\n)\"><pre><span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Options</span>(\n  <span class=\"pl-v\">custom</span>: <span class=\"pl-en\">Custom</span>,\n  <span class=\"pl-v\">foo</span>: <span class=\"pl-en\">String</span>\n)</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-cats-effect\" class=\"anchor\" aria-hidden=\"true\" href=\"#cats-effect\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Cats Effect</h3>\n<p dir=\"auto\">A <a href=\"https://github.com/typelevel/cats-effect\">cats-effect</a> module is available, providing\n<code>IO</code> versions of the application classes referenced above. They all extend <a href=\"https://typelevel.org/cats-effect/datatypes/ioapp.html\" rel=\"nofollow\">IOApp</a>\nso <a href=\"https://typelevel.org/cats-effect/datatypes/timer.html\" rel=\"nofollow\"><code>Timer</code></a> and <a href=\"https://typelevel.org/cats-effect/datatypes/contextshift.html\" rel=\"nofollow\"><code>ContextShift</code></a>\nare conveniently available.</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// additional imports\nimport caseapp.cats._\nimport cats.effect._\n\nobject IOCaseExample extends IOCaseApp[ExampleOptions] {\n  def run(options: ExampleOptions, arg: RemainingArgs): IO[ExitCode] = IO {\n    // Core of the app\n    // ...\n    ExitCode.Success\n  }\n}\n\nobject IOCommandExample extends CommandApp[DemoCommand] {\n  def run(command: DemoCommand, args: RemainingArgs): IO[ExitCode] = IO {\n    // ...\n    ExitCode.Success\n  }\n}\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> additional imports</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">caseapp</span>.<span class=\"pl-en\">cats</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">cats</span>.<span class=\"pl-en\">effect</span>.<span class=\"pl-en\">_</span>\n\n<span class=\"pl-k\">object</span> <span class=\"pl-en\">IOCaseExample</span> <span class=\"pl-k\">extends</span> <span class=\"pl-e\">IOCaseApp</span>[<span class=\"pl-en\">ExampleOptions</span>] {\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">run</span>(<span class=\"pl-v\">options</span>: <span class=\"pl-en\">ExampleOptions</span>, <span class=\"pl-v\">arg</span>: <span class=\"pl-en\">RemainingArgs</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">IO</span>[<span class=\"pl-en\">ExitCode</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">IO</span> {\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> Core of the app</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> ...</span>\n    <span class=\"pl-en\">ExitCode</span>.<span class=\"pl-en\">Success</span>\n  }\n}\n\n<span class=\"pl-k\">object</span> <span class=\"pl-en\">IOCommandExample</span> <span class=\"pl-k\">extends</span> <span class=\"pl-e\">CommandApp</span>[<span class=\"pl-en\">DemoCommand</span>] {\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">run</span>(<span class=\"pl-v\">command</span>: <span class=\"pl-en\">DemoCommand</span>, <span class=\"pl-v\">args</span>: <span class=\"pl-en\">RemainingArgs</span>)<span class=\"pl-k\">:</span> <span class=\"pl-en\">IO</span>[<span class=\"pl-en\">ExitCode</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">IO</span> {\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> ...</span>\n    <span class=\"pl-en\">ExitCode</span>.<span class=\"pl-en\">Success</span>\n  }\n}</pre></div>\n<h2 dir=\"auto\"><a id=\"user-content-usage\" class=\"anchor\" aria-hidden=\"true\" href=\"#usage\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Usage</h2>\n<p dir=\"auto\">Add to your <code>build.sbt</code></p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"resolvers += Resolver.sonatypeRepo(&quot;releases&quot;)\nlibraryDependencies += &quot;com.github.alexarchambault&quot; %% &quot;case-app&quot; % &quot;2.0.1&quot;\n// cats-effect module\nlibraryDependencies += &quot;com.github.alexarchambault&quot; %% &quot;case-app-cats&quot; % &quot;2.0.1&quot;\"><pre>resolvers <span class=\"pl-k\">+</span><span class=\"pl-k\">=</span> <span class=\"pl-en\">Resolver</span>.sonatypeRepo(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>releases<span class=\"pl-pds\">\"</span></span>)\nlibraryDependencies <span class=\"pl-k\">+</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.github.alexarchambault<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>case-app<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>2.0.1<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> cats-effect module</span>\nlibraryDependencies <span class=\"pl-k\">+</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.github.alexarchambault<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>case-app-cats<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>2.0.1<span class=\"pl-pds\">\"</span></span></pre></div>\n<p dir=\"auto\">The latest version is <a href=\"https://maven-badges.herokuapp.com/maven-central/com.github.alexarchambault/case-app_2.13\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/feb46981cac663ce25f6820f0b012ac74ea129511127ca98eee52c4ea2383d10/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f636f6d2e6769746875622e616c657861726368616d6261756c742f636173652d6170705f322e31332e737667\" alt=\"Maven Central\" data-canonical-src=\"https://img.shields.io/maven-central/v/com.github.alexarchambault/case-app_2.13.svg\" style=\"max-width: 100%;\"></a>.</p>\n<p dir=\"auto\">Note that case-app depends on shapeless 2.3. Use the <code>1.0.0</code> version if you depend on shapeless 2.2.</p>\n<p dir=\"auto\">It is built against scala 2.12, and 2.13, and supports Scala.js too.</p>\n<h2 dir=\"auto\"><a id=\"user-content-contributors\" class=\"anchor\" aria-hidden=\"true\" href=\"#contributors\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Contributors</h2>\n<p dir=\"auto\">See the <a href=\"https://github.com/alexarchambault/case-app/graphs/contributors\">full list of contributors</a> on GitHub.</p>\n<h2 dir=\"auto\"><a id=\"user-content-see-also\" class=\"anchor\" aria-hidden=\"true\" href=\"#see-also\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>See also</h2>\n<p dir=\"auto\">Eugene Yokota, the current maintainer of scopt, and others, compiled\nan (eeextremeeeely long) list of command-line argument parsing\nlibraries for Scala, in <a href=\"http://stackoverflow.com/questions/2315912/scala-best-way-to-parse-command-line-parameters-cli\" rel=\"nofollow\">this StackOverflow question</a>.</p>\n<p dir=\"auto\">Unlike <a href=\"https://github.com/scopt/scopt\">scopt</a>, case-app is less monadic / abstract data types based, and more\nstraight-to-the-point and descriptive / algebric data types oriented.</p>\n<h2 dir=\"auto\"><a id=\"user-content-notice\" class=\"anchor\" aria-hidden=\"true\" href=\"#notice\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Notice</h2>\n<p dir=\"auto\">Copyright (c) 2014-2017 Alexandre Archambault and contributors.\nSee LICENSE file for more details.</p>\n<p dir=\"auto\">Released under Apache 2.0 license.</p>\n</article></div>",
    "contributors" : [
      {
        "login" : "alexarchambault",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/7063723?v=4",
        "url" : "https://api.github.com/users/alexarchambault",
        "contributions" : 408
      },
      {
        "login" : "scala-steward",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/43047562?v=4",
        "url" : "https://api.github.com/users/scala-steward",
        "contributions" : 137
      },
      {
        "login" : "regadas",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/163899?v=4",
        "url" : "https://api.github.com/users/regadas",
        "contributions" : 6
      },
      {
        "login" : "larsrh",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/923079?v=4",
        "url" : "https://api.github.com/users/larsrh",
        "contributions" : 5
      },
      {
        "login" : "xuwei-k",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/389787?v=4",
        "url" : "https://api.github.com/users/xuwei-k",
        "contributions" : 5
      },
      {
        "login" : "danxmoran",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2755881?v=4",
        "url" : "https://api.github.com/users/danxmoran",
        "contributions" : 4
      },
      {
        "login" : "nightscape",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/35170?v=4",
        "url" : "https://api.github.com/users/nightscape",
        "contributions" : 3
      },
      {
        "login" : "lwronski",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/46607934?v=4",
        "url" : "https://api.github.com/users/lwronski",
        "contributions" : 3
      },
      {
        "login" : "Slakah",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/16853?v=4",
        "url" : "https://api.github.com/users/Slakah",
        "contributions" : 2
      },
      {
        "login" : "dependabot[bot]",
        "avatarUrl" : "https://avatars.githubusercontent.com/in/29110?v=4",
        "url" : "https://api.github.com/users/dependabot%5Bbot%5D",
        "contributions" : 2
      },
      {
        "login" : "adpi2",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/13123162?v=4",
        "url" : "https://api.github.com/users/adpi2",
        "contributions" : 1
      },
      {
        "login" : "densh",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/320966?v=4",
        "url" : "https://api.github.com/users/densh",
        "contributions" : 1
      },
      {
        "login" : "joroKr21",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2218841?v=4",
        "url" : "https://api.github.com/users/joroKr21",
        "contributions" : 1
      },
      {
        "login" : "joan38",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1200478?v=4",
        "url" : "https://api.github.com/users/joan38",
        "contributions" : 1
      },
      {
        "login" : "LaurenceWarne",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/17688577?v=4",
        "url" : "https://api.github.com/users/LaurenceWarne",
        "contributions" : 1
      },
      {
        "login" : "battermann",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3968185?v=4",
        "url" : "https://api.github.com/users/battermann",
        "contributions" : 1
      },
      {
        "login" : "bluesheeptoken",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/17785017?v=4",
        "url" : "https://api.github.com/users/bluesheeptoken",
        "contributions" : 1
      },
      {
        "login" : "NicolasRouquette",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2359166?v=4",
        "url" : "https://api.github.com/users/NicolasRouquette",
        "contributions" : 1
      },
      {
        "login" : "tkroman",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1114784?v=4",
        "url" : "https://api.github.com/users/tkroman",
        "contributions" : 1
      },
      {
        "login" : "ryan-williams",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/465045?v=4",
        "url" : "https://api.github.com/users/ryan-williams",
        "contributions" : 1
      },
      {
        "login" : "gitter-badger",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/8518239?v=4",
        "url" : "https://api.github.com/users/gitter-badger",
        "contributions" : 1
      },
      {
        "login" : "lavrov",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2944597?v=4",
        "url" : "https://api.github.com/users/lavrov",
        "contributions" : 1
      },
      {
        "login" : "YannMoisan",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/681743?v=4",
        "url" : "https://api.github.com/users/YannMoisan",
        "contributions" : 1
      },
      {
        "login" : "gaborbarna",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/618202?v=4",
        "url" : "https://api.github.com/users/gaborbarna",
        "contributions" : 1
      },
      {
        "login" : "olafurpg",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1408093?v=4",
        "url" : "https://api.github.com/users/olafurpg",
        "contributions" : 1
      },
      {
        "login" : "Atry",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/601530?v=4",
        "url" : "https://api.github.com/users/Atry",
        "contributions" : 1
      }
    ],
    "commits" : 591,
    "topics" : [
      "argument-parsing",
      "scala"
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "chatroom" : "https://gitter.im/alexarchambault/case-app",
    "openIssues" : [
      {
        "number" : 263,
        "title" : "Feature Request: Ignore unrecognized arguments",
        "url" : "https://github.com/alexarchambault/case-app/issues/263"
      },
      {
        "number" : 231,
        "title" : "boolean handling is confusing",
        "url" : "https://github.com/alexarchambault/case-app/issues/231"
      },
      {
        "number" : 203,
        "title" : "Site",
        "url" : "https://github.com/alexarchambault/case-app/issues/203"
      },
      {
        "number" : 193,
        "title" : "Better help message",
        "url" : "https://github.com/alexarchambault/case-app/issues/193"
      },
      {
        "number" : 162,
        "title" : "could not find implicit value for evidence parameter of type caseapp.core.parser.Parser[T]",
        "url" : "https://github.com/alexarchambault/case-app/issues/162"
      },
      {
        "number" : 161,
        "title" : "Question: how could to get the former `defaultDescription` of Arg with version 2.0.0-M3?",
        "url" : "https://github.com/alexarchambault/case-app/issues/161"
      },
      {
        "number" : 132,
        "title" : "app should exit with non-zero exit code and usage/help text when no argument provided",
        "url" : "https://github.com/alexarchambault/case-app/issues/132"
      },
      {
        "number" : 131,
        "title" : "No implicits found for parameter eveidence$1: Parser[Options]",
        "url" : "https://github.com/alexarchambault/case-app/issues/131"
      },
      {
        "number" : 119,
        "title" : "defaultDescription behaviour has changed between 1.2.0 and 1.2.0-M2",
        "url" : "https://github.com/alexarchambault/case-app/issues/119"
      },
      {
        "number" : 107,
        "title" : "Code with traits does not work - missing implicits",
        "url" : "https://github.com/alexarchambault/case-app/issues/107"
      },
      {
        "number" : 95,
        "title" : "Annotations not found for CommandApp",
        "url" : "https://github.com/alexarchambault/case-app/issues/95"
      },
      {
        "number" : 86,
        "title" : "Question @Recurse with context/prefix",
        "url" : "https://github.com/alexarchambault/case-app/issues/86"
      },
      {
        "number" : 81,
        "title" : "Bash autocompletion",
        "url" : "https://github.com/alexarchambault/case-app/issues/81"
      },
      {
        "number" : 80,
        "title" : "Option conflict should throw an error at compile time",
        "url" : "https://github.com/alexarchambault/case-app/issues/80"
      },
      {
        "number" : 73,
        "title" : "Duplicate arguments are reported as \"???\"",
        "url" : "https://github.com/alexarchambault/case-app/issues/73"
      },
      {
        "number" : 58,
        "title" : "Positional arguments, parsing scaladocs",
        "url" : "https://github.com/alexarchambault/case-app/issues/58"
      },
      {
        "number" : 57,
        "title" : "Customizable CommandParser",
        "url" : "https://github.com/alexarchambault/case-app/issues/57"
      },
      {
        "number" : 51,
        "title" : "Trying to get desired behavior",
        "url" : "https://github.com/alexarchambault/case-app/issues/51"
      },
      {
        "number" : 50,
        "title" : "Help does not display if arguments are invalid or not supplied",
        "url" : "https://github.com/alexarchambault/case-app/issues/50"
      },
      {
        "number" : 46,
        "title" : "Reverse Parse",
        "url" : "https://github.com/alexarchambault/case-app/issues/46"
      },
      {
        "number" : 45,
        "title" : "Help output with custom parser",
        "url" : "https://github.com/alexarchambault/case-app/issues/45"
      },
      {
        "number" : 39,
        "title" : "Feature request: more automatic documentation for flags in --help",
        "url" : "https://github.com/alexarchambault/case-app/issues/39"
      },
      {
        "number" : 29,
        "title" : "Lower camel case annotations",
        "url" : "https://github.com/alexarchambault/case-app/issues/29"
      },
      {
        "number" : 7,
        "title" : "Enhance doc",
        "url" : "https://github.com/alexarchambault/case-app/issues/7"
      },
      {
        "number" : 6,
        "title" : "Note about non litteral in annotations",
        "url" : "https://github.com/alexarchambault/case-app/issues/6"
      },
      {
        "number" : 3,
        "title" : "Tagged types not practical",
        "url" : "https://github.com/alexarchambault/case-app/issues/3"
      }
    ]
  },
  "settings" : {
    "defaultStableVersion" : true,
    "defaultArtifact" : "case-app",
    "strictVersions" : false,
    "customScalaDoc" : null,
    "documentationLinks" : [
    ],
    "deprecated" : false,
    "contributorsWanted" : false,
    "artifactDeprecations" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "command-line-parsing",
    "beginnerIssuesLabel" : null
  }
}