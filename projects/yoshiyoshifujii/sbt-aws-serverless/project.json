{
  "organization" : "yoshiyoshifujii",
  "repository" : "sbt-aws-serverless",
  "creationDate" : 1476080080000,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1723555121777
    }
  },
  "githubInfo" : {
    "homepage" : "http://qiita.com/yoshiyoshifujii/items/f7bb8abd56fe9ea33e2d",
    "description" : "sbt plugin to deploy code to AWS Serverless Architecture",
    "logo" : "https://avatars.githubusercontent.com/u/2921853?v=4",
    "stars" : 28,
    "forks" : 4,
    "watchers" : 7,
    "issues" : 1,
    "creationDate" : 1473692580000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div class=\"markdown-heading\" dir=\"auto\"><h1 class=\"heading-element\" dir=\"auto\">sbt-aws-serverless</h1><a id=\"user-content-sbt-aws-serverless\" class=\"anchor\" aria-label=\"Permalink: sbt-aws-serverless\" href=\"#sbt-aws-serverless\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">sbt plugin to deploy code to Amazon API Gateway and AWS Lambda</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Installation</h2><a id=\"user-content-installation\" class=\"anchor\" aria-label=\"Permalink: Installation\" href=\"#installation\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">Add the following to your <code>project/plugins.sbt</code> file:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"addSbtPlugin(&quot;com.github.yoshiyoshifujii&quot; % &quot;sbt-aws-serverless&quot; % &quot;4.1.0&quot;)\"><pre>addSbtPlugin(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.github.yoshiyoshifujii<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sbt-aws-serverless<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>4.1.0<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<p dir=\"auto\">Add the <code>ServerlessPlugin</code> auto-plugin to your build.sbt:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"enablePlugins(ServerlessPlugin)\"><pre>enablePlugins(<span class=\"pl-en\">ServerlessPlugin</span>)</pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Usage</h2><a id=\"user-content-usage\" class=\"anchor\" aria-label=\"Permalink: Usage\" href=\"#usage\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\"><code>sbt serverlessDeploy &lt;stage&gt;</code> deploys the entire service.</p>\n<p dir=\"auto\"><code>sbt serverlessDeployDev &lt;stage&gt;</code> Deploy the deployDev task in development mode.</p>\n<p dir=\"auto\"><code>sbt serverlessDeployFunction &lt;functionName&gt; &lt;stage&gt;</code> The deployFunc task deploys the AWS Lambda Function.</p>\n<p dir=\"auto\"><code>sbt serverlessDeployList &lt;stage&gt;</code> The deployList task will list your recent deployments.</p>\n<p dir=\"auto\"><code>sbt serverlessInvoke &lt;stage&gt;</code> Invokes deployed function.</p>\n<p dir=\"auto\"><code>sbt serverlessInformation</code> Displays information about the deployed service.</p>\n<p dir=\"auto\"><code>sbt serverlessRemove</code> The remove task will remove the deployed service.</p>\n<p dir=\"auto\"><code>sbt serverlessRemoveStage &lt;stage&gt;</code> The removeStage task will remove the stage.</p>\n<p dir=\"auto\"><code>sbt serverlessRemoveDeployment &lt;deploymentId&gt;</code> remove the API Gateway deployments.</p>\n<p dir=\"auto\"><code>sbt serverlessDeployStream &lt;stage&gt;</code> The deployStream task deploys the AWS Stream Event.</p>\n<p dir=\"auto\"><code>sbt serverlessClean</code> Clean up unneccessary deployments.</p>\n<p dir=\"auto\"><code>sbt serverlessFunctionsDeploy &lt;stage&gt;</code> The functionDeploy task deploys the AWS Lambda Function and API Gateway.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Configuration</h2><a id=\"user-content-configuration\" class=\"anchor\" aria-label=\"Permalink: Configuration\" href=\"#configuration\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"serverlessOption := {\n  ServerlessOption(\n    Provider(\n      awsAccount: String,\n      region: String = &quot;us-east-1&quot;,\n      deploymentBucket: String\n    ),\n    ApiGateway(\n      swagger: File,\n      stageVariables: Option[Map[String, String]] = Some(Map(\n        &quot;env&quot; -&gt; stage,\n        &quot;region&quot; -&gt; region\n      ))\n    ),\n    Functions(\n      Function(\n        filePath: File,\n        name: String,\n        description: Option[String] = None,\n        handler: String,\n        memorySize: Int = 512,\n        timeout: Int = 10,\n        role: String,\n        environment: Map[String, String] = Map.empty,\n        tracing: Option[Tracing] = None,\n        events: Events = Events(\n          HttpEvent(\n            path: String,\n            method: String,\n            uriLambdaAlias: String = &quot;${stageVariables.env}&quot;,\n            proxyIntegration: Boolean = false,\n            cors: Boolean = false,\n            `private`: Boolean = false,\n            authorizerName: Option[String] = None,\n            request: Request = Request(),\n            invokeInput: Option[HttpInvokeInput] = None\n          ),\n          AuthorizeEvent(\n            name: String,\n            uriLambdaAlias: String = &quot;${stageVariables.env}&quot;,\n            resultTtlInSeconds: Int = 1800,\n            identitySourceHeaderName: String = &quot;Authorization&quot;,\n            identityValidationExpression: Option[String] = None\n          ),\n          KinesisStreamEvent(\n            name: String,\n            batchSize: Int = 100,\n            startingPosition: KinesisStartingPosition = KinesisStartingPosition.TRIM_HORIZON,\n            enabled: Boolean = true,\n            oldFunctions: Seq[FunctionBase] = Seq.empty\n          ),\n          DynamoDBStreamEvent(\n            name: String,\n            batchSize: Int = 100,\n            startingPosition: DynamoDBStartingPosition = DynamoDBStartingPosition.TRIM_HORIZON,\n            enabled: Boolean = true,\n            oldFunctions: Seq[FunctionBase] = Seq.empty\n          )\n        )\n      ),\n      NotDeployLambdaFunction(\n        name: String,\n        publishedVersion: Option[String] = None,\n        events: Events\n      )\n    )\n  )\n}\"><pre>serverlessOption <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> {\n  <span class=\"pl-en\">ServerlessOption</span>(\n    <span class=\"pl-en\">Provider</span>(\n      <span class=\"pl-v\">awsAccount</span>: <span class=\"pl-en\">String</span>,\n      <span class=\"pl-v\">region</span>: <span class=\"pl-en\">String</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>us-east-1<span class=\"pl-pds\">\"</span></span>,\n      <span class=\"pl-v\">deploymentBucket</span>: <span class=\"pl-en\">String</span>\n    ),\n    <span class=\"pl-en\">ApiGateway</span>(\n      <span class=\"pl-v\">swagger</span>: <span class=\"pl-en\">File</span>,\n      <span class=\"pl-v\">stageVariables</span>: <span class=\"pl-en\">Option</span>[<span class=\"pl-en\">Map</span>[<span class=\"pl-en\">String</span>, <span class=\"pl-en\">String</span>]] <span class=\"pl-k\">=</span> <span class=\"pl-en\">Some</span>(<span class=\"pl-en\">Map</span>(\n        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>env<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> stage,\n        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>region<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> region\n      ))\n    ),\n    <span class=\"pl-en\">Functions</span>(\n      <span class=\"pl-en\">Function</span>(\n        <span class=\"pl-v\">filePath</span>: <span class=\"pl-en\">File</span>,\n        <span class=\"pl-v\">name</span>: <span class=\"pl-en\">String</span>,\n        <span class=\"pl-v\">description</span>: <span class=\"pl-en\">Option</span>[<span class=\"pl-en\">String</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">None</span>,\n        <span class=\"pl-v\">handler</span>: <span class=\"pl-en\">String</span>,\n        <span class=\"pl-v\">memorySize</span>: <span class=\"pl-en\">Int</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">512</span>,\n        <span class=\"pl-v\">timeout</span>: <span class=\"pl-en\">Int</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">10</span>,\n        <span class=\"pl-v\">role</span>: <span class=\"pl-en\">String</span>,\n        <span class=\"pl-v\">environment</span>: <span class=\"pl-en\">Map</span>[<span class=\"pl-en\">String</span>, <span class=\"pl-en\">String</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">Map</span>.empty,\n        <span class=\"pl-v\">tracing</span>: <span class=\"pl-en\">Option</span>[<span class=\"pl-en\">Tracing</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">None</span>,\n        <span class=\"pl-v\">events</span>: <span class=\"pl-en\">Events</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Events</span>(\n          <span class=\"pl-en\">HttpEvent</span>(\n            <span class=\"pl-v\">path</span>: <span class=\"pl-en\">String</span>,\n            <span class=\"pl-v\">method</span>: <span class=\"pl-en\">String</span>,\n            <span class=\"pl-v\">uriLambdaAlias</span>: <span class=\"pl-en\">String</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>${stageVariables.env}<span class=\"pl-pds\">\"</span></span>,\n            <span class=\"pl-v\">proxyIntegration</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n            <span class=\"pl-v\">cors</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n            <span class=\"pl-v\">`private`</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n            <span class=\"pl-v\">authorizerName</span>: <span class=\"pl-en\">Option</span>[<span class=\"pl-en\">String</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">None</span>,\n            <span class=\"pl-v\">request</span>: <span class=\"pl-en\">Request</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Request</span>(),\n            <span class=\"pl-v\">invokeInput</span>: <span class=\"pl-en\">Option</span>[<span class=\"pl-en\">HttpInvokeInput</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">None</span>\n          ),\n          <span class=\"pl-en\">AuthorizeEvent</span>(\n            <span class=\"pl-v\">name</span>: <span class=\"pl-en\">String</span>,\n            <span class=\"pl-v\">uriLambdaAlias</span>: <span class=\"pl-en\">String</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>${stageVariables.env}<span class=\"pl-pds\">\"</span></span>,\n            <span class=\"pl-v\">resultTtlInSeconds</span>: <span class=\"pl-en\">Int</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1800</span>,\n            <span class=\"pl-v\">identitySourceHeaderName</span>: <span class=\"pl-en\">String</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Authorization<span class=\"pl-pds\">\"</span></span>,\n            <span class=\"pl-v\">identityValidationExpression</span>: <span class=\"pl-en\">Option</span>[<span class=\"pl-en\">String</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">None</span>\n          ),\n          <span class=\"pl-en\">KinesisStreamEvent</span>(\n            <span class=\"pl-v\">name</span>: <span class=\"pl-en\">String</span>,\n            <span class=\"pl-v\">batchSize</span>: <span class=\"pl-en\">Int</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">100</span>,\n            <span class=\"pl-v\">startingPosition</span>: <span class=\"pl-en\">KinesisStartingPosition</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">KinesisStartingPosition</span>.<span class=\"pl-en\">TRIM_HORIZON</span>,\n            <span class=\"pl-v\">enabled</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>,\n            <span class=\"pl-v\">oldFunctions</span>: <span class=\"pl-en\">Seq</span>[<span class=\"pl-en\">FunctionBase</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">Seq</span>.empty\n          ),\n          <span class=\"pl-en\">DynamoDBStreamEvent</span>(\n            <span class=\"pl-v\">name</span>: <span class=\"pl-en\">String</span>,\n            <span class=\"pl-v\">batchSize</span>: <span class=\"pl-en\">Int</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">100</span>,\n            <span class=\"pl-v\">startingPosition</span>: <span class=\"pl-en\">DynamoDBStartingPosition</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">DynamoDBStartingPosition</span>.<span class=\"pl-en\">TRIM_HORIZON</span>,\n            <span class=\"pl-v\">enabled</span>: <span class=\"pl-en\">Boolean</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>,\n            <span class=\"pl-v\">oldFunctions</span>: <span class=\"pl-en\">Seq</span>[<span class=\"pl-en\">FunctionBase</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">Seq</span>.empty\n          )\n        )\n      ),\n      <span class=\"pl-en\">NotDeployLambdaFunction</span>(\n        <span class=\"pl-v\">name</span>: <span class=\"pl-en\">String</span>,\n        <span class=\"pl-v\">publishedVersion</span>: <span class=\"pl-en\">Option</span>[<span class=\"pl-en\">String</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">None</span>,\n        <span class=\"pl-v\">events</span>: <span class=\"pl-en\">Events</span>\n      )\n    )\n  )\n}</pre></div>\n<p dir=\"auto\">If there is a Jar of the same name in S3, we added an option to preferentially use that.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"serverlessNoUploadMode := true\"><pre>serverlessNoUploadMode <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span></pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">build.sbt</h2><a id=\"user-content-buildsbt\" class=\"anchor\" aria-label=\"Permalink: build.sbt\" href=\"#buildsbt\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">An example configuration might look like this:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import Dependencies._\nimport serverless._\n\nlazy val accountId = sys.props.getOrElse(&quot;AWS_ACCOUNT_ID&quot;, &quot;&quot;)\nlazy val roleArn = sys.props.getOrElse(&quot;AWS_ROLE_ARN&quot;, &quot;&quot;)\nlazy val bucketName = sys.props.getOrElse(&quot;AWS_BUCKET_NAME&quot;, &quot;&quot;)\nlazy val authKey = sys.props.getOrElse(&quot;AUTH_KEY&quot;, &quot;&quot;)\n\nval commonSettings = Seq(\n  version := &quot;$version$&quot;,\n  scalaVersion := &quot;2.12.1&quot;,\n  organization := &quot;$organization$&quot;,\n  libraryDependencies ++= rootDeps\n)\n\nval assemblySettings = Seq(\n  assemblyMergeStrategy in assembly := {\n    case &quot;application.conf&quot; =&gt; MergeStrategy.concat\n    case x =&gt;\n      val oldStrategy = (assemblyMergeStrategy in assembly).value\n      oldStrategy(x)\n  },\n  assemblyJarName in assembly := s&quot;\\${name.value}-\\${version.value}.jar&quot;,\n  publishArtifact in (Compile, packageBin) := false,\n  publishArtifact in (Compile, packageSrc) := false,\n  publishArtifact in (Compile, packageDoc) := false\n)\n\nlazy val root = (project in file(&quot;.&quot;)).\n  enablePlugins(ServerlessPlugin).\n  aggregate(auth, appHello, appAccountModified).\n  settings(commonSettings: _*).\n  settings(\n    name := &quot;$name$&quot;,\n    serverlessOption := {\n      ServerlessOption(\n        Provider(\n          awsAccount = accountId,\n          deploymentBucket = bucketName,\n          swagger = file(&quot;./swagger.yaml&quot;)\n        ),\n        Functions(\n          Function(\n            filePath = (assembly in auth).value,\n            name = (name in auth).value,\n            handler = &quot;$package$.Auth::handleRequest&quot;,\n            role = roleArn,\n            events = Events(\n              AuthorizeEvent(\n                name = (name in auth).value\n              )\n            )\n          ),\n          Function(\n            filePath = (assembly in appHello).value,\n            name = (name in appHello).value,\n            handler = &quot;$package$.application.hello.App::handleRequest&quot;,\n            role = roleArn,\n            events = Events(\n              HttpEvent(\n                path = &quot;/hellos&quot;,\n                method = &quot;GET&quot;,\n                proxyIntegration = false,\n                cors = true,\n                authorizerName = (name in auth).value,\n                invokeInput = HttpInvokeInput(\n                  headers = Seq(&quot;Authorization&quot; -&gt; authKey)\n                )\n              )\n            )\n          ),\n          Function(\n            filePath = (assembly in appAccountModified).value,\n            name = (name in appAccountModified).value,\n            handler = &quot;$package$.application.accountmodified.App::recordHandler&quot;,\n            role = roleArn\n          )\n        )\n      )\n    }\n  )\n\nlazy val domain = (project in file(&quot;./modules/domain&quot;)).\n  settings(commonSettings: _*).\n  settings(\n    name := &quot;$name$-domain&quot;,\n    libraryDependencies ++= domainDeps\n  )\n\nlazy val infraLambda = (project in file(&quot;./modules/infrastructure/lambda&quot;)).\n  settings(commonSettings: _*).\n  settings(\n    name := &quot;$name$-infrastructure-lambda&quot;,\n    libraryDependencies ++= infraLambdaDeps\n  )\n\nlazy val infraLambdaConsumer = (project in file(&quot;./modules/infrastructure/lambdaconsumer&quot;)).\n  settings(commonSettings: _*).\n  settings(\n    name := &quot;$name$-infrastructure-lambda-consumer&quot;,\n    libraryDependencies ++= infraLambdaConsumerDeps\n  )\n\nlazy val infraDomain = (project in file(&quot;./modules/infrastructure/domain&quot;)).\n  dependsOn(domain).\n  settings(commonSettings: _*).\n  settings(\n    name := &quot;$name$-infrastructure-domain&quot;,\n    libraryDependencies ++= infraDomainDeps\n  )\n\nlazy val infraDynamo = (project in file(&quot;./modules/infrastructure/dynamodb&quot;)).\n  dependsOn(infraDomain).\n  settings(commonSettings: _*).\n  settings(\n    name := &quot;$name$-infrastructure-dynamodb&quot;,\n    libraryDependencies ++= infraDynamoDeps\n  )\n\nlazy val infraS3 = (project in file(&quot;./modules/infrastructure/s3&quot;)).\n  dependsOn(infraDomain).\n  settings(commonSettings: _*).\n  settings(\n    name := &quot;$name$-infrastructure-s3&quot;,\n    libraryDependencies ++= infraS3Deps\n  )\n\nlazy val infraKinesis = (project in file(&quot;./modules/infrastructure/kinesis&quot;)).\n  dependsOn(infraDomain).\n  settings(commonSettings: _*).\n  settings(\n    name := &quot;$name$-infrastructure-kinesis&quot;,\n    libraryDependencies ++= infraKinesisDeps\n  )\n\nlazy val infraElasticSearch = (project in file(&quot;./modules/infrastructure/elasticsearch&quot;)).\n  dependsOn(infraDomain).\n  settings(commonSettings: _*).\n  settings(\n    name := &quot;$name$-infrastructure-elasticsearch&quot;,\n    libraryDependencies ++= infraElasticSearchDeps\n  )\n\nlazy val auth = (project in file(&quot;./modules/auth&quot;)).\n  settings(commonSettings: _*).\n  settings(assemblySettings: _*).\n  settings(\n    name := &quot;$name$-auth&quot;,\n    libraryDependencies ++= authDeps\n  )\n\nlazy val appHello = (project in file(&quot;./modules/application/hello&quot;)).\n  dependsOn(infraLambda, infraDynamo, infraS3, infraKinesis).\n  settings(commonSettings: _*).\n  settings(assemblySettings: _*).\n  settings(\n    name := &quot;$name$-app-hello&quot;,\n    libraryDependencies ++= appHelloDeps\n  )\n\nlazy val appAccountModified = (project in file(&quot;./modules/application/accountmodified&quot;)).\n  dependsOn(infraLambdaConsumer, infraDomain).\n  settings(commonSettings: _*).\n  settings(assemblySettings: _*).\n  settings(\n    name := &quot;$name$-app-account-modified&quot;,\n    libraryDependencies ++= appAccountModifiedDeps\n  )\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">Dependencies</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">serverless</span>.<span class=\"pl-en\">_</span>\n\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">accountId</span> <span class=\"pl-k\">=</span> sys.props.getOrElse(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>AWS_ACCOUNT_ID<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">roleArn</span> <span class=\"pl-k\">=</span> sys.props.getOrElse(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>AWS_ROLE_ARN<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">bucketName</span> <span class=\"pl-k\">=</span> sys.props.getOrElse(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>AWS_BUCKET_NAME<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">authKey</span> <span class=\"pl-k\">=</span> sys.props.getOrElse(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>AUTH_KEY<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>)\n\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">commonSettings</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Seq</span>(\n  version <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$version$<span class=\"pl-pds\">\"</span></span>,\n  scalaVersion <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>2.12.1<span class=\"pl-pds\">\"</span></span>,\n  organization <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$organization$<span class=\"pl-pds\">\"</span></span>,\n  libraryDependencies <span class=\"pl-k\">++</span><span class=\"pl-k\">=</span> rootDeps\n)\n\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">assemblySettings</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Seq</span>(\n  assemblyMergeStrategy in assembly <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> {\n    <span class=\"pl-k\">case</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>application.conf<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">=&gt;</span> <span class=\"pl-en\">MergeStrategy</span>.concat\n    <span class=\"pl-k\">case</span> x <span class=\"pl-k\">=&gt;</span>\n      <span class=\"pl-k\">val</span> <span class=\"pl-v\">oldStrategy</span> <span class=\"pl-k\">=</span> (assemblyMergeStrategy in assembly).value\n      oldStrategy(x)\n  },\n  assemblyJarName in assembly <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-k\">s</span><span class=\"pl-s\">\"</span><span class=\"pl-ii\">\\$</span><span class=\"pl-s\">{name.value}-</span><span class=\"pl-ii\">\\$</span><span class=\"pl-s\">{version.value}.jar</span><span class=\"pl-s\">\"</span>,\n  publishArtifact in (<span class=\"pl-en\">Compile</span>, packageBin) <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n  publishArtifact in (<span class=\"pl-en\">Compile</span>, packageSrc) <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n  publishArtifact in (<span class=\"pl-en\">Compile</span>, packageDoc) <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>\n)\n\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">root</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.<span class=\"pl-pds\">\"</span></span>)).\n  enablePlugins(<span class=\"pl-en\">ServerlessPlugin</span>).\n  aggregate(auth, appHello, appAccountModified).\n  settings(<span class=\"pl-v\">commonSettings</span>: _<span class=\"pl-k\">*</span>).\n  settings(\n    name <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$name$<span class=\"pl-pds\">\"</span></span>,\n    serverlessOption <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> {\n      <span class=\"pl-en\">ServerlessOption</span>(\n        <span class=\"pl-en\">Provider</span>(\n          awsAccount <span class=\"pl-k\">=</span> accountId,\n          deploymentBucket <span class=\"pl-k\">=</span> bucketName,\n          swagger <span class=\"pl-k\">=</span> file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./swagger.yaml<span class=\"pl-pds\">\"</span></span>)\n        ),\n        <span class=\"pl-en\">Functions</span>(\n          <span class=\"pl-en\">Function</span>(\n            filePath <span class=\"pl-k\">=</span> (assembly in auth).value,\n            name <span class=\"pl-k\">=</span> (name in auth).value,\n            handler <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$package$.Auth::handleRequest<span class=\"pl-pds\">\"</span></span>,\n            role <span class=\"pl-k\">=</span> roleArn,\n            events <span class=\"pl-k\">=</span> <span class=\"pl-en\">Events</span>(\n              <span class=\"pl-en\">AuthorizeEvent</span>(\n                name <span class=\"pl-k\">=</span> (name in auth).value\n              )\n            )\n          ),\n          <span class=\"pl-en\">Function</span>(\n            filePath <span class=\"pl-k\">=</span> (assembly in appHello).value,\n            name <span class=\"pl-k\">=</span> (name in appHello).value,\n            handler <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$package$.application.hello.App::handleRequest<span class=\"pl-pds\">\"</span></span>,\n            role <span class=\"pl-k\">=</span> roleArn,\n            events <span class=\"pl-k\">=</span> <span class=\"pl-en\">Events</span>(\n              <span class=\"pl-en\">HttpEvent</span>(\n                path <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/hellos<span class=\"pl-pds\">\"</span></span>,\n                method <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>GET<span class=\"pl-pds\">\"</span></span>,\n                proxyIntegration <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n                cors <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>,\n                authorizerName <span class=\"pl-k\">=</span> (name in auth).value,\n                invokeInput <span class=\"pl-k\">=</span> <span class=\"pl-en\">HttpInvokeInput</span>(\n                  headers <span class=\"pl-k\">=</span> <span class=\"pl-en\">Seq</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Authorization<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> authKey)\n                )\n              )\n            )\n          ),\n          <span class=\"pl-en\">Function</span>(\n            filePath <span class=\"pl-k\">=</span> (assembly in appAccountModified).value,\n            name <span class=\"pl-k\">=</span> (name in appAccountModified).value,\n            handler <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$package$.application.accountmodified.App::recordHandler<span class=\"pl-pds\">\"</span></span>,\n            role <span class=\"pl-k\">=</span> roleArn\n          )\n        )\n      )\n    }\n  )\n\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">domain</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./modules/domain<span class=\"pl-pds\">\"</span></span>)).\n  settings(<span class=\"pl-v\">commonSettings</span>: _<span class=\"pl-k\">*</span>).\n  settings(\n    name <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$name$-domain<span class=\"pl-pds\">\"</span></span>,\n    libraryDependencies <span class=\"pl-k\">++</span><span class=\"pl-k\">=</span> domainDeps\n  )\n\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">infraLambda</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./modules/infrastructure/lambda<span class=\"pl-pds\">\"</span></span>)).\n  settings(<span class=\"pl-v\">commonSettings</span>: _<span class=\"pl-k\">*</span>).\n  settings(\n    name <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$name$-infrastructure-lambda<span class=\"pl-pds\">\"</span></span>,\n    libraryDependencies <span class=\"pl-k\">++</span><span class=\"pl-k\">=</span> infraLambdaDeps\n  )\n\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">infraLambdaConsumer</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./modules/infrastructure/lambdaconsumer<span class=\"pl-pds\">\"</span></span>)).\n  settings(<span class=\"pl-v\">commonSettings</span>: _<span class=\"pl-k\">*</span>).\n  settings(\n    name <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$name$-infrastructure-lambda-consumer<span class=\"pl-pds\">\"</span></span>,\n    libraryDependencies <span class=\"pl-k\">++</span><span class=\"pl-k\">=</span> infraLambdaConsumerDeps\n  )\n\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">infraDomain</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./modules/infrastructure/domain<span class=\"pl-pds\">\"</span></span>)).\n  dependsOn(domain).\n  settings(<span class=\"pl-v\">commonSettings</span>: _<span class=\"pl-k\">*</span>).\n  settings(\n    name <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$name$-infrastructure-domain<span class=\"pl-pds\">\"</span></span>,\n    libraryDependencies <span class=\"pl-k\">++</span><span class=\"pl-k\">=</span> infraDomainDeps\n  )\n\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">infraDynamo</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./modules/infrastructure/dynamodb<span class=\"pl-pds\">\"</span></span>)).\n  dependsOn(infraDomain).\n  settings(<span class=\"pl-v\">commonSettings</span>: _<span class=\"pl-k\">*</span>).\n  settings(\n    name <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$name$-infrastructure-dynamodb<span class=\"pl-pds\">\"</span></span>,\n    libraryDependencies <span class=\"pl-k\">++</span><span class=\"pl-k\">=</span> infraDynamoDeps\n  )\n\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">infraS3</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./modules/infrastructure/s3<span class=\"pl-pds\">\"</span></span>)).\n  dependsOn(infraDomain).\n  settings(<span class=\"pl-v\">commonSettings</span>: _<span class=\"pl-k\">*</span>).\n  settings(\n    name <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$name$-infrastructure-s3<span class=\"pl-pds\">\"</span></span>,\n    libraryDependencies <span class=\"pl-k\">++</span><span class=\"pl-k\">=</span> infraS3Deps\n  )\n\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">infraKinesis</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./modules/infrastructure/kinesis<span class=\"pl-pds\">\"</span></span>)).\n  dependsOn(infraDomain).\n  settings(<span class=\"pl-v\">commonSettings</span>: _<span class=\"pl-k\">*</span>).\n  settings(\n    name <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$name$-infrastructure-kinesis<span class=\"pl-pds\">\"</span></span>,\n    libraryDependencies <span class=\"pl-k\">++</span><span class=\"pl-k\">=</span> infraKinesisDeps\n  )\n\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">infraElasticSearch</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./modules/infrastructure/elasticsearch<span class=\"pl-pds\">\"</span></span>)).\n  dependsOn(infraDomain).\n  settings(<span class=\"pl-v\">commonSettings</span>: _<span class=\"pl-k\">*</span>).\n  settings(\n    name <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$name$-infrastructure-elasticsearch<span class=\"pl-pds\">\"</span></span>,\n    libraryDependencies <span class=\"pl-k\">++</span><span class=\"pl-k\">=</span> infraElasticSearchDeps\n  )\n\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">auth</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./modules/auth<span class=\"pl-pds\">\"</span></span>)).\n  settings(<span class=\"pl-v\">commonSettings</span>: _<span class=\"pl-k\">*</span>).\n  settings(<span class=\"pl-v\">assemblySettings</span>: _<span class=\"pl-k\">*</span>).\n  settings(\n    name <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$name$-auth<span class=\"pl-pds\">\"</span></span>,\n    libraryDependencies <span class=\"pl-k\">++</span><span class=\"pl-k\">=</span> authDeps\n  )\n\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">appHello</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./modules/application/hello<span class=\"pl-pds\">\"</span></span>)).\n  dependsOn(infraLambda, infraDynamo, infraS3, infraKinesis).\n  settings(<span class=\"pl-v\">commonSettings</span>: _<span class=\"pl-k\">*</span>).\n  settings(<span class=\"pl-v\">assemblySettings</span>: _<span class=\"pl-k\">*</span>).\n  settings(\n    name <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$name$-app-hello<span class=\"pl-pds\">\"</span></span>,\n    libraryDependencies <span class=\"pl-k\">++</span><span class=\"pl-k\">=</span> appHelloDeps\n  )\n\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">appAccountModified</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./modules/application/accountmodified<span class=\"pl-pds\">\"</span></span>)).\n  dependsOn(infraLambdaConsumer, infraDomain).\n  settings(<span class=\"pl-v\">commonSettings</span>: _<span class=\"pl-k\">*</span>).\n  settings(<span class=\"pl-v\">assemblySettings</span>: _<span class=\"pl-k\">*</span>).\n  settings(\n    name <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>$name$-app-account-modified<span class=\"pl-pds\">\"</span></span>,\n    libraryDependencies <span class=\"pl-k\">++</span><span class=\"pl-k\">=</span> appAccountModifiedDeps\n  )</pre></div>\n<p dir=\"auto\">An example command might look like this:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"sbt -DAWS_ACCOUNT_ID=&lt;AWS Account ID&gt; \\\n    -DAWS_ROLE_ARN=arn:aws:iam::&lt;AWS Account ID&gt;:role/&lt;Role Name&gt; \\\n    -DAWS_BUCKET_NAME=&lt;Bucket Name&gt; \\\n    -DAUTH_KEY=hoge\"><pre>sbt -DAWS_ACCOUNT_ID=<span class=\"pl-k\">&lt;</span>AWS Account ID<span class=\"pl-k\">&gt;</span> \\\n    -DAWS_ROLE_ARN=arn:aws:iam::<span class=\"pl-k\">&lt;</span>AWS Account ID<span class=\"pl-k\">&gt;</span>:role/<span class=\"pl-k\">&lt;</span>Role Name<span class=\"pl-k\">&gt;</span> \\\n    -DAWS_BUCKET_NAME=<span class=\"pl-k\">&lt;</span>Bucket Name<span class=\"pl-k\">&gt;</span> \\\n    -DAUTH_KEY=hoge</pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Giter8</h2><a id=\"user-content-giter8\" class=\"anchor\" aria-label=\"Permalink: Giter8\" href=\"#giter8\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\"><a href=\"https://github.com/yoshiyoshifujii/sbt-aws-serverless-ddd.g8\">https://github.com/yoshiyoshifujii/sbt-aws-serverless-ddd.g8</a></p>\n</article></div>",
    "contributors" : [
      {
        "login" : "yoshiyoshifujii",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2921853?v=4",
        "url" : "https://github.com/yoshiyoshifujii",
        "contributions" : 235
      },
      {
        "login" : "j5ik2o",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/461711?v=4",
        "url" : "https://github.com/j5ik2o",
        "contributions" : 5
      },
      {
        "login" : "HiroyukiNishi",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/29847034?v=4",
        "url" : "https://github.com/HiroyukiNishi",
        "contributions" : 4
      },
      {
        "login" : "takesection",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3461074?v=4",
        "url" : "https://github.com/takesection",
        "contributions" : 1
      },
      {
        "login" : "shigeki-shoji",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/29846338?v=4",
        "url" : "https://github.com/shigeki-shoji",
        "contributions" : 1
      }
    ],
    "commits" : 246,
    "topics" : [
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "openIssues" : [
      {
        "number" : 7,
        "title" : "Add a prefix to the name of TaskKey",
        "url" : "https://github.com/yoshiyoshifujii/sbt-aws-serverless/issues/7"
      }
    ],
    "scalaPercentage" : 99,
    "license" : null,
    "commitActivity" : [
    ]
  },
  "settings" : {
    "preferStableVersion" : true,
    "defaultArtifact" : null,
    "customScalaDoc" : null,
    "documentationLinks" : [
    ],
    "contributorsWanted" : false,
    "deprecatedArtifacts" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "serverless",
    "chatroom" : null
  }
}