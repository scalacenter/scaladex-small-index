{
  "organization" : "oleg-py",
  "repository" : "better-monadic-for",
  "creationDate" : null,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1644284674441
    }
  },
  "githubInfo" : {
    "homepage" : null,
    "description" : "Desugaring scala `for` without implicit `withFilter`s",
    "logo" : "https://avatars.githubusercontent.com/u/4143670?v=4",
    "stars" : 656,
    "forks" : 31,
    "watchers" : 22,
    "issues" : 11,
    "creationDate" : 1522352874000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-better-monadic-for\" class=\"anchor\" aria-hidden=\"true\" href=\"#better-monadic-for\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>better-monadic-for</h1>\n<p dir=\"auto\"><a href=\"https://gitter.im/better-monadic-for/Lobby\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/f0155490a11833c265ba5017ba9a5fad1f6fea9b3b3ba1a48a22f83f6cea09e2/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f6265747465722d6d6f6e616469632d666f722f4c6f6262792e7376673f7374796c653d666c61742d737175617265\" alt=\"Gitter\" data-canonical-src=\"https://img.shields.io/gitter/room/better-monadic-for/Lobby.svg?style=flat-square\" style=\"max-width: 100%;\"></a>\n<a href=\"https://waffle.io/oleg-py/better-monadic-for\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/3172493ded8babcc45dfc9334c24d5fa656338d00aaa95f13b0518c4757d828f/68747470733a2f2f62616467652e776166666c652e696f2f6f6c65672d70792f6265747465722d6d6f6e616469632d666f722e7376673f7374796c653d666c61742d73717561726526636f6c756d6e733d6261636b6c6f672c676174686572696e672532306f70696e696f6e73\" alt=\"Waffle.io - Columns and their card count\" data-canonical-src=\"https://badge.waffle.io/oleg-py/better-monadic-for.svg?style=flat-square&amp;columns=backlog,gathering%20opinions\" style=\"max-width: 100%;\"></a>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://camo.githubusercontent.com/866e442eb009087d10bb94a30f48b21536a92856e48412e282efa700c2773fc2/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f636f6d2e6f6c656770792f6265747465722d6d6f6e616469632d666f725f322e31322e7376673f7374796c653d666c61742d737175617265\"><img src=\"https://camo.githubusercontent.com/866e442eb009087d10bb94a30f48b21536a92856e48412e282efa700c2773fc2/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f636f6d2e6f6c656770792f6265747465722d6d6f6e616469632d666f725f322e31322e7376673f7374796c653d666c61742d737175617265\" alt=\"Maven central\" data-canonical-src=\"https://img.shields.io/maven-central/v/com.olegpy/better-monadic-for_2.12.svg?style=flat-square\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">A Scala compiler plugin to give patterns and for-comprehensions the love they deserve</p>\n<h2 dir=\"auto\"><a id=\"user-content-note-on-scala-3\" class=\"anchor\" aria-hidden=\"true\" href=\"#note-on-scala-3\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Note on Scala 3</h2>\n<p dir=\"auto\">Scala 3.0.0 natively supports the semantic changes provided by better-monadic-for under <code>-source:future</code> compiler flag. The following code is considered valid under this flag:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"for {\n  (x, given String) &lt;- IO(42 -&gt; &quot;foo&quot;)\n} yield s&quot;$x${summon[String]}&quot;\"><pre><span class=\"pl-k\">for</span> {\n  (x, <span class=\"pl-k\">given</span> <span class=\"pl-en\">String</span>) <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">-</span> <span class=\"pl-en\">IO</span>(<span class=\"pl-c1\">42</span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>foo<span class=\"pl-pds\">\"</span></span>)\n} <span class=\"pl-k\">yield</span> <span class=\"pl-k\">s</span><span class=\"pl-s\">\"</span>$x${summon[<span class=\"pl-en\">String</span>]}<span class=\"pl-s\">\"</span></pre></div>\n<p dir=\"auto\">There are no changes to <code>map</code> desugaring and value bindings inside fors still allocate tuples to my current knowledge. I don't currently have plans on rewriting plugin for Scala 3, however.</p>\n<p dir=\"auto\">See <a href=\"https://dotty.epfl.ch/docs/reference/changed-features/pattern-bindings.html\" rel=\"nofollow\">changes: pattern bindings</a> and <a href=\"https://dotty.epfl.ch/docs/reference/contextual/givens.html#pattern-bound-given-instances\" rel=\"nofollow\">contextual abstractions: pattern-bound given instances</a>.</p>\n<hr>\n<h2 dir=\"auto\"><a id=\"user-content-getting-started\" class=\"anchor\" aria-hidden=\"true\" href=\"#getting-started\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Getting started</h2>\n<p dir=\"auto\">The plugin is available on Maven Central.</p>\n<h3 dir=\"auto\"><a id=\"user-content-sbt\" class=\"anchor\" aria-hidden=\"true\" href=\"#sbt\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>sbt</h3>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"addCompilerPlugin(&quot;com.olegpy&quot; %% &quot;better-monadic-for&quot; % &quot;0.3.1&quot;)\"><pre>addCompilerPlugin(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.olegpy<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>better-monadic-for<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0.3.1<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-maven\" class=\"anchor\" aria-hidden=\"true\" href=\"#maven\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>maven</h3>\n<div class=\"highlight highlight-text-xml position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;plugin&gt;\n  &lt;groupId&gt;net.alchim31.maven&lt;/groupId&gt;\n  &lt;artifactId&gt;scala-maven-plugin&lt;/artifactId&gt;\n  &lt;configuration&gt;\n    &lt;compilerPlugins&gt;\n      &lt;compilerPlugin&gt;\n        &lt;groupId&gt;com.olegpy&lt;/groupId&gt;\n        &lt;artifactId&gt;better-monadic-for_2.13&lt;/artifactId&gt;\n        &lt;version&gt;0.3.1&lt;/version&gt;\n      &lt;/compilerPlugin&gt;\n    &lt;/compilerPlugins&gt;\n  &lt;/configuration&gt;\n&lt;/plugin&gt;\"><pre>&lt;<span class=\"pl-ent\">plugin</span>&gt;\n  &lt;<span class=\"pl-ent\">groupId</span>&gt;net.alchim31.maven&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n  &lt;<span class=\"pl-ent\">artifactId</span>&gt;scala-maven-plugin&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n  &lt;<span class=\"pl-ent\">configuration</span>&gt;\n    &lt;<span class=\"pl-ent\">compilerPlugins</span>&gt;\n      &lt;<span class=\"pl-ent\">compilerPlugin</span>&gt;\n        &lt;<span class=\"pl-ent\">groupId</span>&gt;com.olegpy&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n        &lt;<span class=\"pl-ent\">artifactId</span>&gt;better-monadic-for_2.13&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n        &lt;<span class=\"pl-ent\">version</span>&gt;0.3.1&lt;/<span class=\"pl-ent\">version</span>&gt;\n      &lt;/<span class=\"pl-ent\">compilerPlugin</span>&gt;\n    &lt;/<span class=\"pl-ent\">compilerPlugins</span>&gt;\n  &lt;/<span class=\"pl-ent\">configuration</span>&gt;\n&lt;/<span class=\"pl-ent\">plugin</span>&gt;</pre></div>\n<p dir=\"auto\">Supports Scala 2.11, 2.12, and 2.13.1</p>\n<details>\n<summary><strong>Available plugin options</strong></summary>\n<hr>\n<p dir=\"auto\">All options have form of <code>-P:bm4:$feature:$flag</code></p>\n<table>\n<thead>\n<tr>\n<th>Feature</th>\n<th>Flag (default)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Desugaring without withFilter</td>\n<td><code>-P:bm4:no-filtering:y</code></td>\n</tr>\n<tr>\n<td>Elimination of identity map</td>\n<td><code>-P:bm4:no-map-id:y</code></td>\n</tr>\n<tr>\n<td>Elimination of tuples in bindings</td>\n<td><code>-P:bm4:no-tupling:y</code></td>\n</tr>\n<tr>\n<td>Implicit definining patterns</td>\n<td><code>-P:bm4:implicit-patterns:y</code></td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">Supported values for flags:</p>\n<ul dir=\"auto\">\n<li>Disabling: <code>n</code>, <code>no</code>, <code>0</code>, <code>false</code></li>\n<li>Enabling: <code>y</code>, <code>yes</code>, <code>1</code>, <code>true</code></li>\n</ul>\n<hr>\n</details>\n<details>\n<summary><strong>Changelog</strong></summary>\n<hr>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>Changes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0.3.1</td>\n<td>Fix issues with wartremover, implicit patterns with = binds &amp; Xplugin-list flag</td>\n</tr>\n<tr>\n<td>0.3.0-M4</td>\n<td>Fix anonymous variables in Scala 2.12.7+</td>\n</tr>\n<tr>\n<td>M2, M3</td>\n<td>Fixes for implicit patterns</td>\n</tr>\n<tr>\n<td>0.3.0-M1</td>\n<td>Initial implementation of implicit patterns</td>\n</tr>\n<tr>\n<td>0.2.4</td>\n<td>Fixed: incompatibility with <a href=\"https://github.com/ThoughtWorksInc/Dsl.scala\">Dsl.scala</a></td>\n</tr>\n<tr>\n<td>0.2.3</td>\n<td>Fixed: if-guards were broken when using untupling</td>\n</tr>\n<tr>\n<td>0.2.2</td>\n<td>Fixed: destructuring within for bindings <code>(bar, baz) = foo</code></td>\n</tr>\n<tr>\n<td>0.2.1</td>\n<td>Fixed: untupling with <code>-Ywarn-unused:locals</code> causing warnings on e.g. <code>_ = println()</code>.</td>\n</tr>\n<tr>\n<td>0.2.0</td>\n<td>Added optimizations: map elimination &amp; untupling. Added plugin options.</td>\n</tr>\n<tr>\n<td>0.1.0</td>\n<td>Initial version featuring for desugaring without <code>withFilter</code>s.</td>\n</tr>\n</tbody>\n</table>\n<hr>\n</details>\n<h1 dir=\"auto\"><a id=\"user-content-features\" class=\"anchor\" aria-hidden=\"true\" href=\"#features\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Features</h1>\n<h2 dir=\"auto\"><a id=\"user-content-desugaring-for-patterns-without-withfilters\" class=\"anchor\" aria-hidden=\"true\" href=\"#desugaring-for-patterns-without-withfilters\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Desugaring <code>for</code> patterns without <code>withFilter</code>s</h2>\n<h3 dir=\"auto\"><a id=\"user-content-destructuring-either--io--task--flatmapf\" class=\"anchor\" aria-hidden=\"true\" href=\"#destructuring-either--io--task--flatmapf\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Destructuring <code>Either</code> / <code>IO</code> / <code>Task</code> / <code>FlatMap[F]</code></h3>\n<p dir=\"auto\">This plugin lets you do:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import cats.implicits._\nimport cats.effect.IO\n\ndef getCounts: IO[(Int, Int)] = ???\n\nfor {\n  (x, y) &lt;- getCounts\n} yield x + y\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">cats</span>.<span class=\"pl-en\">implicits</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">cats</span>.<span class=\"pl-en\">effect</span>.<span class=\"pl-en\">IO</span>\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">getCounts</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">IO</span>[(<span class=\"pl-en\">Int</span>, <span class=\"pl-en\">Int</span>)] <span class=\"pl-k\">=</span> <span class=\"pl-k\">???</span>\n\n<span class=\"pl-k\">for</span> {\n  (x, y) <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">-</span> getCounts\n} <span class=\"pl-k\">yield</span> x <span class=\"pl-k\">+</span> y</pre></div>\n<p dir=\"auto\">With regular Scala, this desugars to:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"getCounts\n  .withFilter((@unchecked _) match {\n     case (x, y) =&gt; true\n     case _ =&gt; false\n  }\n  .map((@unchecked _) match {\n    case (x, y) =&gt; x + y\n  }\"><pre>getCounts\n  .withFilter((<span class=\"pl-k\">@</span>unchecked _) <span class=\"pl-k\">match</span> {\n     <span class=\"pl-k\">case</span> (x, y) <span class=\"pl-k\">=&gt;</span> <span class=\"pl-c1\">true</span>\n     <span class=\"pl-k\">case</span> _ <span class=\"pl-k\">=&gt;</span> <span class=\"pl-c1\">false</span>\n  }\n  .map((<span class=\"pl-k\">@</span>unchecked _) <span class=\"pl-k\">match</span> {\n    <span class=\"pl-k\">case</span> (x, y) <span class=\"pl-k\">=&gt;</span> x <span class=\"pl-k\">+</span> y\n  }</pre></div>\n<p dir=\"auto\">Which fails to compile, because <code>IO</code> does not define <code>withFilter</code></p>\n<p dir=\"auto\">This plugin changes it to:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"getCounts\n  .map(_ match { case (x, y) =&gt; x + y })\"><pre>getCounts\n  .map(_ <span class=\"pl-k\">match</span> { <span class=\"pl-k\">case</span> (x, y) <span class=\"pl-k\">=&gt;</span> x <span class=\"pl-k\">+</span> y })</pre></div>\n<p dir=\"auto\">Removing both <code>withFilter</code> and <code>unchecked</code> on generated <code>map</code>. So the code just works.</p>\n<details>\n<summary><b>Additional Effects</b></summary>\n<h3 dir=\"auto\"><a id=\"user-content-type-ascriptions-on-lhs\" class=\"anchor\" aria-hidden=\"true\" href=\"#type-ascriptions-on-lhs\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Type ascriptions on LHS</h3>\n<p dir=\"auto\">Type ascriptions on left-hand side do not become an <code>isInstanceOf</code> check - which they do by default. E.g.</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"def getThing: IO[String] = ???\n\nfor {\n  x: String &lt;- getCounts\n} yield s&quot;Count was $x&quot;\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">getThing</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">IO</span>[<span class=\"pl-en\">String</span>] <span class=\"pl-k\">=</span> <span class=\"pl-k\">???</span>\n\n<span class=\"pl-k\">for</span> {\n  <span class=\"pl-v\">x</span>: <span class=\"pl-en\">String</span> <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">-</span> getCounts\n} <span class=\"pl-k\">yield</span> <span class=\"pl-k\">s</span><span class=\"pl-s\">\"</span><span class=\"pl-s\">Count was </span>$x<span class=\"pl-s\">\"</span></pre></div>\n<p dir=\"auto\">would desugar directly to</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"getCounts.map((x: String) =&gt; s&quot;Count was $x&quot;)\"><pre>getCounts.map((<span class=\"pl-v\">x</span>: <span class=\"pl-en\">String</span>) <span class=\"pl-k\">=&gt;</span> <span class=\"pl-k\">s</span><span class=\"pl-s\">\"</span><span class=\"pl-s\">Count was </span>$x<span class=\"pl-s\">\"</span>)</pre></div>\n<p dir=\"auto\">This also works with <code>flatMap</code> and <code>foreach</code>, of course.</p>\n<h3 dir=\"auto\"><a id=\"user-content-no-silent-truncation-of-data\" class=\"anchor\" aria-hidden=\"true\" href=\"#no-silent-truncation-of-data\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>No silent truncation of data</h3>\n<p dir=\"auto\">This example is taken from <a href=\"http://www.lihaoyi.com/post/WartsoftheScalaProgrammingLanguage.html#conflating-total-destructuring-with-partial-pattern-matching\" rel=\"nofollow\">Scala warts post</a> by @lihaoyi</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Truncates 5\nfor((a, b) &lt;- Seq(1 -&gt; 2, 3 -&gt; 4, 5)) yield a + &quot; &quot; +  b\n\n// Throws MatchError\nSeq(1 -&gt; 2, 3 -&gt; 4, 5).map{case (a, b) =&gt; a + &quot; &quot; + b}\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> Truncates 5</span>\n<span class=\"pl-k\">for</span>((a, b) <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">-</span> <span class=\"pl-en\">Seq</span>(<span class=\"pl-c1\">1</span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>)) <span class=\"pl-k\">yield</span> a <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span>  b\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Throws MatchError</span>\n<span class=\"pl-en\">Seq</span>(<span class=\"pl-c1\">1</span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>).map{<span class=\"pl-k\">case</span> (a, b) <span class=\"pl-k\">=&gt;</span> a <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> b}</pre></div>\n<p dir=\"auto\">With the plugin, both versions are equivalent and result in <code>MatchError</code></p>\n<h3 dir=\"auto\"><a id=\"user-content-match-warnings\" class=\"anchor\" aria-hidden=\"true\" href=\"#match-warnings\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Match warnings</h3>\n<p dir=\"auto\">Generators will now show exhaustivity warnings now whenever regular pattern matches would:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        import cats.syntax.option._\n\n        for (Some(x) &lt;- IO(none[Int])) yield x\"><pre>        <span class=\"pl-k\">import</span> <span class=\"pl-en\">cats</span>.<span class=\"pl-en\">syntax</span>.<span class=\"pl-en\">option</span>.<span class=\"pl-en\">_</span>\n\n        <span class=\"pl-k\">for</span> (<span class=\"pl-en\">Some</span>(x) <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">-</span> <span class=\"pl-en\">IO</span>(none[<span class=\"pl-en\">Int</span>])) <span class=\"pl-k\">yield</span> x</pre></div>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"D:\\Code\\better-monadic-for\\src\\test\\scala\\com\\olegpy\\TestFor.scala:66\n:22: match may not be exhaustive.\n[warn] It would fail on the following input: None\n[warn]         for (Some(x) &lt;- IO(none[Int])) yield x\n[warn]                      ^\"><pre><code>D:\\Code\\better-monadic-for\\src\\test\\scala\\com\\olegpy\\TestFor.scala:66\n:22: match may not be exhaustive.\n[warn] It would fail on the following input: None\n[warn]         for (Some(x) &lt;- IO(none[Int])) yield x\n[warn]                      ^\n</code></pre></div>\n</details>\n<h2 dir=\"auto\"><a id=\"user-content-final-map-optimization\" class=\"anchor\" aria-hidden=\"true\" href=\"#final-map-optimization\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Final map optimization</h2>\n<p dir=\"auto\">Eliminate calls to <code>.map</code> in comprehensions like this:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"for {\n  x &lt;- xs\n  y &lt;- getYs(x)\n} yield y\"><pre><span class=\"pl-k\">for</span> {\n  x <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">-</span> xs\n  y <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">-</span> getYs(x)\n} <span class=\"pl-k\">yield</span> y</pre></div>\n<p dir=\"auto\">Standard desugaring is</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"xs.flatMap(x =&gt; getYs(x).map(y =&gt; y))\"><pre>xs.flatMap(x <span class=\"pl-k\">=&gt;</span> getYs(x).map(y <span class=\"pl-k\">=&gt;</span> y))</pre></div>\n<p dir=\"auto\">This plugin simplifies it to</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"xs.flatMap(x =&gt; getYs(x))\"><pre>xs.flatMap(x <span class=\"pl-k\">=&gt;</span> getYs(x))</pre></div>\n<h2 dir=\"auto\"><a id=\"user-content-desugar-bindings-as-vals-instead-of-tuples\" class=\"anchor\" aria-hidden=\"true\" href=\"#desugar-bindings-as-vals-instead-of-tuples\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Desugar bindings as vals instead of tuples</h2>\n<p dir=\"auto\">Direct fix for <a href=\"https://github.com/lampepfl/dotty/issues/2573\">lampepfl/dotty#2573</a>.\nIf the binding is not used in follow-up <code>withFilter</code>, it is desugared as\nplain <code>val</code>s, saving on allocations and primitive boxing.</p>\n<h2 dir=\"auto\"><a id=\"user-content-define-implicits-in-for-comprehensions-or-matches\" class=\"anchor\" aria-hidden=\"true\" href=\"#define-implicits-in-for-comprehensions-or-matches\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Define implicits in for-comprehensions or matches</h2>\n<p dir=\"auto\">Since version 0.3.0-M1, it is possible to define implicit values inside for-comprehensions using a new keyword <code>implicit0</code>:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"case class ImplicitTest(id: String)\n\nfor {\n  x &lt;- Option(42)\n  implicit0(it: ImplicitTest) &lt;- Option(ImplicitTest(&quot;eggs&quot;))\n  _ &lt;- Option(&quot;dummy&quot;)\n  _ = &quot;dummy&quot;\n  _ = assert(implicitly[ImplicitTest] eq it)\n} yield &quot;ok&quot;\"><pre><span class=\"pl-k\">case</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">ImplicitTest</span>(<span class=\"pl-v\">id</span>: <span class=\"pl-en\">String</span>)\n\n<span class=\"pl-k\">for</span> {\n  x <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">-</span> <span class=\"pl-en\">Option</span>(<span class=\"pl-c1\">42</span>)\n  implicit0(<span class=\"pl-v\">it</span>: <span class=\"pl-en\">ImplicitTest</span>) <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">-</span> <span class=\"pl-en\">Option</span>(<span class=\"pl-en\">ImplicitTest</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>eggs<span class=\"pl-pds\">\"</span></span>))\n  _ <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">-</span> <span class=\"pl-en\">Option</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>dummy<span class=\"pl-pds\">\"</span></span>)\n  _ <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>dummy<span class=\"pl-pds\">\"</span></span>\n  _ <span class=\"pl-k\">=</span> assert(implicitly[<span class=\"pl-en\">ImplicitTest</span>] eq it)\n} <span class=\"pl-k\">yield</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ok<span class=\"pl-pds\">\"</span></span></pre></div>\n<p dir=\"auto\">In current version (0.3.0) it's required to specify a type annotation in a pattern with <code>implicit0</code>.</p>\n<p dir=\"auto\">It also works in regular match clauses:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"(1, &quot;foo&quot;, ImplicitTest(&quot;eggs&quot;)) match {\n  case (_, &quot;foo&quot;, implicit0(it: ImplicitTest)) =&gt; assert(implicitly[ImplicitTest] eq it)\n}\"><pre>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>foo<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-en\">ImplicitTest</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>eggs<span class=\"pl-pds\">\"</span></span>)) <span class=\"pl-k\">match</span> {\n  <span class=\"pl-k\">case</span> (_, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>foo<span class=\"pl-pds\">\"</span></span>, implicit0(<span class=\"pl-v\">it</span>: <span class=\"pl-en\">ImplicitTest</span>)) <span class=\"pl-k\">=&gt;</span> assert(implicitly[<span class=\"pl-en\">ImplicitTest</span>] eq it)\n}</pre></div>\n<h1 dir=\"auto\"><a id=\"user-content-notes\" class=\"anchor\" aria-hidden=\"true\" href=\"#notes\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Notes</h1>\n<ul dir=\"auto\">\n<li>This plugin reserves one extra keyword, <code>implicit0</code>, if corresponding option for implicit patterns is enabled (which is by default).</li>\n<li>Regular <code>if</code> guards are not affected, only generator arrows.</li>\n</ul>\n<h1 dir=\"auto\"><a id=\"user-content-license\" class=\"anchor\" aria-hidden=\"true\" href=\"#license\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>License</h1>\n<p dir=\"auto\">MIT</p>\n</article></div>",
    "contributors" : [
      {
        "login" : "oleg-py",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/4143670?v=4",
        "url" : "https://api.github.com/users/oleg-py",
        "contributions" : 65
      },
      {
        "login" : "rossabaker",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/142698?v=4",
        "url" : "https://api.github.com/users/rossabaker",
        "contributions" : 5
      },
      {
        "login" : "kubukoz",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/894884?v=4",
        "url" : "https://api.github.com/users/kubukoz",
        "contributions" : 3
      },
      {
        "login" : "jhnsmth",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/15067848?v=4",
        "url" : "https://api.github.com/users/jhnsmth",
        "contributions" : 1
      },
      {
        "login" : "coltfred",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/587319?v=4",
        "url" : "https://api.github.com/users/coltfred",
        "contributions" : 1
      },
      {
        "login" : "Daenyth",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/14644?v=4",
        "url" : "https://api.github.com/users/Daenyth",
        "contributions" : 1
      },
      {
        "login" : "BalmungSan",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/11336950?v=4",
        "url" : "https://api.github.com/users/BalmungSan",
        "contributions" : 1
      },
      {
        "login" : "SethTisue",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/161079?v=4",
        "url" : "https://api.github.com/users/SethTisue",
        "contributions" : 1
      },
      {
        "login" : "xuwei-k",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/389787?v=4",
        "url" : "https://api.github.com/users/xuwei-k",
        "contributions" : 1
      },
      {
        "login" : "Atry",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/601530?v=4",
        "url" : "https://api.github.com/users/Atry",
        "contributions" : 1
      }
    ],
    "commits" : 80,
    "topics" : [
      "compiler-plugin",
      "functional-programming",
      "for-comprehension",
      "optimization",
      "scala",
      "desugar"
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "chatroom" : null,
    "openIssues" : [
      {
        "number" : 50,
        "title" : "Unused warning on scala 2.13.5",
        "url" : "https://github.com/oleg-py/better-monadic-for/issues/50"
      },
      {
        "number" : 49,
        "title" : "Variable overflow when using more than 21 assignments",
        "url" : "https://github.com/oleg-py/better-monadic-for/issues/49"
      },
      {
        "number" : 43,
        "title" : "For-comp with no yield should use .foreach",
        "url" : "https://github.com/oleg-py/better-monadic-for/issues/43"
      },
      {
        "number" : 42,
        "title" : "Alternative `flatMap` possible?",
        "url" : "https://github.com/oleg-py/better-monadic-for/issues/42"
      },
      {
        "number" : 39,
        "title" : "setup travis-ci",
        "url" : "https://github.com/oleg-py/better-monadic-for/issues/39"
      },
      {
        "number" : 37,
        "title" : "Scala 2.11: local val in value $anonfun is never used",
        "url" : "https://github.com/oleg-py/better-monadic-for/issues/37"
      },
      {
        "number" : 32,
        "title" : "\"parameter value .. is never used\" with `if` in `for`",
        "url" : "https://github.com/oleg-py/better-monadic-for/issues/32"
      },
      {
        "number" : 23,
        "title" : "Statements must return unit",
        "url" : "https://github.com/oleg-py/better-monadic-for/issues/23"
      }
    ],
    "scalaPercentage" : null
  },
  "settings" : {
    "defaultStableVersion" : true,
    "defaultArtifact" : null,
    "strictVersions" : false,
    "customScalaDoc" : null,
    "documentationLinks" : [
    ],
    "deprecated" : false,
    "contributorsWanted" : false,
    "artifactDeprecations" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "scala-language-extensions",
    "beginnerIssuesLabel" : null
  }
}