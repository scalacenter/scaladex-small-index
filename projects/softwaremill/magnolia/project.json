{
  "organization" : "softwaremill",
  "repository" : "magnolia",
  "creationDate" : 1497267566000,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1723548676552
    }
  },
  "githubInfo" : {
    "homepage" : "https://softwaremill.com/open-source/",
    "description" : "Easy, fast, transparent generic derivation of typeclass instances",
    "logo" : "https://avatars.githubusercontent.com/u/322765?v=4",
    "stars" : 759,
    "forks" : 116,
    "watchers" : 46,
    "issues" : 63,
    "creationDate" : 1496785385000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"readme.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/softwaremill/magnolia/raw/scala3/banner.jpg\"><img src=\"https://github.com/softwaremill/magnolia/raw/scala3/banner.jpg\" alt=\"Magnolia\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a href=\"https://github.com/softwaremill/magnolia/actions\"><img alt=\"GitHub Workflow\" src=\"https://camo.githubusercontent.com/55d70afe9c3124a67123e82d1adafadf8a40136e8754f8f8b19ca51df83bd55d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f736f6674776172656d696c6c2f6d61676e6f6c69612f63692e796d6c3f6272616e63683d7363616c6133267374796c653d666f722d7468652d6261646765\" height=\"24\" data-canonical-src=\"https://img.shields.io/github/actions/workflow/status/softwaremill/magnolia/ci.yml?branch=scala3&amp;style=for-the-badge\" style=\"max-width: 100%;\"></a>\n<a href=\"https://softwaremill.community/c/magnolia\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/b3d4612ca33323c6589d81b45881395862ba0fdf18936e70f44060a103196aca/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446973636f757273652d61736b2532307175657374696f6e2d626c75653f7374796c653d666f722d7468652d6261646765\" height=\"24\" data-canonical-src=\"https://img.shields.io/badge/Discourse-ask%20question-blue?style=for-the-badge\" style=\"max-width: 100%;\"></a>\n<a href=\"https://index.scala-lang.org/softwaremill/magnolia/magnolia\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/764a32f49ff8f0de10e12bca0b5b1bf434c512b390488b66b07472685f4f642a/68747470733a2f2f696e6465782e7363616c612d6c616e672e6f72672f736f6674776172656d696c6c2f6d61676e6f6c69612f6d61676e6f6c69612f6c61746573742d62792d7363616c612d76657273696f6e2e7376673f636f6c6f723d323436356364267374796c653d666f722d7468652d6261646765\" height=\"24\" data-canonical-src=\"https://index.scala-lang.org/softwaremill/magnolia/magnolia/latest-by-scala-version.svg?color=2465cd&amp;style=for-the-badge\" style=\"max-width: 100%;\"></a></p>\n<div class=\"markdown-heading\" dir=\"auto\"><h1 class=\"heading-element\" dir=\"auto\">Magnolia</h1><a id=\"user-content-magnolia\" class=\"anchor\" aria-label=\"Permalink: Magnolia\" href=\"#magnolia\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\"><strong>Magnolia</strong> is a generic macro for automatic materialization of typeclasses for datatypes composed from product types (e.g. case classes) and coproduct types (e.g. enums). It supports recursively-defined datatypes out-of-the-box, and incurs no significant time-penalty during compilation.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Features</h2><a id=\"user-content-features\" class=\"anchor\" aria-label=\"Permalink: Features\" href=\"#features\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<ul dir=\"auto\">\n<li>derives typeclasses for case classes, case objects and sealed traits</li>\n<li>offers a lightweight syntax for writing derivations without needing to understand complex parts of Scala</li>\n<li>builds upon Scala 3's built-in generic derivation</li>\n<li>works with recursive and mutually-recursive definitions</li>\n<li>supports parameterized ADTs (GADTs), including those in recursive types</li>\n<li>supports typeclasses whose generic type parameter is used in either covariant and contravariant positions</li>\n</ul>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Getting Started</h2><a id=\"user-content-getting-started\" class=\"anchor\" aria-label=\"Permalink: Getting Started\" href=\"#getting-started\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">Given an ADT such as,</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"enum Tree[+T] derives Print:\n  case Branch(left: Tree[T], right: Tree[T])\n  case Leaf(value: T)\"><pre><span class=\"pl-k\">enum</span> <span class=\"pl-en\">Tree</span>[<span class=\"pl-k\">+</span><span class=\"pl-en\">T</span>] <span class=\"pl-k\">derives</span> <span class=\"pl-en\">Print</span><span class=\"pl-k\">:</span>\n  <span class=\"pl-k\">case</span> <span class=\"pl-en\">Branch</span>(<span class=\"pl-v\">left</span>: <span class=\"pl-en\">Tree</span>[<span class=\"pl-en\">T</span>], <span class=\"pl-v\">right</span>: <span class=\"pl-en\">Tree</span>[<span class=\"pl-en\">T</span>])\n  <span class=\"pl-k\">case</span> <span class=\"pl-en\">Leaf</span>(<span class=\"pl-v\">value</span>: <span class=\"pl-en\">T</span>)</pre></div>\n<p dir=\"auto\">and provided a given instance of <code>Print[Int]</code> is in scope, and a Magnolia derivation for the <code>Print</code> typeclass\nhas been provided, we can automatically derive given typeclass instances of <code>Print[Tree[Int]]</code> on-demand, like\nso,</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Tree.Branch(Tree.Branch(Tree.Leaf(1), Tree.Leaf(2)), Tree.Leaf(3)).print\"><pre><span class=\"pl-en\">Tree</span>.<span class=\"pl-en\">Branch</span>(<span class=\"pl-en\">Tree</span>.<span class=\"pl-en\">Branch</span>(<span class=\"pl-en\">Tree</span>.<span class=\"pl-en\">Leaf</span>(<span class=\"pl-c1\">1</span>), <span class=\"pl-en\">Tree</span>.<span class=\"pl-en\">Leaf</span>(<span class=\"pl-c1\">2</span>)), <span class=\"pl-en\">Tree</span>.<span class=\"pl-en\">Leaf</span>(<span class=\"pl-c1\">3</span>)).print</pre></div>\n<p dir=\"auto\">Typeclass authors may provide Magnolia derivations in the typeclass's companion object, but it is easy to create\nyour own.</p>\n<p dir=\"auto\">Creating a generic derivation with Magnolia requires implementing two methods on <code>magnolia1.Derivation</code>:</p>\n<ul dir=\"auto\">\n<li><code>join()</code> : create typeclasses for case classes ('product types')</li>\n<li><code>split()</code> : create typeclasses for sealed-traits/enums ('sum types')</li>\n</ul>\n<div class=\"markdown-heading\" dir=\"auto\"><h3 class=\"heading-element\" dir=\"auto\">Example derivations</h3><a id=\"user-content-example-derivations\" class=\"anchor\" aria-label=\"Permalink: Example derivations\" href=\"#example-derivations\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">There are many examples in the   <a href=\"examples/src/main/scala/magnolia1/examples\"><code>examples</code></a> sub-project.</p>\n<p dir=\"auto\">The definition of a <code>Print</code> typeclass with generic derivation might look like this\n(note we're using the <a href=\"https://www.scala-lang.org/news/2.12.0/#lambda-syntax-for-sam-types\" rel=\"nofollow\">Lambda syntax for Single Abstract Method types</a>\nto instantiate the <code>Print</code> instances in <code>join</code> &amp; <code>split</code> - that's possible because\n<code>Print</code> has only a single abstract method, <code>print</code>):</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import magnolia1.*\n\ntrait Print[T] {\n  extension (x: T) def print: String\n}\n\nobject Print extends AutoDerivation[Print]:\n  def join[T](ctx: CaseClass[Print, T]): Print[T] = value =&gt;\n    ctx.params.map { param =&gt;\n      param.typeclass.print(param.deref(value))\n    }.mkString(s&quot;${ctx.typeInfo.short}(&quot;, &quot;,&quot;, &quot;)&quot;)\n\n  override def split[T](ctx: SealedTrait[Print, T]): Print[T] = value =&gt;\n    ctx.choose(value) { sub =&gt; sub.typeclass.print(sub.cast(value)) }\n  \n  given Print[Int] = _.toString\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">magnolia1</span>.<span class=\"pl-en\">*</span>\n\n<span class=\"pl-k\">trait</span> <span class=\"pl-en\">Print</span>[<span class=\"pl-en\">T</span>] {\n  <span class=\"pl-k\">extension</span> (<span class=\"pl-v\">x</span>: <span class=\"pl-en\">T</span>) <span class=\"pl-k\">def</span> <span class=\"pl-en\">print</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">String</span>\n}\n\n<span class=\"pl-k\">object</span> <span class=\"pl-en\">Print</span> <span class=\"pl-k\">extends</span> <span class=\"pl-en\">AutoDerivation</span>[<span class=\"pl-en\">Print</span>]<span class=\"pl-k\">:</span>\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">join</span>[<span class=\"pl-en\">T</span>](<span class=\"pl-v\">ctx</span>: <span class=\"pl-en\">CaseClass</span>[<span class=\"pl-en\">Print</span>, <span class=\"pl-en\">T</span>])<span class=\"pl-k\">:</span> <span class=\"pl-en\">Print</span>[<span class=\"pl-en\">T</span>] <span class=\"pl-k\">=</span> value <span class=\"pl-k\">=&gt;</span>\n    ctx.params.map { param <span class=\"pl-k\">=&gt;</span>\n      param.typeclass.print(param.deref(value))\n    }.mkString(<span class=\"pl-k\">s</span><span class=\"pl-s\">\"</span>${ctx.typeInfo.short}<span class=\"pl-s\">(</span><span class=\"pl-s\">\"</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>,<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>)<span class=\"pl-pds\">\"</span></span>)\n\n  <span class=\"pl-k\">override</span> <span class=\"pl-k\">def</span> <span class=\"pl-en\">split</span>[<span class=\"pl-en\">T</span>](<span class=\"pl-v\">ctx</span>: <span class=\"pl-en\">SealedTrait</span>[<span class=\"pl-en\">Print</span>, <span class=\"pl-en\">T</span>])<span class=\"pl-k\">:</span> <span class=\"pl-en\">Print</span>[<span class=\"pl-en\">T</span>] <span class=\"pl-k\">=</span> value <span class=\"pl-k\">=&gt;</span>\n    ctx.choose(value) { sub <span class=\"pl-k\">=&gt;</span> sub.typeclass.print(sub.cast(value)) }\n  \n  <span class=\"pl-k\">given</span> <span class=\"pl-en\">Print</span>[<span class=\"pl-en\">Int</span>] <span class=\"pl-k\">=</span> _.toString</pre></div>\n<p dir=\"auto\">The <code>AutoDerivation</code> trait provides a given <code>autoDerived</code> method which will attempt to construct a corresponding typeclass\ninstance for the type passed to it. Importing <code>Print.autoDerived</code> as defined in the example above will make generic\nderivation for <code>Print</code> typeclasses available in the scope of the import.</p>\n<p dir=\"auto\">While any object may be used to define a derivation, if you control the typeclass you are deriving for, the\ncompanion object of the typeclass is the obvious choice since it generic derivations for that typeclass will\nbe automatically available for consideration during contextual search.</p>\n<p dir=\"auto\">If you don't want to make the automatic derivation available in the given scope, consider using the <code>Derivation</code> trait which provides semi-auto derivation with <code>derived</code> method, but also brings some additional limitations.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Limitations</h2><a id=\"user-content-limitations\" class=\"anchor\" aria-label=\"Permalink: Limitations\" href=\"#limitations\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">For accessing default values for case class parameters we recommend compilation with <code>-Yretain-trees</code> on.</p>\n<p dir=\"auto\">For a recursive structures it is required to assign the derived value to an implicit variable e.g.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"given instance: SemiPrint[Recursive] = SemiPrint.derived\"><pre><span class=\"pl-k\">given</span> <span class=\"pl-en\">instance</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">SemiPrint</span>[<span class=\"pl-en\">Recursive</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">SemiPrint</span>.derived</pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Availability</h2><a id=\"user-content-availability\" class=\"anchor\" aria-label=\"Permalink: Availability\" href=\"#availability\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">For Scala 3:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"val magnolia = &quot;com.softwaremill.magnolia1_3&quot; %% &quot;magnolia&quot; % &quot;1.3.7&quot;\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-v\">magnolia</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.softwaremill.magnolia1_3<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>magnolia<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.3.7<span class=\"pl-pds\">\"</span></span></pre></div>\n<p dir=\"auto\">For Scala 2, see the <a href=\"https://github.com/softwaremill/magnolia/tree/scala2\">scala2 branch</a>.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Package and artifact naming, versioning</h2><a id=\"user-content-package-and-artifact-naming-versioning\" class=\"anchor\" aria-label=\"Permalink: Package and artifact naming, versioning\" href=\"#package-and-artifact-naming-versioning\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">The main magnolia package is <code>magnolia1</code>, so that magnolia 1.x can be used alongside magnolia 0.17 (which are binary-incompatible).\nFuture major releases of magnolia can change the package name for the same reason.</p>\n<p dir=\"auto\">The group id for magnolia follows the naming scheme: <code>com.softwaremill.magnolia[major version]_[scala major version]</code>.\nThe scala major version suffix is necessary to allow evolving and publishing versions for Scala 2 &amp; Scala 3 independently.\nThe magnolia major version is included for consistency with the package name, and so that future major releases may be\nused alongside this release.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Contributing</h2><a id=\"user-content-contributing\" class=\"anchor\" aria-label=\"Permalink: Contributing\" href=\"#contributing\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">Contributors to Magnolia are welcome and encouraged. New contributors may like to look for issues marked\n<a href=\"https://github.com/softwaremill/magnolia/labels/good%20first%20issue\"><img alt=\"label: good first issue\" src=\"https://camo.githubusercontent.com/3a19a4279ee8530405c3e9a740de0bbc26b3dda4ec207247ff1bb45d773e9221/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d676f6f64253230666972737425323069737375652d3637623664302e737667\" valign=\"middle\" data-canonical-src=\"https://img.shields.io/badge/-good%20first%20issue-67b6d0.svg\" style=\"max-width: 100%;\"></a>.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Credits</h2><a id=\"user-content-credits\" class=\"anchor\" aria-label=\"Permalink: Credits\" href=\"#credits\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">Magnolia was originally designed and developed by <a href=\"https://github.com/propensive\">Jon Pretty</a>, and is currently\nmaintained by <a href=\"https://softwaremill.com\" rel=\"nofollow\">SoftwareMill</a>.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">License</h2><a id=\"user-content-license\" class=\"anchor\" aria-label=\"Permalink: License\" href=\"#license\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">Magnolia is made available under the <a href=\"/license.md\">Apache 2.0 License</a>.</p>\n</article></div>",
    "contributors" : [
      {
        "login" : "propensive",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1024588?v=4",
        "url" : "https://github.com/propensive",
        "contributions" : 217
      },
      {
        "login" : "adamw",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/60503?v=4",
        "url" : "https://github.com/adamw",
        "contributions" : 137
      },
      {
        "login" : "mergify[bot]",
        "avatarUrl" : "https://avatars.githubusercontent.com/in/10562?v=4",
        "url" : "https://github.com/apps/mergify",
        "contributions" : 82
      },
      {
        "login" : "scala-steward",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/43047562?v=4",
        "url" : "https://github.com/scala-steward",
        "contributions" : 39
      },
      {
        "login" : "joroKr21",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2218841?v=4",
        "url" : "https://github.com/joroKr21",
        "contributions" : 38
      },
      {
        "login" : "KacperFKorban",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/39772805?v=4",
        "url" : "https://github.com/KacperFKorban",
        "contributions" : 30
      },
      {
        "login" : "micsza",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/22705075?v=4",
        "url" : "https://github.com/micsza",
        "contributions" : 27
      },
      {
        "login" : "fommil",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1914041?v=4",
        "url" : "https://github.com/fommil",
        "contributions" : 18
      },
      {
        "login" : "kciesielski",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1413553?v=4",
        "url" : "https://github.com/kciesielski",
        "contributions" : 11
      },
      {
        "login" : "OlegYch",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/268312?v=4",
        "url" : "https://github.com/OlegYch",
        "contributions" : 9
      },
      {
        "login" : "shadaj",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/543055?v=4",
        "url" : "https://github.com/shadaj",
        "contributions" : 9
      },
      {
        "login" : "softwaremill-ci",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1453312?v=4",
        "url" : "https://github.com/softwaremill-ci",
        "contributions" : 9
      },
      {
        "login" : "kubinio123",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/78345873?v=4",
        "url" : "https://github.com/kubinio123",
        "contributions" : 9
      },
      {
        "login" : "jto",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/197582?v=4",
        "url" : "https://github.com/jto",
        "contributions" : 9
      },
      {
        "login" : "Andrapyre",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/42009361?v=4",
        "url" : "https://github.com/Andrapyre",
        "contributions" : 9
      },
      {
        "login" : "sirthias",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/135347?v=4",
        "url" : "https://github.com/sirthias",
        "contributions" : 8
      },
      {
        "login" : "xuwei-k",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/389787?v=4",
        "url" : "https://github.com/xuwei-k",
        "contributions" : 8
      },
      {
        "login" : "kevinwright",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/86698?v=4",
        "url" : "https://github.com/kevinwright",
        "contributions" : 6
      },
      {
        "login" : "katlasik",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/20473972?v=4",
        "url" : "https://github.com/katlasik",
        "contributions" : 5
      },
      {
        "login" : "mbore",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/22884381?v=4",
        "url" : "https://github.com/mbore",
        "contributions" : 4
      },
      {
        "login" : "krzemin",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2477704?v=4",
        "url" : "https://github.com/krzemin",
        "contributions" : 4
      },
      {
        "login" : "Pask423",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/59844835?v=4",
        "url" : "https://github.com/Pask423",
        "contributions" : 4
      },
      {
        "login" : "ruippeixotog",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/613493?v=4",
        "url" : "https://github.com/ruippeixotog",
        "contributions" : 4
      },
      {
        "login" : "ghostbuster91",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/5662622?v=4",
        "url" : "https://github.com/ghostbuster91",
        "contributions" : 4
      },
      {
        "login" : "jodersky",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1007012?v=4",
        "url" : "https://github.com/jodersky",
        "contributions" : 3
      },
      {
        "login" : "leandrob13",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/5148173?v=4",
        "url" : "https://github.com/leandrob13",
        "contributions" : 3
      },
      {
        "login" : "iRevive",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/6395483?v=4",
        "url" : "https://github.com/iRevive",
        "contributions" : 3
      },
      {
        "login" : "RafalSumislawski",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/9465998?v=4",
        "url" : "https://github.com/RafalSumislawski",
        "contributions" : 3
      },
      {
        "login" : "jatcwang",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/4957161?v=4",
        "url" : "https://github.com/jatcwang",
        "contributions" : 2
      },
      {
        "login" : "sksamuel",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/743706?v=4",
        "url" : "https://github.com/sksamuel",
        "contributions" : 2
      },
      {
        "login" : "WojciechMazur",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/19353690?v=4",
        "url" : "https://github.com/WojciechMazur",
        "contributions" : 2
      },
      {
        "login" : "ghik",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1022675?v=4",
        "url" : "https://github.com/ghik",
        "contributions" : 2
      },
      {
        "login" : "rtyley",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/52038?v=4",
        "url" : "https://github.com/rtyley",
        "contributions" : 2
      },
      {
        "login" : "kubukoz",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/894884?v=4",
        "url" : "https://github.com/kubukoz",
        "contributions" : 2
      },
      {
        "login" : "jfwilson",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/7857916?v=4",
        "url" : "https://github.com/jfwilson",
        "contributions" : 2
      },
      {
        "login" : "neko-kai",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/450507?v=4",
        "url" : "https://github.com/neko-kai",
        "contributions" : 2
      },
      {
        "login" : "kyri-petrou",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/67301607?v=4",
        "url" : "https://github.com/kyri-petrou",
        "contributions" : 2
      },
      {
        "login" : "note",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/345056?v=4",
        "url" : "https://github.com/note",
        "contributions" : 2
      },
      {
        "login" : "RustedBones",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2845540?v=4",
        "url" : "https://github.com/RustedBones",
        "contributions" : 2
      },
      {
        "login" : "YaroslavSagach",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/12293639?v=4",
        "url" : "https://github.com/YaroslavSagach",
        "contributions" : 1
      },
      {
        "login" : "xplosunn",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/7125555?v=4",
        "url" : "https://github.com/xplosunn",
        "contributions" : 1
      },
      {
        "login" : "etaty",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/461170?v=4",
        "url" : "https://github.com/etaty",
        "contributions" : 1
      },
      {
        "login" : "shoito",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/37051?v=4",
        "url" : "https://github.com/shoito",
        "contributions" : 1
      },
      {
        "login" : "pgrandjean",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2611255?v=4",
        "url" : "https://github.com/pgrandjean",
        "contributions" : 1
      },
      {
        "login" : "ivan-klass",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2673108?v=4",
        "url" : "https://github.com/ivan-klass",
        "contributions" : 1
      },
      {
        "login" : "adampauls",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1243668?v=4",
        "url" : "https://github.com/adampauls",
        "contributions" : 1
      },
      {
        "login" : "yanns",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/51669?v=4",
        "url" : "https://github.com/yanns",
        "contributions" : 1
      },
      {
        "login" : "vpavkin",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/410508?v=4",
        "url" : "https://github.com/vpavkin",
        "contributions" : 1
      },
      {
        "login" : "gitter-badger",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/8518239?v=4",
        "url" : "https://github.com/gitter-badger",
        "contributions" : 1
      },
      {
        "login" : "SethTisue",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/161079?v=4",
        "url" : "https://github.com/SethTisue",
        "contributions" : 1
      },
      {
        "login" : "missingfaktor",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1016826?v=4",
        "url" : "https://github.com/missingfaktor",
        "contributions" : 1
      },
      {
        "login" : "lemastero",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/10901543?v=4",
        "url" : "https://github.com/lemastero",
        "contributions" : 1
      },
      {
        "login" : "pjrt",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1610164?v=4",
        "url" : "https://github.com/pjrt",
        "contributions" : 1
      },
      {
        "login" : "mrdziuban",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/4718399?v=4",
        "url" : "https://github.com/mrdziuban",
        "contributions" : 1
      },
      {
        "login" : "mkrzemien",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/6084062?v=4",
        "url" : "https://github.com/mkrzemien",
        "contributions" : 1
      },
      {
        "login" : "lukaszlenart",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/170103?v=4",
        "url" : "https://github.com/lukaszlenart",
        "contributions" : 1
      },
      {
        "login" : "loicdescotte",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/638150?v=4",
        "url" : "https://github.com/loicdescotte",
        "contributions" : 1
      },
      {
        "login" : "landerlo",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2878996?v=4",
        "url" : "https://github.com/landerlo",
        "contributions" : 1
      },
      {
        "login" : "regadas",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/163899?v=4",
        "url" : "https://github.com/regadas",
        "contributions" : 1
      },
      {
        "login" : "densh",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/320966?v=4",
        "url" : "https://github.com/densh",
        "contributions" : 1
      },
      {
        "login" : "anne-decusatis",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/6568710?v=4",
        "url" : "https://github.com/anne-decusatis",
        "contributions" : 1
      },
      {
        "login" : "alexandru",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/11753?v=4",
        "url" : "https://github.com/alexandru",
        "contributions" : 1
      }
    ],
    "commits" : 757,
    "topics" : [
      "datatypes",
      "typeclasses",
      "generic-programming",
      "typeclass",
      "magnolia-derivation",
      "typeclass-derivation",
      "scala",
      "derives-typeclasses",
      "generic-derivation",
      "implicit-search"
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "openIssues" : [
      {
        "number" : 520,
        "title" : "Performance regression on scala 3.4.0",
        "url" : "https://github.com/softwaremill/magnolia/issues/520"
      },
      {
        "number" : 514,
        "title" : "Does Magnolia 1 for Scala 2 support getting the original index of a subtype in a sealed trait?",
        "url" : "https://github.com/softwaremill/magnolia/issues/514"
      },
      {
        "number" : 510,
        "title" : "Typeclass Different from the Derived type",
        "url" : "https://github.com/softwaremill/magnolia/issues/510"
      },
      {
        "number" : 503,
        "title" : "Support heterogenous typeclass derivation",
        "url" : "https://github.com/softwaremill/magnolia/issues/503"
      },
      {
        "number" : 491,
        "title" : "Annotaions that are attached to the enum elements are not visible",
        "url" : "https://github.com/softwaremill/magnolia/issues/491"
      },
      {
        "number" : 475,
        "title" : "typeinfo is error-prone ",
        "url" : "https://github.com/softwaremill/magnolia/issues/475"
      },
      {
        "number" : 472,
        "title" : "[bug] type arguments can't be determined from Any",
        "url" : "https://github.com/softwaremill/magnolia/issues/472"
      },
      {
        "number" : 470,
        "title" : "Question: Scala 3 automatic derivation",
        "url" : "https://github.com/softwaremill/magnolia/issues/470"
      },
      {
        "number" : 466,
        "title" : "Type classes for parameter are not lazy",
        "url" : "https://github.com/softwaremill/magnolia/issues/466"
      },
      {
        "number" : 464,
        "title" : "StackOverflowException for contra-variant type-class",
        "url" : "https://github.com/softwaremill/magnolia/issues/464"
      },
      {
        "number" : 458,
        "title" : "Magnolia interface unification for Scala 2 and Scala 3 versions",
        "url" : "https://github.com/softwaremill/magnolia/issues/458"
      },
      {
        "number" : 456,
        "title" : "Possibly improve how magnolia checks that an enum is not an ADT",
        "url" : "https://github.com/softwaremill/magnolia/issues/456"
      },
      {
        "number" : 449,
        "title" : "\"Internal error: unable to find the outer accessor symbol of ...\" when deriving instance for a nested type",
        "url" : "https://github.com/softwaremill/magnolia/issues/449"
      },
      {
        "number" : 439,
        "title" : "Add more typeclass examples and test cases.",
        "url" : "https://github.com/softwaremill/magnolia/issues/439"
      },
      {
        "number" : 424,
        "title" : "Recursive derivation not working",
        "url" : "https://github.com/softwaremill/magnolia/issues/424"
      },
      {
        "number" : 420,
        "title" : "Add `def rawConstruct(fieldValues: Array[Any]): Type` for perf",
        "url" : "https://github.com/softwaremill/magnolia/issues/420"
      },
      {
        "number" : 416,
        "title" : "Multiple Parameter Lists",
        "url" : "https://github.com/softwaremill/magnolia/issues/416"
      },
      {
        "number" : 402,
        "title" : "Null typeclass for Param in automatic derivation",
        "url" : "https://github.com/softwaremill/magnolia/issues/402"
      },
      {
        "number" : 401,
        "title" : "Regression in recursive data types derivation",
        "url" : "https://github.com/softwaremill/magnolia/issues/401"
      },
      {
        "number" : 396,
        "title" : "macro implementations cannot have implicit parameters other than WeakTypeTag evidences",
        "url" : "https://github.com/softwaremill/magnolia/issues/396"
      },
      {
        "number" : 374,
        "title" : "method is declared as erased, but is in fact used",
        "url" : "https://github.com/softwaremill/magnolia/issues/374"
      },
      {
        "number" : 370,
        "title" : "Derivation for class with collection field",
        "url" : "https://github.com/softwaremill/magnolia/issues/370"
      },
      {
        "number" : 336,
        "title" : "How to use auto-derivation with contravariant TC",
        "url" : "https://github.com/softwaremill/magnolia/issues/336"
      },
      {
        "number" : 324,
        "title" : "Is it possible to intentionally fail at compile time?",
        "url" : "https://github.com/softwaremill/magnolia/issues/324"
      },
      {
        "number" : 316,
        "title" : "Investigate how new Scala3 types can be supported",
        "url" : "https://github.com/softwaremill/magnolia/issues/316"
      },
      {
        "number" : 310,
        "title" : "Consider not using Mirrors for derivation, so that multi-level hierarchies can be suppored",
        "url" : "https://github.com/softwaremill/magnolia/issues/310"
      },
      {
        "number" : 297,
        "title" : "Exclude params and cons from the derivation based on annotations",
        "url" : "https://github.com/softwaremill/magnolia/issues/297"
      },
      {
        "number" : 296,
        "title" : "Missing features for Scala 3",
        "url" : "https://github.com/softwaremill/magnolia/issues/296"
      },
      {
        "number" : 294,
        "title" : "Scala 3 caveats",
        "url" : "https://github.com/softwaremill/magnolia/issues/294"
      },
      {
        "number" : 292,
        "title" : "Better error messages",
        "url" : "https://github.com/softwaremill/magnolia/issues/292"
      },
      {
        "number" : 288,
        "title" : "Support typeclasses for types with * -> * kind in Scala 3",
        "url" : "https://github.com/softwaremill/magnolia/issues/288"
      },
      {
        "number" : 277,
        "title" : "forward reference issue when using exported instance of contravariant type class",
        "url" : "https://github.com/softwaremill/magnolia/issues/277"
      },
      {
        "number" : 267,
        "title" : "Derive a typeclass for sealed families of case objects only",
        "url" : "https://github.com/softwaremill/magnolia/issues/267"
      },
      {
        "number" : 256,
        "title" : "consider merging `ReadOnly...` APIs",
        "url" : "https://github.com/softwaremill/magnolia/issues/256"
      },
      {
        "number" : 252,
        "title" : "Defining class within parent's companion object breaks magnolia implicit resolution",
        "url" : "https://github.com/softwaremill/magnolia/issues/252"
      },
      {
        "number" : 242,
        "title" : "Spurious compilation errors",
        "url" : "https://github.com/softwaremill/magnolia/issues/242"
      },
      {
        "number" : 239,
        "title" : "Support @implicitNotFound errors",
        "url" : "https://github.com/softwaremill/magnolia/issues/239"
      },
      {
        "number" : 238,
        "title" : "Wish list: Support inlined dispatch/combine calls",
        "url" : "https://github.com/softwaremill/magnolia/issues/238"
      },
      {
        "number" : 216,
        "title" : "Intermittent runtime StackOverflowError with multi-level sealed hierarchy",
        "url" : "https://github.com/softwaremill/magnolia/issues/216"
      },
      {
        "number" : 213,
        "title" : "Best way to deal with ambiguous implicit values with other libraries w.r.t. List, Option, etc?",
        "url" : "https://github.com/softwaremill/magnolia/issues/213"
      },
      {
        "number" : 172,
        "title" : "Given a sealed trait, expose all of its case class subtypes's names in ctx in dispatch function",
        "url" : "https://github.com/softwaremill/magnolia/issues/172"
      },
      {
        "number" : 163,
        "title" : "@transient not picked up in annotatations array",
        "url" : "https://github.com/softwaremill/magnolia/issues/163"
      },
      {
        "number" : 144,
        "title" : "Example with `default` doesn't compile for me",
        "url" : "https://github.com/softwaremill/magnolia/issues/144"
      },
      {
        "number" : 140,
        "title" : "Accumulate errors for all missing implicits",
        "url" : "https://github.com/softwaremill/magnolia/issues/140"
      },
      {
        "number" : 138,
        "title" : "Classes with a companion object and private constructor are not supported",
        "url" : "https://github.com/softwaremill/magnolia/issues/138"
      },
      {
        "number" : 137,
        "title" : "Support Java enums",
        "url" : "https://github.com/softwaremill/magnolia/issues/137"
      },
      {
        "number" : 135,
        "title" : "Derived typeclasses for types with Java annotations fail at runtime",
        "url" : "https://github.com/softwaremill/magnolia/issues/135"
      },
      {
        "number" : 107,
        "title" : "Separate exported instance type and internal dispatch/combine type",
        "url" : "https://github.com/softwaremill/magnolia/issues/107"
      },
      {
        "number" : 106,
        "title" : "Avoid unmanaged dependencies",
        "url" : "https://github.com/softwaremill/magnolia/issues/106"
      },
      {
        "number" : 105,
        "title" : "[Low priority] Option to provide semantics identical to circe semiauto",
        "url" : "https://github.com/softwaremill/magnolia/issues/105"
      },
      {
        "number" : 88,
        "title" : "[Circe] Add a way to skip dispatch over intermediate abstract classes/traits",
        "url" : "https://github.com/softwaremill/magnolia/issues/88"
      },
      {
        "number" : 79,
        "title" : "Add caching of reused intermediate type classes",
        "url" : "https://github.com/softwaremill/magnolia/issues/79"
      },
      {
        "number" : 61,
        "title" : "Derivation with \"exists\" semantics",
        "url" : "https://github.com/softwaremill/magnolia/issues/61"
      },
      {
        "number" : 58,
        "title" : "Make Magnolia implicit prioritization configurable",
        "url" : "https://github.com/softwaremill/magnolia/issues/58"
      },
      {
        "number" : 55,
        "title" : "Is my data recursive?",
        "url" : "https://github.com/softwaremill/magnolia/issues/55"
      },
      {
        "number" : 50,
        "title" : "Structural decomposition leads to endless loop",
        "url" : "https://github.com/softwaremill/magnolia/issues/50"
      },
      {
        "number" : 29,
        "title" : "There is no way to derive higher-kinded typeclasses, like `Functor`",
        "url" : "https://github.com/softwaremill/magnolia/issues/29"
      }
    ],
    "scalaPercentage" : 99,
    "license" : "Apache-2.0",
    "commitActivity" : [
    ]
  },
  "settings" : {
    "preferStableVersion" : true,
    "defaultArtifact" : null,
    "customScalaDoc" : null,
    "documentationLinks" : [
    ],
    "contributorsWanted" : false,
    "deprecatedArtifacts" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "scala-language-extensions",
    "chatroom" : null
  }
}