{
  "organization" : "sbt",
  "repository" : "sbt-jmh",
  "creationDate" : 1400586805000,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1723555089383
    }
  },
  "githubInfo" : {
    "homepage" : "",
    "description" : "\"Trust no one, bench everything.\" - sbt plugin for JMH (Java Microbenchmark Harness)",
    "logo" : "https://avatars.githubusercontent.com/u/1158012?v=4",
    "stars" : 789,
    "forks" : 89,
    "watchers" : 24,
    "issues" : 29,
    "creationDate" : 1400524743000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div class=\"markdown-heading\" dir=\"auto\"><h1 class=\"heading-element\" dir=\"auto\">sbt-jmh</h1><a id=\"user-content-sbt-jmh\" class=\"anchor\" aria-label=\"Permalink: sbt-jmh\" href=\"#sbt-jmh\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">SBT plugin for running <a href=\"http://openjdk.java.net/projects/code-tools/jmh/\" rel=\"nofollow\">OpenJDK JMH</a> benchmarks.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">JMH about itself:</h2><a id=\"user-content-jmh-about-itself\" class=\"anchor\" aria-label=\"Permalink: JMH about itself:\" href=\"#jmh-about-itself\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">JMH is a Java harness for building, running, and analysing nano/micro/milli/macro benchmarks written in Java and other languages targeting the JVM.</p>\n<p dir=\"auto\">Please read <a href=\"http://shipilev.net/blog/2014/nanotrusting-nanotime/\" rel=\"nofollow\">nanotrusting nanotime</a> and other blog posts on micro-benchmarking (or why most benchmarks are wrong) and make sure your benchmark is valid,\nbefore you set out to implement your benchmarks.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Versions</h2><a id=\"user-content-versions\" class=\"anchor\" aria-label=\"Permalink: Versions\" href=\"#versions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<markdown-accessiblity-table><table>\n<thead>\n<tr>\n<th>Plugin version</th>\n<th>Default JMH version</th>\n<th align=\"center\">Notes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://github.com/ktoso/sbt-jmh/releases/tag/v0.4.7\"><code>0.4.7</code></a>  (sbt 1.3.0+)</td>\n<td><a href=\"https://github.com/openjdk/jmh/releases/tag/1.37\"><code>1.37</code></a></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ktoso/sbt-jmh/releases/tag/v0.4.6\"><code>0.4.6</code></a>  (sbt 1.3.0+)</td>\n<td><a href=\"https://github.com/openjdk/jmh/releases/tag/1.37\"><code>1.37</code></a></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ktoso/sbt-jmh/releases/tag/v0.4.5\"><code>0.4.5</code></a>  (sbt 1.3.0+)</td>\n<td><a href=\"https://github.com/openjdk/jmh/releases/tag/1.36\"><code>1.36</code></a></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ktoso/sbt-jmh/releases/tag/v0.4.4\"><code>0.4.4</code></a>  (sbt 1.3.0+)</td>\n<td><a href=\"https://github.com/openjdk/jmh/releases/tag/1.36\"><code>1.36</code></a></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ktoso/sbt-jmh/releases/tag/v0.4.3\"><code>0.4.3</code></a>  (sbt 1.3.0+)</td>\n<td><a href=\"https://github.com/openjdk/jmh/releases/tag/1.32\"><code>1.32</code></a></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ktoso/sbt-jmh/releases/tag/v0.4.2\"><code>0.4.2</code></a>  (sbt 1.3.0+)</td>\n<td><a href=\"https://github.com/openjdk/jmh/releases/tag/1.31\"><code>1.31</code></a></td>\n<td align=\"center\">JMH <code>-prof async</code> supports 2.x</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ktoso/sbt-jmh/releases/tag/v0.4.1\"><code>0.4.1</code></a>  (sbt 1.3.0+)</td>\n<td><a href=\"https://github.com/openjdk/jmh/releases/tag/1.30\"><code>1.30</code></a></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ktoso/sbt-jmh/releases/tag/v0.4.0\"><code>0.4.0</code></a>  (sbt 1.3.0+)</td>\n<td><a href=\"https://github.com/openjdk/jmh/releases/tag/1.25\"><code>1.25</code></a></td>\n<td align=\"center\">profilers now in JMH core</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ktoso/sbt-jmh/releases/tag/v0.3.7\"><code>0.3.7</code></a>  (sbt 0.13.17 / sbt 1.1.4)</td>\n<td><a href=\"https://github.com/openjdk/jmh/releases/tag/1.21\"><code>1.21</code></a></td>\n<td align=\"center\">support JDK 11</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ktoso/sbt-jmh/releases/tag/v0.3.6\"><code>0.3.6</code></a>  (sbt 0.13.17 / sbt 1.1.4)</td>\n<td><a href=\"https://github.com/openjdk/jmh/releases/tag/1.21\"><code>1.21</code></a></td>\n<td align=\"center\">support JDK 11</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ktoso/sbt-jmh/releases/tag/v0.3.4\"><code>0.3.4</code></a>  (sbt 0.13.17 / sbt 1.1.4)</td>\n<td><a href=\"https://github.com/openjdk/jmh/releases/tag/1.21\"><code>1.21</code></a></td>\n<td align=\"center\">support of GraalVM</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ktoso/sbt-jmh/releases/tag/v0.3.3\"><code>0.3.3</code></a>  (sbt 0.13.17 / sbt 1.1.1)</td>\n<td><a href=\"https://github.com/openjdk/jmh/releases/tag/1.20\"><code>1.20</code></a></td>\n<td align=\"center\">JMH bugfix release</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ktoso/sbt-jmh/releases/tag/v0.3.2\"><code>0.3.2</code></a>  (sbt 0.13.16 / sbt 1.0)</td>\n<td><a href=\"https://github.com/openjdk/jmh/releases/tag/1.19\"><code>1.19</code></a></td>\n<td align=\"center\">minor bugfix release</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ktoso/sbt-jmh/releases/tag/v0.3.1\"><code>0.3.1</code></a>  (sbt 0.13.16 / sbt 1.0)</td>\n<td><a href=\"https://github.com/openjdk/jmh/releases/tag/1.19\"><code>1.19</code></a></td>\n<td align=\"center\">minor bugfix release</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ktoso/sbt-jmh/releases/tag/v0.3.0\"><code>0.3.0</code></a>  (sbt 0.13.16 / sbt 1.0)</td>\n<td><a href=\"https://github.com/openjdk/jmh/releases/tag/1.19\"><code>1.19</code></a></td>\n<td align=\"center\">async profiler, flame-graphs</td>\n</tr>\n<tr>\n<td>...</td>\n<td>...</td>\n<td align=\"center\"></td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>\n<p dir=\"auto\">Not interesting versions are skipped in the above listing. Always use the newest which has the JMH version you need.\nYou should stick to the latest version at all times anyway of course.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Adding to your project</h2><a id=\"user-content-adding-to-your-project\" class=\"anchor\" aria-label=\"Permalink: Adding to your project\" href=\"#adding-to-your-project\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">Since sbt-jmh is an <strong>AutoPlugin</strong> all you need to do in order to activate it in\nyour project is to add the below line to your <code>project/plugins.sbt</code> file:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// project/plugins.sbt\naddSbtPlugin(&quot;pl.project13.scala&quot; % &quot;sbt-jmh&quot; % &quot;0.4.7&quot;)\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> project/plugins.sbt</span>\naddSbtPlugin(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>pl.project13.scala<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sbt-jmh<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0.4.7<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<p dir=\"auto\">and enable it in the projects where you want to (useful in multi-project builds, as you can enable it only where you need it):</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// build.sbt\nenablePlugins(JmhPlugin)\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> build.sbt</span>\nenablePlugins(<span class=\"pl-en\">JmhPlugin</span>)</pre></div>\n<p dir=\"auto\">If you define your project in a <code>Build.scala</code>, you also need the following import:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import pl.project13.scala.sbt.JmhPlugin\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">pl</span>.<span class=\"pl-en\">project13</span>.<span class=\"pl-en\">scala</span>.<span class=\"pl-en\">sbt</span>.<span class=\"pl-en\">JmhPlugin</span></pre></div>\n<p dir=\"auto\">You can read more about <a href=\"http://www.scala-sbt.org/0.13/tutorial/Using-Plugins.html#Enabling+and+disabling+auto+plugins\" rel=\"nofollow\">auto plugins in sbt on it's documentation page</a>.</p>\n<p dir=\"auto\">Write your benchmarks in <code>src/main/scala</code>. They will be picked up and instrumented by the plugin.</p>\n<p dir=\"auto\">JMH has a very specific way of working (it generates loads of code), so you should prepare a separate project for your benchmarks. In it, just type <code>Jmh/run</code> in order to run your benchmarks.\nAll JMH options work as expected. For help type <code>Jmh/run -h</code>. Another example of running it is:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Jmh/run -i 3 -wi 3 -f1 -t1 .*FalseSharing.*\"><pre><span class=\"pl-en\">Jmh</span><span class=\"pl-k\">/</span>run <span class=\"pl-k\">-</span>i <span class=\"pl-c1\">3</span> <span class=\"pl-k\">-</span>wi <span class=\"pl-c1\">3</span> <span class=\"pl-k\">-</span>f1 <span class=\"pl-k\">-</span>t1 .<span class=\"pl-k\">*</span><span class=\"pl-en\">FalseSharing</span>.<span class=\"pl-k\">*</span></pre></div>\n<p dir=\"auto\">Which means \"3 iterations\" \"3 warmup iterations\" \"1 fork\" \"1 thread\". Please note that benchmarks should be usually executed at least in 10 iterations (as a rule of thumb), but more is better.</p>\n<p dir=\"auto\"><strong>For \"real\" results we recommend to at least warm up 10 to 20 iterations, and then measure 10 to 20 iterations again. Forking the JVM is required to avoid falling into specific optimisations (no JVM optimisation is really \"completely\" predictable)</strong></p>\n<p dir=\"auto\">If your benchmark should be a module in a multimodule project and needs access to another modules test classes then you\nmight want to define your benchmarks in <code>src/test</code> as well (because <a href=\"https://youtrack.jetbrains.com/issue/SCL-8396\" rel=\"nofollow\">Intellij does not support \"compile-&gt;test\" dependencies</a>).\nWhile this is not directly supported it can be achieved with some tweaks. Assuming the benchmarks live in a module <code>bench</code> and need access\nto test classes from <code>anotherModule</code>, you have to define this dependency in your <code>build.sbt</code>:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"lazy val bench = project\n  .dependsOn(anotherModule % &quot;test-&gt;test&quot;)\n  .enablePlugins(JmhPlugin)\n  .settings(\n     Jmh / sourceDirectory := (Test / sourceDirectory).value,\n     Jmh / classDirectory := (Test / classDirectory).value,\n     Jmh / dependencyClasspath := (Test / dependencyClasspath).value,\n     // rewire tasks, so that 'bench/Jmh/run' automatically invokes 'bench/Jmh/compile' (otherwise a clean 'bench/Jmh/run' would fail)\n     Jmh / compile := (Jmh / compile).dependsOn(Test / compile).value,\n     Jmh / run := (Jmh / run).dependsOn(Jmh / compile).evaluated\n  )\"><pre><span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">bench</span> <span class=\"pl-k\">=</span> project\n  .dependsOn(anotherModule <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test-&gt;test<span class=\"pl-pds\">\"</span></span>)\n  .enablePlugins(<span class=\"pl-en\">JmhPlugin</span>)\n  .settings(\n     <span class=\"pl-en\">Jmh</span> <span class=\"pl-k\">/</span> sourceDirectory <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> (<span class=\"pl-en\">Test</span> <span class=\"pl-k\">/</span> sourceDirectory).value,\n     <span class=\"pl-en\">Jmh</span> <span class=\"pl-k\">/</span> classDirectory <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> (<span class=\"pl-en\">Test</span> <span class=\"pl-k\">/</span> classDirectory).value,\n     <span class=\"pl-en\">Jmh</span> <span class=\"pl-k\">/</span> dependencyClasspath <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> (<span class=\"pl-en\">Test</span> <span class=\"pl-k\">/</span> dependencyClasspath).value,\n     <span class=\"pl-c\"><span class=\"pl-c\">//</span> rewire tasks, so that 'bench/Jmh/run' automatically invokes 'bench/Jmh/compile' (otherwise a clean 'bench/Jmh/run' would fail)</span>\n     <span class=\"pl-en\">Jmh</span> <span class=\"pl-k\">/</span> compile <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> (<span class=\"pl-en\">Jmh</span> <span class=\"pl-k\">/</span> compile).dependsOn(<span class=\"pl-en\">Test</span> <span class=\"pl-k\">/</span> compile).value,\n     <span class=\"pl-en\">Jmh</span> <span class=\"pl-k\">/</span> run <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> (<span class=\"pl-en\">Jmh</span> <span class=\"pl-k\">/</span> run).dependsOn(<span class=\"pl-en\">Jmh</span> <span class=\"pl-k\">/</span> compile).evaluated\n  )</pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Options</h2><a id=\"user-content-options\" class=\"anchor\" aria-label=\"Permalink: Options\" href=\"#options\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">Please invoke <code>Jmh/run -h</code> to get a full list of run as well as output format options.</p>\n<p dir=\"auto\"><strong>Useful hint</strong>: If you plan to aggregate the collected data you should have a look at the available output formats (<code>-lrf</code>).\nFor example it's possible to keep the benchmark's results as csv or json files for later regression analysis.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Using Java Flight Recorder / async-profiler.</h2><a id=\"user-content-using-java-flight-recorder--async-profiler\" class=\"anchor\" aria-label=\"Permalink: Using Java Flight Recorder / async-profiler.\" href=\"#using-java-flight-recorder--async-profiler\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\"><strong>NOTE</strong>: <code>sbt-jmh</code>-s integration with async-profiler and Java Flight Recorder has been contributed to the\nJMH project as of JMH 1.25 and removed from this project. Please migrate to using <code>-prof jfr</code> / <code>-prof async</code>.\nUse <code>-prof jfr:help</code> / <code>-prof async:help</code> to list available options.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Examples</h2><a id=\"user-content-examples\" class=\"anchor\" aria-label=\"Permalink: Examples\" href=\"#examples\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">The <a href=\"https://github.com/ktoso/sbt-jmh/tree/main/plugin/src/sbt-test/sbt-jmh/run/src/main/scala/org/openjdk/jmh/samples\">examples are scala-fied examples from the original JMH repo</a>, check them out, and run them!</p>\n<p dir=\"auto\">The results will look somewhat like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"...\n\n[info] # Run progress: 92.86% complete, ETA 00:00:15\n[info] # VM invoker: /Library/Java/JavaVirtualMachines/jdk1.7.0_60.jdk/Contents/Home/jre/bin/java\n[info] # VM options: &lt;none&gt;\n[info] # Fork: 1 of 1\n[info] # Warmup: 2 iterations, single-shot each\n[info] # Measurement: 3 iterations, single-shot each\n[info] # Threads: 1 thread, will synchronize iterations\n[info] # Benchmark mode: Single shot invocation time\n[info] # Benchmark: org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes.measureSingleShot\n[info] # Warmup Iteration   1: 100322.000 us\n[info] # Warmup Iteration   2: 100556.000 us\n[info] Iteration   1: 100162.000 us\n[info] Iteration   2: 100468.000 us\n[info] Iteration   3: 100706.000 us\n[info]\n[info] Result : 100445.333 ±(99.9%) 4975.198 us\n[info]   Statistics: (min, avg, max) = (100162.000, 100445.333, 100706.000), stdev = 272.707\n[info]   Confidence interval (99.9%): [95470.135, 105420.532]\n[info]\n[info]\n[info] # Run progress: 96.43% complete, ETA 00:00:07\n[info] # VM invoker: /Library/Java/JavaVirtualMachines/jdk1.7.0_60.jdk/Contents/Home/jre/bin/java\n[info] # VM options: &lt;none&gt;\n[info] # Fork: 1 of 1\n[info] # Warmup: 2 iterations, single-shot each, 5000 calls per batch\n[info] # Measurement: 3 iterations, single-shot each, 5000 calls per batch\n[info] # Threads: 1 thread, will synchronize iterations\n[info] # Benchmark mode: Single shot invocation time\n[info] # Benchmark: org.openjdk.jmh.samples.JMHSample_26_BatchSize.measureRight\n[info] # Warmup Iteration   1: 15.344 ms\n[info] # Warmup Iteration   2: 13.499 ms\n[info] Iteration   1: 2.305 ms\n[info] Iteration   2: 0.716 ms\n[info] Iteration   3: 0.473 ms\n[info]\n[info] Result : 1.165 ±(99.9%) 18.153 ms\n[info]   Statistics: (min, avg, max) = (0.473, 1.165, 2.305), stdev = 0.995\n[info]   Confidence interval (99.9%): [-16.988, 19.317]\n[info]\n[info]\n[info] Benchmark                                                 Mode   Samples         Mean   Mean error    Units\n[info] o.o.j.s.JMHSample_22_FalseSharing.baseline               thrpt         3      692.034      179.561   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.baseline:reader        thrpt         3      199.185      185.188   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.baseline:writer        thrpt         3      492.850        7.307   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.contended              thrpt         3      706.532      293.880   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.contended:reader       thrpt         3      210.202      277.801   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.contended:writer       thrpt         3      496.330       78.508   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.hierarchy              thrpt         3     1751.941      222.535   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.hierarchy:reader       thrpt         3     1289.003      277.126   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.hierarchy:writer       thrpt         3      462.938       55.329   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.padded                 thrpt         3     1745.650       83.783   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.padded:reader          thrpt         3     1281.877       47.922   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.padded:writer          thrpt         3      463.773      104.223   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.sparse                 thrpt         3     1362.515      461.782   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.sparse:reader          thrpt         3      898.282      415.388   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.sparse:writer          thrpt         3      464.233       49.958   ops/us\"><pre class=\"notranslate\"><code>...\n\n[info] # Run progress: 92.86% complete, ETA 00:00:15\n[info] # VM invoker: /Library/Java/JavaVirtualMachines/jdk1.7.0_60.jdk/Contents/Home/jre/bin/java\n[info] # VM options: &lt;none&gt;\n[info] # Fork: 1 of 1\n[info] # Warmup: 2 iterations, single-shot each\n[info] # Measurement: 3 iterations, single-shot each\n[info] # Threads: 1 thread, will synchronize iterations\n[info] # Benchmark mode: Single shot invocation time\n[info] # Benchmark: org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes.measureSingleShot\n[info] # Warmup Iteration   1: 100322.000 us\n[info] # Warmup Iteration   2: 100556.000 us\n[info] Iteration   1: 100162.000 us\n[info] Iteration   2: 100468.000 us\n[info] Iteration   3: 100706.000 us\n[info]\n[info] Result : 100445.333 ±(99.9%) 4975.198 us\n[info]   Statistics: (min, avg, max) = (100162.000, 100445.333, 100706.000), stdev = 272.707\n[info]   Confidence interval (99.9%): [95470.135, 105420.532]\n[info]\n[info]\n[info] # Run progress: 96.43% complete, ETA 00:00:07\n[info] # VM invoker: /Library/Java/JavaVirtualMachines/jdk1.7.0_60.jdk/Contents/Home/jre/bin/java\n[info] # VM options: &lt;none&gt;\n[info] # Fork: 1 of 1\n[info] # Warmup: 2 iterations, single-shot each, 5000 calls per batch\n[info] # Measurement: 3 iterations, single-shot each, 5000 calls per batch\n[info] # Threads: 1 thread, will synchronize iterations\n[info] # Benchmark mode: Single shot invocation time\n[info] # Benchmark: org.openjdk.jmh.samples.JMHSample_26_BatchSize.measureRight\n[info] # Warmup Iteration   1: 15.344 ms\n[info] # Warmup Iteration   2: 13.499 ms\n[info] Iteration   1: 2.305 ms\n[info] Iteration   2: 0.716 ms\n[info] Iteration   3: 0.473 ms\n[info]\n[info] Result : 1.165 ±(99.9%) 18.153 ms\n[info]   Statistics: (min, avg, max) = (0.473, 1.165, 2.305), stdev = 0.995\n[info]   Confidence interval (99.9%): [-16.988, 19.317]\n[info]\n[info]\n[info] Benchmark                                                 Mode   Samples         Mean   Mean error    Units\n[info] o.o.j.s.JMHSample_22_FalseSharing.baseline               thrpt         3      692.034      179.561   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.baseline:reader        thrpt         3      199.185      185.188   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.baseline:writer        thrpt         3      492.850        7.307   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.contended              thrpt         3      706.532      293.880   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.contended:reader       thrpt         3      210.202      277.801   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.contended:writer       thrpt         3      496.330       78.508   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.hierarchy              thrpt         3     1751.941      222.535   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.hierarchy:reader       thrpt         3     1289.003      277.126   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.hierarchy:writer       thrpt         3      462.938       55.329   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.padded                 thrpt         3     1745.650       83.783   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.padded:reader          thrpt         3     1281.877       47.922   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.padded:writer          thrpt         3      463.773      104.223   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.sparse                 thrpt         3     1362.515      461.782   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.sparse:reader          thrpt         3      898.282      415.388   ops/us\n[info] o.o.j.s.JMHSample_22_FalseSharing.sparse:writer          thrpt         3      464.233       49.958   ops/us\n</code></pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Advanced: Using custom Runners</h2><a id=\"user-content-advanced-using-custom-runners\" class=\"anchor\" aria-label=\"Permalink: Advanced: Using custom Runners\" href=\"#advanced-using-custom-runners\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">It is possible to hand over the running of JMH to an <code>App</code> implemented by you, which allows you to programmatically\naccess all test results and modify JMH arguments before you actually invoke it.</p>\n<p dir=\"auto\">To use a custom runner class with <code>runMain</code>, simply use it: <code>Jmh/runMain com.example.MyRunner -i 10 .*</code> –\nan example for this is available in <a href=\"plugin/src/sbt-test/sbt-jmh/runMain\">plugin/src/sbt-test/sbt-jmh/runMain</a> (open the <code>test</code> file).</p>\n<p dir=\"auto\">To replace the runner class which is used when you type <code>Jmh/run</code>, you can set the class in your build file –\nan example for this is available in <a href=\"plugin/src/sbt-test/sbt-jmh/custom-runner\">plugin/src/sbt-test/sbt-jmh/custom-runner</a> (open the <code>build.sbt</code> file).</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h1 class=\"heading-element\" dir=\"auto\">Contributing</h1><a id=\"user-content-contributing\" class=\"anchor\" aria-label=\"Permalink: Contributing\" href=\"#contributing\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">Yes, pull requests and opening issues is very welcome!</p>\n<p dir=\"auto\">The plugin is maintained at an best-effort basis -- submitting a PR is the best way of getting something done :-)</p>\n<p dir=\"auto\">You can locally publish the plugin with:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"sbt 'project plugin; ^publishLocal'\"><pre class=\"notranslate\"><code>sbt 'project plugin; ^publishLocal'\n</code></pre></div>\n<p dir=\"auto\">Please test your changes by adding to the [scripted test suite][sbt-jmh/plugin/src/sbt-test/sbt-jmh/]\nwhich can be run with:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" sbt 'project plugin; ^scripted'\"><pre class=\"notranslate\"><code> sbt 'project plugin; ^scripted'\n</code></pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Special thanks</h2><a id=\"user-content-special-thanks\" class=\"anchor\" aria-label=\"Permalink: Special thanks\" href=\"#special-thanks\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">Special thanks for contributing async-profiler and flame-graphs support and other improvements\ngo to <a href=\"https://github.com/retronym\">@retronym</a> of Lightbend's Scala team.</p>\n</article></div>",
    "contributors" : [
      {
        "login" : "ktoso",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/120979?v=4",
        "url" : "https://github.com/ktoso",
        "contributions" : 115
      },
      {
        "login" : "retronym",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/65551?v=4",
        "url" : "https://github.com/retronym",
        "contributions" : 72
      },
      {
        "login" : "dependabot[bot]",
        "avatarUrl" : "https://avatars.githubusercontent.com/in/29110?v=4",
        "url" : "https://github.com/apps/dependabot",
        "contributions" : 21
      },
      {
        "login" : "johanandren",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/666915?v=4",
        "url" : "https://github.com/johanandren",
        "contributions" : 15
      },
      {
        "login" : "github-actions[bot]",
        "avatarUrl" : "https://avatars.githubusercontent.com/in/15368?v=4",
        "url" : "https://github.com/apps/github-actions",
        "contributions" : 11
      },
      {
        "login" : "golem131",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2429587?v=4",
        "url" : "https://github.com/golem131",
        "contributions" : 9
      },
      {
        "login" : "ijuma",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/24747?v=4",
        "url" : "https://github.com/ijuma",
        "contributions" : 5
      },
      {
        "login" : "eed3si9n",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/184683?v=4",
        "url" : "https://github.com/eed3si9n",
        "contributions" : 5
      },
      {
        "login" : "xuwei-k",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/389787?v=4",
        "url" : "https://github.com/xuwei-k",
        "contributions" : 5
      },
      {
        "login" : "dwijnand",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/344610?v=4",
        "url" : "https://github.com/dwijnand",
        "contributions" : 4
      },
      {
        "login" : "plokhotnyuk",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/890289?v=4",
        "url" : "https://github.com/plokhotnyuk",
        "contributions" : 4
      },
      {
        "login" : "guizmaii",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1193670?v=4",
        "url" : "https://github.com/guizmaii",
        "contributions" : 3
      },
      {
        "login" : "bantonsson",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/805830?v=4",
        "url" : "https://github.com/bantonsson",
        "contributions" : 3
      },
      {
        "login" : "SethTisue",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/161079?v=4",
        "url" : "https://github.com/SethTisue",
        "contributions" : 2
      },
      {
        "login" : "paplorinc",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1841944?v=4",
        "url" : "https://github.com/paplorinc",
        "contributions" : 2
      },
      {
        "login" : "ocadaruma",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/6070684?v=4",
        "url" : "https://github.com/ocadaruma",
        "contributions" : 2
      },
      {
        "login" : "mosesn",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/156562?v=4",
        "url" : "https://github.com/mosesn",
        "contributions" : 2
      },
      {
        "login" : "magro",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/64285?v=4",
        "url" : "https://github.com/magro",
        "contributions" : 2
      },
      {
        "login" : "lomigmegard",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/434236?v=4",
        "url" : "https://github.com/lomigmegard",
        "contributions" : 2
      },
      {
        "login" : "julien-truffaut",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1859417?v=4",
        "url" : "https://github.com/julien-truffaut",
        "contributions" : 2
      },
      {
        "login" : "sokrahta",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/9438863?v=4",
        "url" : "https://github.com/sokrahta",
        "contributions" : 2
      },
      {
        "login" : "alexander-myltsev",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/574267?v=4",
        "url" : "https://github.com/alexander-myltsev",
        "contributions" : 2
      },
      {
        "login" : "2m",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/422086?v=4",
        "url" : "https://github.com/2m",
        "contributions" : 1
      },
      {
        "login" : "limansky",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/111185?v=4",
        "url" : "https://github.com/limansky",
        "contributions" : 1
      },
      {
        "login" : "tmccombs",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2541726?v=4",
        "url" : "https://github.com/tmccombs",
        "contributions" : 1
      },
      {
        "login" : "gitter-badger",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/8518239?v=4",
        "url" : "https://github.com/gitter-badger",
        "contributions" : 1
      },
      {
        "login" : "TimSoethout",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/593132?v=4",
        "url" : "https://github.com/TimSoethout",
        "contributions" : 1
      },
      {
        "login" : "yanns",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/51669?v=4",
        "url" : "https://github.com/yanns",
        "contributions" : 1
      },
      {
        "login" : "kraktus",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/56031107?v=4",
        "url" : "https://github.com/kraktus",
        "contributions" : 1
      },
      {
        "login" : "saint1991",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/7046371?v=4",
        "url" : "https://github.com/saint1991",
        "contributions" : 1
      },
      {
        "login" : "monkey-mas",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/5261677?v=4",
        "url" : "https://github.com/monkey-mas",
        "contributions" : 1
      },
      {
        "login" : "rintcius",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/888781?v=4",
        "url" : "https://github.com/rintcius",
        "contributions" : 1
      },
      {
        "login" : "sullis",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/30938?v=4",
        "url" : "https://github.com/sullis",
        "contributions" : 1
      },
      {
        "login" : "ldrygala",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3949848?v=4",
        "url" : "https://github.com/ldrygala",
        "contributions" : 1
      },
      {
        "login" : "catap",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/37775?v=4",
        "url" : "https://github.com/catap",
        "contributions" : 1
      },
      {
        "login" : "kcrimson",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1294979?v=4",
        "url" : "https://github.com/kcrimson",
        "contributions" : 1
      },
      {
        "login" : "gpoulin",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/4609807?v=4",
        "url" : "https://github.com/gpoulin",
        "contributions" : 1
      },
      {
        "login" : "smarter",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/63430?v=4",
        "url" : "https://github.com/smarter",
        "contributions" : 1
      },
      {
        "login" : "gkossakowski",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/4217?v=4",
        "url" : "https://github.com/gkossakowski",
        "contributions" : 1
      },
      {
        "login" : "jozic",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/124249?v=4",
        "url" : "https://github.com/jozic",
        "contributions" : 1
      },
      {
        "login" : "chbatey",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1866779?v=4",
        "url" : "https://github.com/chbatey",
        "contributions" : 1
      },
      {
        "login" : "VEINHORN",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3595400?v=4",
        "url" : "https://github.com/VEINHORN",
        "contributions" : 1
      },
      {
        "login" : "akkomar",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1476307?v=4",
        "url" : "https://github.com/akkomar",
        "contributions" : 1
      },
      {
        "login" : "alexandrnikitin",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1798438?v=4",
        "url" : "https://github.com/alexandrnikitin",
        "contributions" : 1
      },
      {
        "login" : "adpi2",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/13123162?v=4",
        "url" : "https://github.com/adpi2",
        "contributions" : 1
      },
      {
        "login" : "i10416",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/39330037?v=4",
        "url" : "https://github.com/i10416",
        "contributions" : 1
      }
    ],
    "commits" : 314,
    "topics" : [
      "benchmark",
      "openjdk",
      "scala"
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "openIssues" : [
      {
        "number" : 260,
        "title" : "Adding additional modules no longer possible",
        "url" : "https://github.com/sbt/sbt-jmh/issues/260"
      },
      {
        "number" : 241,
        "title" : "Forking JMH may fail on Windows with \"CreateProcess error=206, The filename or extension is too long\"",
        "url" : "https://github.com/sbt/sbt-jmh/issues/241"
      },
      {
        "number" : 227,
        "title" : "How to use async-profiler with multiple options",
        "url" : "https://github.com/sbt/sbt-jmh/issues/227"
      },
      {
        "number" : 216,
        "title" : "`Test / skip := true` leads to `java.lang.IllegalArgumentException: Benchmark does not match a class`",
        "url" : "https://github.com/sbt/sbt-jmh/issues/216"
      },
      {
        "number" : 213,
        "title" : "Log4j Dependencies not being passed to the Benchmark",
        "url" : "https://github.com/sbt/sbt-jmh/issues/213"
      },
      {
        "number" : 212,
        "title" : "Specifying javaHome per configuration",
        "url" : "https://github.com/sbt/sbt-jmh/issues/212"
      },
      {
        "number" : 210,
        "title" : "jmh:run caused Unable to find the resource: /META-INF/BenchmarkList in multiple projects",
        "url" : "https://github.com/sbt/sbt-jmh/issues/210"
      },
      {
        "number" : 193,
        "title" : "Is it possible to set `bspEnable := false` by default?",
        "url" : "https://github.com/sbt/sbt-jmh/issues/193"
      },
      {
        "number" : 176,
        "title" : "Canceling execution does not work on Windows",
        "url" : "https://github.com/sbt/sbt-jmh/issues/176"
      },
      {
        "number" : 174,
        "title" : "Request for feature: Cross-Versions benchmarking",
        "url" : "https://github.com/sbt/sbt-jmh/issues/174"
      },
      {
        "number" : 166,
        "title" : "Tab completion for jmh parameters",
        "url" : "https://github.com/sbt/sbt-jmh/issues/166"
      },
      {
        "number" : 132,
        "title" : "Consider providing a http://jmh.morethan.io/ report",
        "url" : "https://github.com/sbt/sbt-jmh/issues/132"
      },
      {
        "number" : 126,
        "title" : "sbt-jmh should not ignore library dependencies in Runtime configuration",
        "url" : "https://github.com/sbt/sbt-jmh/issues/126"
      },
      {
        "number" : 119,
        "title" : "missing tag for 0.2.25",
        "url" : "https://github.com/sbt/sbt-jmh/issues/119"
      },
      {
        "number" : 107,
        "title" : "Sbt interactive session halts in case of jmh error",
        "url" : "https://github.com/sbt/sbt-jmh/issues/107"
      },
      {
        "number" : 103,
        "title" : "Allow generating graphs from benchmarks",
        "url" : "https://github.com/sbt/sbt-jmh/issues/103"
      },
      {
        "number" : 63,
        "title" : "Run tests from other directories than src/main/scala",
        "url" : "https://github.com/sbt/sbt-jmh/issues/63"
      },
      {
        "number" : 59,
        "title" : "Add support for uploading a fat-jar to servers for benchmarking",
        "url" : "https://github.com/sbt/sbt-jmh/issues/59"
      },
      {
        "number" : 47,
        "title" : "Ease data collection, like an append target (?)",
        "url" : "https://github.com/sbt/sbt-jmh/issues/47"
      },
      {
        "number" : 45,
        "title" : "Enabling the plugin in project definitions with settings makes run raise exception",
        "url" : "https://github.com/sbt/sbt-jmh/issues/45"
      },
      {
        "number" : 33,
        "title" : "Validate jvmOpts are passed to forked JVMs properly",
        "url" : "https://github.com/sbt/sbt-jmh/issues/33"
      },
      {
        "number" : 30,
        "title" : "Evaluate whether `fork in (Compile, run) := true` is still required",
        "url" : "https://github.com/sbt/sbt-jmh/issues/30"
      },
      {
        "number" : 25,
        "title" : "can not found any benchmarks after compile the scala file",
        "url" : "https://github.com/sbt/sbt-jmh/issues/25"
      },
      {
        "number" : 16,
        "title" : "Clean up of previously generated benchmarks",
        "url" : "https://github.com/sbt/sbt-jmh/issues/16"
      },
      {
        "number" : 11,
        "title" : "Fails if also has Java benchmarks",
        "url" : "https://github.com/sbt/sbt-jmh/issues/11"
      },
      {
        "number" : 9,
        "title" : "Compile only the needed-to-be-compiled java sources",
        "url" : "https://github.com/sbt/sbt-jmh/issues/9"
      },
      {
        "number" : 8,
        "title" : "Explicitly set scala versions",
        "url" : "https://github.com/sbt/sbt-jmh/issues/8"
      },
      {
        "number" : 4,
        "title" : "Filter/ignore javac warnings in generated benchmark sources",
        "url" : "https://github.com/sbt/sbt-jmh/issues/4"
      },
      {
        "number" : 1,
        "title" : "Support for building benchmarks.jar not just running",
        "url" : "https://github.com/sbt/sbt-jmh/issues/1"
      }
    ],
    "scalaPercentage" : 100,
    "license" : "Apache-2.0",
    "commitActivity" : [
    ]
  },
  "settings" : {
    "preferStableVersion" : true,
    "defaultArtifact" : "sbt-jmh-extras",
    "customScalaDoc" : null,
    "documentationLinks" : [
    ],
    "contributorsWanted" : true,
    "deprecatedArtifacts" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "performance-and-monitoring",
    "chatroom" : null
  }
}