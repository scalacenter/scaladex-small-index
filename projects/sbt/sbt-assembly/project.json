{
  "organization" : "sbt",
  "repository" : "sbt-assembly",
  "creationDate" : 1372678529000,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1660811494686
    }
  },
  "githubInfo" : {
    "homepage" : "",
    "description" : "Deploy über-JARs. Restart processes. (port of codahale/assembly-sbt)",
    "logo" : "https://avatars.githubusercontent.com/u/1158012?v=4",
    "stars" : 1843,
    "forks" : 214,
    "watchers" : 58,
    "issues" : 92,
    "creationDate" : 1307683827000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 dir=\"auto\"><a id=\"user-content-sbt-assembly\" class=\"anchor\" aria-hidden=\"true\" href=\"#sbt-assembly\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>sbt-assembly</h1>\n<p dir=\"auto\"><em>Deploy über JARs. Restart processes.</em></p>\n<p dir=\"auto\">sbt-assembly is a sbt plugin originally ported from codahale's assembly-sbt, which I'm guessing was inspired by Maven's assembly plugin. The goal is simple: Create a über JAR of your project with all of its dependencies.</p>\n<h2 dir=\"auto\"><a id=\"user-content-requirements\" class=\"anchor\" aria-hidden=\"true\" href=\"#requirements\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Requirements</h2>\n<ul dir=\"auto\">\n<li>sbt</li>\n<li>The burning desire to have a simple deploy procedure.</li>\n</ul>\n<h2 dir=\"auto\"><a id=\"user-content-reporting-issues--contributing\" class=\"anchor\" aria-hidden=\"true\" href=\"#reporting-issues--contributing\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Reporting Issues &amp; Contributing</h2>\n<p dir=\"auto\">Before you email me, please read <a href=\"CONTRIBUTING.md\">Issue Reporting Guideline</a> carefully. Twice. (Don't email me)</p>\n<h2 dir=\"auto\"><a id=\"user-content-setup\" class=\"anchor\" aria-hidden=\"true\" href=\"#setup\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Setup</h2>\n<h3 dir=\"auto\"><a id=\"user-content-using-published-plugin\" class=\"anchor\" aria-hidden=\"true\" href=\"#using-published-plugin\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Using Published Plugin</h3>\n<p dir=\"auto\"><a href=\"https://index.scala-lang.org/sbt/sbt-assembly/sbt-assembly\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/ffb31e34136d016c6f6fa2fd5a2fd71cd1b493d049b4721a95c3a4432c9f3c05/68747470733a2f2f696e6465782e7363616c612d6c616e672e6f72672f7362742f7362742d617373656d626c792f7362742d617373656d626c792f6c61746573742d62792d7363616c612d76657273696f6e2e7376673f746172676574547970653d536274\" alt=\"sbt-assembly Scala version support\" data-canonical-src=\"https://index.scala-lang.org/sbt/sbt-assembly/sbt-assembly/latest-by-scala-version.svg?targetType=Sbt\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Add sbt-assembly as a dependency in <code>project/plugins.sbt</code>:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"addSbtPlugin(&quot;com.eed3si9n&quot; % &quot;sbt-assembly&quot; % &quot;x.y.z&quot;)\"><pre>addSbtPlugin(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.eed3si9n<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sbt-assembly<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>x.y.z<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<p dir=\"auto\">Starting in <code>sbt-assembly</code> <code>1.2.0</code>, sbt <code>0.13.x</code> has been deprecated.  Please use <code>1.1.0</code> if this is required.</p>\n<h2 dir=\"auto\"><a id=\"user-content-usage\" class=\"anchor\" aria-hidden=\"true\" href=\"#usage\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Usage</h2>\n<p dir=\"auto\">Since sbt-assembly is now an auto plugin that's triggered for all projects with <code>JvmPlugin</code>, it shouldn't require extra setup to include <code>assembly</code> task into your project.\nSee <a href=\"Migration.md\">migration guide</a> for details on how to upgrade from older sbt-assembly.</p>\n<h3 dir=\"auto\"><a id=\"user-content-applying-the-plugin-to-multi-project-buildsbt\" class=\"anchor\" aria-hidden=\"true\" href=\"#applying-the-plugin-to-multi-project-buildsbt\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Applying the plugin to multi-project build.sbt</h3>\n<p dir=\"auto\">For example, here's a multi-project <code>build.sbt</code>:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ThisBuild / version := &quot;0.1.0-SNAPSHOT&quot;\nThisBuild / organization := &quot;com.example&quot;\nThisBuild / scalaVersion := &quot;2.13.7&quot;\n\nlazy val app = (project in file(&quot;app&quot;))\n  .settings(\n    assembly / mainClass := Some(&quot;com.example.Main&quot;),\n    // more settings here ...\n  )\n\nlazy val utils = (project in file(&quot;utils&quot;))\n  .settings(\n    assembly / assemblyJarName := &quot;utils.jar&quot;,\n    // more settings here ...\n  )\"><pre><span class=\"pl-en\">ThisBuild</span> <span class=\"pl-k\">/</span> version <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0.1.0-SNAPSHOT<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-en\">ThisBuild</span> <span class=\"pl-k\">/</span> organization <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.example<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-en\">ThisBuild</span> <span class=\"pl-k\">/</span> scalaVersion <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>2.13.7<span class=\"pl-pds\">\"</span></span>\n\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">app</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>app<span class=\"pl-pds\">\"</span></span>))\n  .settings(\n    assembly <span class=\"pl-k\">/</span> mainClass <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-en\">Some</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.example.Main<span class=\"pl-pds\">\"</span></span>),\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> more settings here ...</span>\n  )\n\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">utils</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>utils<span class=\"pl-pds\">\"</span></span>))\n  .settings(\n    assembly <span class=\"pl-k\">/</span> assemblyJarName <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>utils.jar<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> more settings here ...</span>\n  )</pre></div>\n<p dir=\"auto\">In the above example, both the <code>app</code> project and the <code>utils</code> project do not run tests during assembly. The <code>app</code> project sets a main class whereas the <code>utils</code> project sets the name of its jar file.</p>\n<h3 dir=\"auto\"><a id=\"user-content-assembly-task\" class=\"anchor\" aria-hidden=\"true\" href=\"#assembly-task\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>assembly task</h3>\n<p dir=\"auto\">Now you'll have an awesome new <code>assembly</code> task which will compile your project,\nrun your tests, and then pack your class files and all your dependencies into a\nsingle JAR file: <code>target/scala_X.X.X/projectname-assembly-X.X.X.jar</code>.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&gt; assembly\"><pre class=\"notranslate\"><code>&gt; assembly\n</code></pre></div>\n<p dir=\"auto\">If you specify a <code>assembly / mainClass</code> in build.sbt (or just let it autodetect\none) then you'll end up with a fully executable JAR, ready to rock.</p>\n<p dir=\"auto\">Here is the list of the keys you can rewire that are scoped to current subproject's <code>assembly</code> task:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"assemblyJarName               test                          mainClass\nassemblyOutputPath            assemblyOption\"><pre class=\"notranslate\"><code>assemblyJarName               test                          mainClass\nassemblyOutputPath            assemblyOption\n</code></pre></div>\n<p dir=\"auto\">And here is the list of the keys you can rewite that are scoped globally:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"assemblyAppendContentHash     assemblyCacheOutput           assemblyShadeRules\nassemblyExcludedJars          assemblyMergeStrategy         assemblyRepeatableBuild\"><pre class=\"notranslate\"><code>assemblyAppendContentHash     assemblyCacheOutput           assemblyShadeRules\nassemblyExcludedJars          assemblyMergeStrategy         assemblyRepeatableBuild\n</code></pre></div>\n<p dir=\"auto\">Keys scoped to the subproject should be placed in <code>.settings(...)</code> whereas the globally scoped keys can either be placed inside of <code>.settings(...)</code> or scoped using <code>ThisBuild / </code> to be shared across multiple subprojects.</p>\n<p dir=\"auto\">For example the name of the jar can be set as follows in build.sbt:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"lazy val app = (project in file(&quot;app&quot;))\n  .settings(\n    assembly / assemblyJarName := &quot;something.jar&quot;,\n    // more settings here ...\n  )\"><pre><span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">app</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>app<span class=\"pl-pds\">\"</span></span>))\n  .settings(\n    assembly <span class=\"pl-k\">/</span> assemblyJarName <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>something.jar<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> more settings here ...</span>\n  )</pre></div>\n<p dir=\"auto\">To set an explicit main class,</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"lazy val app = (project in file(&quot;app&quot;))\n  .settings(\n    assembly / mainClass := Some(&quot;com.example.Main&quot;),\n    // more settings here ...\n  )\"><pre><span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">app</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>app<span class=\"pl-pds\">\"</span></span>))\n  .settings(\n    assembly <span class=\"pl-k\">/</span> mainClass <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-en\">Some</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.example.Main<span class=\"pl-pds\">\"</span></span>),\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> more settings here ...</span>\n  )</pre></div>\n<p dir=\"auto\">To run the test during assembly,</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"lazy val app = (project in file(&quot;app&quot;))\n  .settings(\n    assembly / test := (Test / test).value,\n    // more settings here ...\n  )\"><pre><span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">app</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>app<span class=\"pl-pds\">\"</span></span>))\n  .settings(\n    assembly <span class=\"pl-k\">/</span> test <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> (<span class=\"pl-en\">Test</span> <span class=\"pl-k\">/</span> test).value,\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> more settings here ...</span>\n  )</pre></div>\n<p dir=\"auto\">Excluding an explicit main class from your assembly requires something a little bit different though</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"lazy val app = (project in file(&quot;app&quot;))\n  .settings(\n    assembly / packageOptions ~= { pos =&gt;\n      pos.filterNot { po =&gt;\n        po.isInstanceOf[Package.MainClass]\n      }\n    },\n    // more settings here ...\n  )\"><pre><span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">app</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>app<span class=\"pl-pds\">\"</span></span>))\n  .settings(\n    assembly <span class=\"pl-k\">/</span> packageOptions <span class=\"pl-k\">~</span><span class=\"pl-k\">=</span> { pos <span class=\"pl-k\">=&gt;</span>\n      pos.filterNot { po <span class=\"pl-k\">=&gt;</span>\n        po.<span class=\"pl-c1\">isInstanceOf</span>[<span class=\"pl-en\">Package</span>.<span class=\"pl-en\">MainClass</span>]\n      }\n    },\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> more settings here ...</span>\n  )</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-merge-strategy\" class=\"anchor\" aria-hidden=\"true\" href=\"#merge-strategy\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Merge Strategy</h3>\n<p dir=\"auto\">If multiple files share the same relative path (e.g. a resource named\n<code>application.conf</code> in multiple dependency JARs), the default strategy is to\nverify that all candidates have the same contents and error out otherwise.\nThis behavior can be configured on a per-path basis using either one\nof the following built-in strategies or writing a custom one:</p>\n<ul dir=\"auto\">\n<li><code>MergeStrategy.deduplicate</code> is the default described above</li>\n<li><code>MergeStrategy.first</code> picks the first of the matching files in classpath order</li>\n<li><code>MergeStrategy.last</code> picks the last one</li>\n<li><code>MergeStrategy.singleOrError</code> bails out with an error message on conflict</li>\n<li><code>MergeStrategy.concat</code> simply concatenates all matching files and includes the result. There is also an overload that accepts a line separator for formatting the result</li>\n<li><code>MergeStrategy.filterDistinctLines</code> also concatenates, but leaves out duplicates along the way. There is also an overload that accepts a <code>Charset</code> for reading the lines</li>\n<li><code>MergeStrategy.rename</code> renames the files originating from jar files</li>\n<li><code>MergeStrategy.discard</code> simply discards matching files</li>\n<li><code>MergeStrategy.preferProject</code> will choose the first project file over library files if present. Otherwise, it works like <code>MergeStrategy.first</code></li>\n</ul>\n<p dir=\"auto\">The mapping of path names to merge strategies is done via the setting\n<code>assemblyMergeStrategy</code> which can be augmented as follows:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ThisBuild / assemblyMergeStrategy := {\n  case PathList(&quot;javax&quot;, &quot;servlet&quot;, xs @ _*)         =&gt; MergeStrategy.first\n  case PathList(ps @ _*) if ps.last endsWith &quot;.html&quot; =&gt; MergeStrategy.first\n  case &quot;application.conf&quot;                            =&gt; MergeStrategy.concat\n  case &quot;unwanted.txt&quot;                                =&gt; MergeStrategy.discard\n  case x =&gt;\n    val oldStrategy = (ThisBuild / assemblyMergeStrategy).value\n    oldStrategy(x)\n}\"><pre><span class=\"pl-en\">ThisBuild</span> <span class=\"pl-k\">/</span> assemblyMergeStrategy <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> {\n  <span class=\"pl-k\">case</span> <span class=\"pl-en\">PathList</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>javax<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>servlet<span class=\"pl-pds\">\"</span></span>, xs <span class=\"pl-k\">@</span> _<span class=\"pl-k\">*</span>)         <span class=\"pl-k\">=&gt;</span> <span class=\"pl-en\">MergeStrategy</span>.first\n  <span class=\"pl-k\">case</span> <span class=\"pl-en\">PathList</span>(ps <span class=\"pl-k\">@</span> _<span class=\"pl-k\">*</span>) <span class=\"pl-k\">if</span> ps.last endsWith <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.html<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">=&gt;</span> <span class=\"pl-en\">MergeStrategy</span>.first\n  <span class=\"pl-k\">case</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>application.conf<span class=\"pl-pds\">\"</span></span>                            <span class=\"pl-k\">=&gt;</span> <span class=\"pl-en\">MergeStrategy</span>.concat\n  <span class=\"pl-k\">case</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>unwanted.txt<span class=\"pl-pds\">\"</span></span>                                <span class=\"pl-k\">=&gt;</span> <span class=\"pl-en\">MergeStrategy</span>.discard\n  <span class=\"pl-k\">case</span> x <span class=\"pl-k\">=&gt;</span>\n    <span class=\"pl-k\">val</span> <span class=\"pl-smi\">oldStrategy</span> <span class=\"pl-k\">=</span> (<span class=\"pl-en\">ThisBuild</span> <span class=\"pl-k\">/</span> assemblyMergeStrategy).value\n    oldStrategy(x)\n}</pre></div>\n<p dir=\"auto\"><strong>NOTE</strong>:</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Actually, a merge strategy serves two purposes:</p>\n<ul dir=\"auto\">\n<li>To merge conflicting files</li>\n<li>To transform a single file (despite the naming), such as in the case of a <code>MergeStrategy.rename</code>. Sometimes, the transformation is a pass-through, as in the case of a <code>MergeStrategy.deduplicate</code> if there are no conflicts on a <code>target</code> path.</li>\n</ul>\n</li>\n<li>\n<p dir=\"auto\"><code>ThisBuild / assemblyMergeStrategy</code> expects a function. You can't do <code>ThisBuild / assemblyMergeStrategy := MergeStrategy.first</code>!</p>\n</li>\n<li>\n<p dir=\"auto\">Some files must be discarded or renamed otherwise to avoid breaking the zip (due to duplicate file name) or the legal license. Delegate default handling to <code>(ThisBuild / assemblyMergeStrategy)</code> as the above pattern matching example.</p>\n</li>\n<li>\n<p dir=\"auto\">Renames are processed first, since renamed file targets might match more merge patterns afterwards. By default, LICENSEs and READMEs are renamed before applying every other merge strategy. If you need a custom logic for renaming, create a new rename merge strategy so it is processsed first, along with the custom logic. See how to create custom <code>MergeStrategy</code>s in a later section of this README.</p>\n</li>\n<li>\n<p dir=\"auto\">There is an edge case that may occasionally fail. If a project has a file that has the same relative path as a directory to be written, an error notification will be written to the console as shown below. To resolve this, create a shade rule or a new merge strategy.</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  [error] Files to be written at 'shadeio' have the same name as directories to be written:\n  [error]   Jar name = commons-io-2.4.jar, jar org = commons-io, entry target = shadeio/input/Tailer.class (from original source = org/apache/commons/io/input/Tailer.class)\n  [error]   Project name = foo, target = shadeio\"><pre>  [error] Files to be written at <span class=\"pl-s\"><span class=\"pl-pds\">'</span>shadeio<span class=\"pl-pds\">'</span></span> have the same name as directories to be written:\n  [error]   Jar name = commons-io-2.4.jar, jar org = commons-io, entry target = shadeio/input/Tailer.class (from original <span class=\"pl-c1\">source</span> = org/apache/commons/io/input/Tailer.class)\n  [error]   Project name = foo, target = shadeio</pre></div>\n</li>\n</ul>\n<p dir=\"auto\">By the way, the first case pattern in the above using <code>PathList(...)</code> is how you can pick <code>javax/servlet/*</code> from the first jar. If the default <code>MergeStrategy.deduplicate</code> is not working for you, that likely means you have multiple versions of some library pulled by your dependency graph. The real solution is to fix that dependency graph. You can work around it by <code>MergeStrategy.first</code> but don't be surprised when you see <code>ClassNotFoundException</code>.</p>\n<p dir=\"auto\">Here is the default:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  val defaultMergeStrategy: String =&gt; MergeStrategy = {\n    case x if Assembly.isConfigFile(x) =&gt;\n      MergeStrategy.concat\n    case PathList(ps @ _*) if Assembly.isReadme(ps.last) || Assembly.isLicenseFile(ps.last) =&gt;\n      MergeStrategy.rename\n    case PathList(&quot;META-INF&quot;, xs @ _*) =&gt;\n      (xs map {_.toLowerCase}) match {\n        case (&quot;manifest.mf&quot; :: Nil) | (&quot;index.list&quot; :: Nil) | (&quot;dependencies&quot; :: Nil) =&gt;\n          MergeStrategy.discard\n        case ps @ (x :: xs) if ps.last.endsWith(&quot;.sf&quot;) || ps.last.endsWith(&quot;.dsa&quot;) =&gt;\n          MergeStrategy.discard\n        case &quot;plexus&quot; :: xs =&gt;\n          MergeStrategy.discard\n        case &quot;services&quot; :: xs =&gt;\n          MergeStrategy.filterDistinctLines\n        case (&quot;spring.schemas&quot; :: Nil) | (&quot;spring.handlers&quot; :: Nil) =&gt;\n          MergeStrategy.filterDistinctLines\n        case _ =&gt; MergeStrategy.deduplicate\n      }\n    case _ =&gt; MergeStrategy.deduplicate\n  }\"><pre>  <span class=\"pl-k\">val</span> <span class=\"pl-smi\">defaultMergeStrategy</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">String</span> <span class=\"pl-k\">=&gt;</span> <span class=\"pl-en\">MergeStrategy</span> <span class=\"pl-k\">=</span> {\n    <span class=\"pl-k\">case</span> x <span class=\"pl-k\">if</span> <span class=\"pl-en\">Assembly</span>.isConfigFile(x) <span class=\"pl-k\">=&gt;</span>\n      <span class=\"pl-en\">MergeStrategy</span>.concat\n    <span class=\"pl-k\">case</span> <span class=\"pl-en\">PathList</span>(ps <span class=\"pl-k\">@</span> _<span class=\"pl-k\">*</span>) <span class=\"pl-k\">if</span> <span class=\"pl-en\">Assembly</span>.isReadme(ps.last) <span class=\"pl-k\">||</span> <span class=\"pl-en\">Assembly</span>.isLicenseFile(ps.last) <span class=\"pl-k\">=&gt;</span>\n      <span class=\"pl-en\">MergeStrategy</span>.rename\n    <span class=\"pl-k\">case</span> <span class=\"pl-en\">PathList</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>META-INF<span class=\"pl-pds\">\"</span></span>, xs <span class=\"pl-k\">@</span> _<span class=\"pl-k\">*</span>) <span class=\"pl-k\">=&gt;</span>\n      (xs map {_.toLowerCase}) <span class=\"pl-k\">match</span> {\n        <span class=\"pl-k\">case</span> (<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>manifest.mf<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">::</span> <span class=\"pl-en\">Nil</span>) <span class=\"pl-k\">|</span> (<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>index.list<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">::</span> <span class=\"pl-en\">Nil</span>) <span class=\"pl-k\">|</span> (<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>dependencies<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">::</span> <span class=\"pl-en\">Nil</span>) <span class=\"pl-k\">=&gt;</span>\n          <span class=\"pl-en\">MergeStrategy</span>.discard\n        <span class=\"pl-k\">case</span> ps <span class=\"pl-k\">@</span> (x <span class=\"pl-k\">::</span> xs) <span class=\"pl-k\">if</span> ps.last.endsWith(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.sf<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">||</span> ps.last.endsWith(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.dsa<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">=&gt;</span>\n          <span class=\"pl-en\">MergeStrategy</span>.discard\n        <span class=\"pl-k\">case</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>plexus<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">::</span> xs <span class=\"pl-k\">=&gt;</span>\n          <span class=\"pl-en\">MergeStrategy</span>.discard\n        <span class=\"pl-k\">case</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>services<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">::</span> xs <span class=\"pl-k\">=&gt;</span>\n          <span class=\"pl-en\">MergeStrategy</span>.filterDistinctLines\n        <span class=\"pl-k\">case</span> (<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>spring.schemas<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">::</span> <span class=\"pl-en\">Nil</span>) <span class=\"pl-k\">|</span> (<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>spring.handlers<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">::</span> <span class=\"pl-en\">Nil</span>) <span class=\"pl-k\">=&gt;</span>\n          <span class=\"pl-en\">MergeStrategy</span>.filterDistinctLines\n        <span class=\"pl-k\">case</span> _ <span class=\"pl-k\">=&gt;</span> <span class=\"pl-en\">MergeStrategy</span>.deduplicate\n      }\n    <span class=\"pl-k\">case</span> _ <span class=\"pl-k\">=&gt;</span> <span class=\"pl-en\">MergeStrategy</span>.deduplicate\n  }</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-creating-a-custom-merge-strategy-since-200\" class=\"anchor\" aria-hidden=\"true\" href=\"#creating-a-custom-merge-strategy-since-200\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Creating a custom Merge Strategy (since 2.0.0)</h4>\n<p dir=\"auto\">Custom merge strategies can be plugged-in to the <code>assemblyMergeStrategy</code> function, for example:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"...\nThisBuild / assemblyMergeStrategy := {\n  case &quot;matching-file&quot; =&gt; CustomMergeStrategy(&quot;my-custom-merge-strat&quot;) { conflicts =&gt;\n    // NB! same as MergeStrategy.discard\n    Right(Vector.empty)\n  }\n  case x   =&gt;\n    val oldStrategy = (ThisBuild / assemblyMergeStrategy).value\n    oldStrategy(x)\n}\n...\"><pre>...\n<span class=\"pl-en\">ThisBuild</span> <span class=\"pl-k\">/</span> assemblyMergeStrategy <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> {\n  <span class=\"pl-k\">case</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>matching-file<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">=&gt;</span> <span class=\"pl-en\">CustomMergeStrategy</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>my-custom-merge-strat<span class=\"pl-pds\">\"</span></span>) { conflicts <span class=\"pl-k\">=&gt;</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> NB! same as MergeStrategy.discard</span>\n    <span class=\"pl-en\">Right</span>(<span class=\"pl-en\">Vector</span>.empty)\n  }\n  <span class=\"pl-k\">case</span> x   <span class=\"pl-k\">=&gt;</span>\n    <span class=\"pl-k\">val</span> <span class=\"pl-smi\">oldStrategy</span> <span class=\"pl-k\">=</span> (<span class=\"pl-en\">ThisBuild</span> <span class=\"pl-k\">/</span> assemblyMergeStrategy).value\n    oldStrategy(x)\n}\n...</pre></div>\n<p dir=\"auto\">The <code>CustomMergeStrategy</code> accepts a <code>name</code> and a <code>notifyIfGTE</code> that affects how the result is reported in the logs.\nPlease see the scaladoc for more details.</p>\n<p dir=\"auto\">Finally, to perform the actual merge/transformation logic, a function has to be provided. The function acceptsa <code>Vector</code> of <code>Dependency</code>, where you can access the <code>target</code> of type <code>String</code> and the byte payload of type <code>LazyInputStream</code>, which is just a type alias for <code>() =&gt; InputStream</code>.</p>\n<p dir=\"auto\">The input <code>Dependency</code> also has two subtypes that you can pattern match on:</p>\n<ul dir=\"auto\">\n<li><code>Project</code> represents an internal/project dependency</li>\n<li><code>Library</code> represents an external/library dependency that also contains the <code>ModuleCoordinate</code> (jar org, name and version) it originated from</li>\n</ul>\n<p dir=\"auto\">To create a merge result, a <code>Vector</code> of <code>JarEntry</code> must be returned wrapped in an <code>Either.Right</code>, or empty to discard these conflicts from the final jar.\n<code>JarEntry</code> only has two fields, a <code>target</code> of type <code>String</code> and the byte payload of type lazy <code>InputStream</code>.</p>\n<p dir=\"auto\">To fail the assembly, return an <code>Either.Left</code> with an error message.</p>\n<p dir=\"auto\">There is also a factory specifically for renames, so it gets processed first along with the built-in rename merge strategy, before other merge strategies, as mentioned in a previous section. It accepts a function <code>Dependency -&gt; String</code>, so the <code>Dependency</code> can be inspected and a new <code>target</code> path returned.</p>\n<p dir=\"auto\">Here is an example that appends a <code>String</code> to the original <code>target</code> path of the matched file.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"...\ncase &quot;matching-file&quot; =&gt;\n  import sbtassembly.Assembly.{Project, Library}\n  CustomMergeStrategy.rename {\n    case dependency@(_: Project) =&gt; dependency.target + &quot;_from_project&quot;\n    case dependency@(_: Library) =&gt; dependency.target + &quot;_from_library&quot;\n  }\n...\"><pre>...\n<span class=\"pl-k\">case</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>matching-file<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">=&gt;</span>\n  <span class=\"pl-k\">import</span> <span class=\"pl-en\">sbtassembly</span>.<span class=\"pl-en\">Assembly</span>.{<span class=\"pl-en\">Project</span>, <span class=\"pl-en\">Library</span>}\n  <span class=\"pl-en\">CustomMergeStrategy</span>.rename {\n    <span class=\"pl-k\">case</span> dependency<span class=\"pl-k\">@</span>(<span class=\"pl-v\">_</span>: <span class=\"pl-en\">Project</span>) <span class=\"pl-k\">=&gt;</span> dependency.target <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_from_project<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-k\">case</span> dependency<span class=\"pl-k\">@</span>(<span class=\"pl-v\">_</span>: <span class=\"pl-en\">Library</span>) <span class=\"pl-k\">=&gt;</span> dependency.target <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_from_library<span class=\"pl-pds\">\"</span></span>\n  }\n...</pre></div>\n<p dir=\"auto\">For more information/examples, see the scaladoc/source code in <code>sbtassembly.Assembly</code> and <code>sbtassembly.MergeStrategy</code>.</p>\n<p dir=\"auto\"><strong>NOTE</strong>:</p>\n<ul dir=\"auto\">\n<li>The <code>name</code> parameter will be distinguished from a built-in strategy. For example, the <code>name</code>=<code>First</code> will execute its custom logic along with the built-in <code>MergeStrategy.first</code>. They cannot cancel/override one another. In fact, the custom merge strategy will be logged as <code>First (Custom)</code> for clarity.</li>\n<li>However, you should still choose a unique <code>name</code> for a custom merge strategy within the build. Even if all built-in and custom merge strategies are guaranteed to execute if they match a pattern regardless of their <code>name</code>s, similarly-named custom merge strategies will have their log reports joined. YMMV, but you are encouraged to <strong>avoid duplicate names</strong>.</li>\n</ul>\n<h4 dir=\"auto\"><a id=\"user-content-third-party-merge-strategy-plugins\" class=\"anchor\" aria-hidden=\"true\" href=\"#third-party-merge-strategy-plugins\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Third Party Merge Strategy Plugins</h4>\n<p dir=\"auto\"><del>Support for special-case merge strategies beyond the generic scope can be\nprovided by companion plugins, below is a non-exhaustive list:</del></p>\n<p dir=\"auto\"><del>* Log4j2 Plugin Caches (<code>Log4j2Plugins.dat</code>):</del>\n<del><a href=\"https://github.com/idio/sbt-assembly-log4j2\">https://github.com/idio/sbt-assembly-log4j2</a></del></p>\n<p dir=\"auto\">*The log4j plugin needs to be updated for sbt-assembly version 2.0.0</p>\n<h3 dir=\"auto\"><a id=\"user-content-shading\" class=\"anchor\" aria-hidden=\"true\" href=\"#shading\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Shading</h3>\n<p dir=\"auto\">sbt-assembly can shade classes from your projects or from the library dependencies.\nBacked by <a href=\"https://code.google.com/archive/p/jarjar/wikis/CommandLineDocs.wiki\" rel=\"nofollow\">Jar Jar Links</a>, bytecode transformation (via ASM) is used to change references to the renamed classes.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ThisBuild / assemblyShadeRules := Seq(\n  ShadeRule.rename(&quot;org.apache.commons.io.**&quot; -&gt; &quot;shadeio.@1&quot;).inAll\n)\"><pre><span class=\"pl-en\">ThisBuild</span> <span class=\"pl-k\">/</span> assemblyShadeRules <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-en\">Seq</span>(\n  <span class=\"pl-en\">ShadeRule</span>.rename(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>org.apache.commons.io.**<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>shadeio.@1<span class=\"pl-pds\">\"</span></span>).inAll\n)</pre></div>\n<p dir=\"auto\">Here are the shade rules:</p>\n<ul dir=\"auto\">\n<li><code>ShadeRule.rename(\"x.**\" -&gt; \"y.@1\", ...).inAll</code> This is the main rule.</li>\n<li><code>ShadeRule.zap(\"a.b.c\").inAll</code></li>\n<li><code>ShadeRule.keep(\"x.**\").inAll</code></li>\n</ul>\n<p dir=\"auto\">The main <code>ShadeRule.rename</code> rule is used to rename classes. All references to the renamed classes will also be updated. If a class name is matched by more than one rule, only the first one will apply.\nThe <code>rename</code> rules takes a vararg of String pairs in <code>&lt;pattern&gt; -&gt; &lt;result&gt;</code> format:</p>\n<ul dir=\"auto\">\n<li><code>&lt;pattern&gt;</code> is a class name with optional wildcards. <code>**</code> will match against any valid class name substring. To match a single package component (by excluding <code>.</code> from the match), a single <code>*</code> may be used instead.</li>\n<li><code>&lt;result&gt;</code> is a class name which can optionally reference the substrings matched by the wildcards. A numbered reference is available for every <code>*</code> or <code>**</code> in the <code>&lt;pattern&gt;</code>, starting from left to right: <code>@1</code>, <code>@2</code>, etc. A special <code>@0</code> reference contains the entire matched class name.</li>\n</ul>\n<p dir=\"auto\">Instead of <code>.inAll</code>, call <code>.inProject</code> to match your project source, or call <code>.inLibrary(\"commons-io\" % \"commons-io\" % \"2.4\", ...)</code> to match specific library dependencies. <code>inProject</code> and <code>inLibrary(...)</code> can be chained.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ThisBuild / assemblyShadeRules := Seq(\n  ShadeRule.rename(&quot;org.apache.commons.io.**&quot; -&gt; &quot;shadeio.@1&quot;).inLibrary(&quot;commons-io&quot; % &quot;commons-io&quot; % &quot;2.4&quot;, ...).inProject\n)\"><pre><span class=\"pl-en\">ThisBuild</span> <span class=\"pl-k\">/</span> assemblyShadeRules <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-en\">Seq</span>(\n  <span class=\"pl-en\">ShadeRule</span>.rename(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>org.apache.commons.io.**<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>shadeio.@1<span class=\"pl-pds\">\"</span></span>).inLibrary(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>commons-io<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>commons-io<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>2.4<span class=\"pl-pds\">\"</span></span>, ...).inProject\n)</pre></div>\n<p dir=\"auto\">The <code>ShadeRule.zap</code> rule causes any matched class to be removed from the resulting jar file. All zap rules are processed before renaming rules.</p>\n<p dir=\"auto\">The <code>ShadeRule.keep</code> rule marks all matched classes as \"roots\". If any keep rules are defined all classes which are not reachable from the roots via dependency analysis are discarded when writing the output jar. This is the last step in the process, after renaming and zapping.</p>\n<p dir=\"auto\">To see the verbose output for shading:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"lazy val app = (project in file(&quot;app&quot;))\n  .settings(\n    assembly / logLevel := Level.Debug\n    // more settings here ...\n  )\"><pre><span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">app</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>app<span class=\"pl-pds\">\"</span></span>))\n  .settings(\n    assembly <span class=\"pl-k\">/</span> logLevel <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-en\">Level</span>.<span class=\"pl-en\">Debug</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> more settings here ...</span>\n  )</pre></div>\n<h4 dir=\"auto\"><a id=\"user-content-scala-libraries\" class=\"anchor\" aria-hidden=\"true\" href=\"#scala-libraries\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Scala libraries</h4>\n<p dir=\"auto\">Scala classes contain an annotation which, among other things, contain all symbols referenced in that class. As of sbt-assembly XXX the rename rules\nwill be applied to these annotations as well which makes it possible to compile or reflect against a shaded library.</p>\n<p dir=\"auto\">This is currently limited to renaming packages. Renaming class names will not work and cause compiler errors when compiling against the shaded library.</p>\n<h2 dir=\"auto\"><a id=\"user-content-excluding-jars-and-files\" class=\"anchor\" aria-hidden=\"true\" href=\"#excluding-jars-and-files\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Excluding JARs and files</h2>\n<p dir=\"auto\">If you need to tell sbt-assembly to ignore JARs, you're probably doing it wrong.\nassembly task grabs deps JARs from your project's classpath. Try fixing the classpath first.</p>\n<h3 dir=\"auto\"><a id=\"user-content--provided-configuration\" class=\"anchor\" aria-hidden=\"true\" href=\"#-provided-configuration\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>% \"provided\" configuration</h3>\n<p dir=\"auto\">If you're trying to exclude JAR files that are already part of the container (like Spark), consider scoping the dependent library to <code>\"provided\"</code> configuration:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"libraryDependencies ++= Seq(\n  &quot;org.apache.spark&quot; %% &quot;spark-core&quot; % &quot;0.8.0-incubating&quot; % &quot;provided&quot;,\n  &quot;org.apache.hadoop&quot; % &quot;hadoop-client&quot; % &quot;2.0.0-cdh4.4.0&quot; % &quot;provided&quot;\n)\"><pre>libraryDependencies <span class=\"pl-k\">++</span><span class=\"pl-k\">=</span> <span class=\"pl-en\">Seq</span>(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>org.apache.spark<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>spark-core<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0.8.0-incubating<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>provided<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>org.apache.hadoop<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hadoop-client<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>2.0.0-cdh4.4.0<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>provided<span class=\"pl-pds\">\"</span></span>\n)</pre></div>\n<p dir=\"auto\">Maven defines <a href=\"http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope\" rel=\"nofollow\">\"provided\"</a> as:</p>\n<blockquote>\n<p dir=\"auto\">This is much like <code>compile</code>, but indicates you expect the JDK or a container to provide the dependency at runtime. For example, when building a web application for the Java Enterprise Edition, you would set the dependency on the Servlet API and related Java EE APIs to scope <code>provided</code> because the web container provides those classes. This scope is only available on the compilation and test classpath, and is not transitive.</p>\n</blockquote>\n<p dir=\"auto\">The dependency will be part of compilation and test, but excluded from the runtime. If you're using Spark and want to include \"provided\" dependencies back to <code>run</code>, <a href=\"https://github.com/douglaz\">@douglaz</a> has come up with a one-liner solution on StackOverflow <a href=\"http://stackoverflow.com/a/21803413/3827\" rel=\"nofollow\">sbt: how can I add \"provided\" dependencies back to run/test tasks' classpath?</a>:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Compile / run := Defaults.runTask(Compile / fullClasspath, Compile / run / mainClass, Compile / run / runner).evaluated\"><pre><span class=\"pl-en\">Compile</span> <span class=\"pl-k\">/</span> run <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-en\">Defaults</span>.runTask(<span class=\"pl-en\">Compile</span> <span class=\"pl-k\">/</span> fullClasspath, <span class=\"pl-en\">Compile</span> <span class=\"pl-k\">/</span> run <span class=\"pl-k\">/</span> mainClass, <span class=\"pl-en\">Compile</span> <span class=\"pl-k\">/</span> run <span class=\"pl-k\">/</span> runner).evaluated</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-exclude-specific-transitive-deps\" class=\"anchor\" aria-hidden=\"true\" href=\"#exclude-specific-transitive-deps\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Exclude specific transitive deps</h3>\n<p dir=\"auto\">You might be thinking about excluding JAR files because of the merge conflicts. Merge conflict of <code>*.class</code> files indicate pathological classpath, often due to non-modular bundle JAR files or <a href=\"http://www.slf4j.org/legacy.html\" rel=\"nofollow\">SLF4J</a>, not the problem with assembly. Here's what happens when you try to create a über JAR with Spark included:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[error] (*:assembly) deduplicate: different file contents found in the following:\n[error] /Users/foo/.ivy2/cache/org.eclipse.jetty.orbit/javax.servlet/orbits/javax.servlet-2.5.0.v201103041518.jar:javax/servlet/SingleThreadModel.class\n[error] /Users/foo/.ivy2/cache/org.mortbay.jetty/servlet-api/jars/servlet-api-2.5-20081211.jar:javax/servlet/SingleThreadModel.class\"><pre class=\"notranslate\"><code>[error] (*:assembly) deduplicate: different file contents found in the following:\n[error] /Users/foo/.ivy2/cache/org.eclipse.jetty.orbit/javax.servlet/orbits/javax.servlet-2.5.0.v201103041518.jar:javax/servlet/SingleThreadModel.class\n[error] /Users/foo/.ivy2/cache/org.mortbay.jetty/servlet-api/jars/servlet-api-2.5-20081211.jar:javax/servlet/SingleThreadModel.class\n</code></pre></div>\n<p dir=\"auto\">In the above case two separate JAR files <code>javax.servlet-2.5.0.v201103041518.jar</code> and <code>servlet-api-2.5-20081211.jar</code> are defining <code>javax/servlet/SingleThreadModel.class</code>! Similarly also conflicts on <a href=\"http://commons.apache.org/proper/commons-beanutils/\" rel=\"nofollow\">common-beanutils</a> and <a href=\"https://github.com/EsotericSoftware/minlog\">EsotericSoftware/minlog</a>. Here's how to evict specific transitive deps:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"libraryDependencies ++= Seq(\n  (&quot;org.apache.spark&quot; %% &quot;spark-core&quot; % &quot;0.8.0-incubating&quot;).\n    exclude(&quot;org.mortbay.jetty&quot;, &quot;servlet-api&quot;).\n    exclude(&quot;commons-beanutils&quot;, &quot;commons-beanutils-core&quot;).\n    exclude(&quot;commons-collections&quot;, &quot;commons-collections&quot;).\n    exclude(&quot;commons-logging&quot;, &quot;commons-logging&quot;).\n    exclude(&quot;com.esotericsoftware.minlog&quot;, &quot;minlog&quot;)\n)\"><pre>libraryDependencies <span class=\"pl-k\">++</span><span class=\"pl-k\">=</span> <span class=\"pl-en\">Seq</span>(\n  (<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>org.apache.spark<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>spark-core<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0.8.0-incubating<span class=\"pl-pds\">\"</span></span>).\n    exclude(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>org.mortbay.jetty<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>servlet-api<span class=\"pl-pds\">\"</span></span>).\n    exclude(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>commons-beanutils<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>commons-beanutils-core<span class=\"pl-pds\">\"</span></span>).\n    exclude(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>commons-collections<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>commons-collections<span class=\"pl-pds\">\"</span></span>).\n    exclude(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>commons-logging<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>commons-logging<span class=\"pl-pds\">\"</span></span>).\n    exclude(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.esotericsoftware.minlog<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>minlog<span class=\"pl-pds\">\"</span></span>)\n)</pre></div>\n<p dir=\"auto\">See sbt's <a href=\"https://www.scala-sbt.org/release/docs/Library-Management.html#Exclude+Transitive+Dependencies\" rel=\"nofollow\">Exclude Transitive Dependencies</a> for more details.</p>\n<p dir=\"auto\">Sometimes it takes a bit of detective work to figure out which transitive deps to exclude. Play! comes with <code>dist</code> task, so <code>assembly</code> is not needed, but suppose we wanted to run <code>assembly</code>. It brings in signpost-commonshttp4, which leads to commons-logging. This conflicts with jcl-over-slf4j, which re-implements the logging API. Since the deps are added via build.sbt and <code>playScalaSettings</code>, here's one way to work around it:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"libraryDependencies ~= { _ map {\n  case m if m.organization == &quot;com.typesafe.play&quot; =&gt;\n    m.exclude(&quot;commons-logging&quot;, &quot;commons-logging&quot;).\n      exclude(&quot;com.typesafe.play&quot;, &quot;sbt-link&quot;)\n  case m =&gt; m\n}}\"><pre>libraryDependencies <span class=\"pl-k\">~</span><span class=\"pl-k\">=</span> { _ map {\n  <span class=\"pl-k\">case</span> m <span class=\"pl-k\">if</span> m.organization <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.typesafe.play<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">=&gt;</span>\n    m.exclude(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>commons-logging<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>commons-logging<span class=\"pl-pds\">\"</span></span>).\n      exclude(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.typesafe.play<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sbt-link<span class=\"pl-pds\">\"</span></span>)\n  <span class=\"pl-k\">case</span> m <span class=\"pl-k\">=&gt;</span> m\n}}</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-excluding-specific-files\" class=\"anchor\" aria-hidden=\"true\" href=\"#excluding-specific-files\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Excluding specific files</h3>\n<p dir=\"auto\">To exclude specific files, customize merge strategy:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ThisBuild / assemblyMergeStrategy := {\n  case PathList(&quot;about.html&quot;) =&gt; MergeStrategy.rename\n  case x =&gt;\n    val oldStrategy = (ThisBuild / assemblyMergeStrategy).value\n    oldStrategy(x)\n}\"><pre><span class=\"pl-en\">ThisBuild</span> <span class=\"pl-k\">/</span> assemblyMergeStrategy <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> {\n  <span class=\"pl-k\">case</span> <span class=\"pl-en\">PathList</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>about.html<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">=&gt;</span> <span class=\"pl-en\">MergeStrategy</span>.rename\n  <span class=\"pl-k\">case</span> x <span class=\"pl-k\">=&gt;</span>\n    <span class=\"pl-k\">val</span> <span class=\"pl-smi\">oldStrategy</span> <span class=\"pl-k\">=</span> (<span class=\"pl-en\">ThisBuild</span> <span class=\"pl-k\">/</span> assemblyMergeStrategy).value\n    oldStrategy(x)\n}</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-splitting-your-project-and-deps-jars\" class=\"anchor\" aria-hidden=\"true\" href=\"#splitting-your-project-and-deps-jars\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Splitting your project and deps JARs</h3>\n<p dir=\"auto\">To make a JAR file containing only the external dependencies, type</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&gt; assemblyPackageDependency\"><pre class=\"notranslate\"><code>&gt; assemblyPackageDependency\n</code></pre></div>\n<p dir=\"auto\">This is intended to be used with a JAR that only contains your project</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"lazy val app = (project in file(&quot;app&quot;))\n  .settings(\n    assemblyPackageScala / assembleArtifact := false,\n    assemblyPackageDependency / assembleArtifact := false,\n\n    // or as follows\n    assembly / assemblyOption ~= {\n      _.withIncludeScala(false)\n       .withIncludeDependency(false)\n    },\n\n    // more settings here ...\n  )\"><pre><span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">app</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>app<span class=\"pl-pds\">\"</span></span>))\n  .settings(\n    assemblyPackageScala <span class=\"pl-k\">/</span> assembleArtifact <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n    assemblyPackageDependency <span class=\"pl-k\">/</span> assembleArtifact <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> or as follows</span>\n    assembly <span class=\"pl-k\">/</span> assemblyOption <span class=\"pl-k\">~</span><span class=\"pl-k\">=</span> {\n      _.withIncludeScala(<span class=\"pl-c1\">false</span>)\n       .withIncludeDependency(<span class=\"pl-c1\">false</span>)\n    },\n\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> more settings here ...</span>\n  )</pre></div>\n<p dir=\"auto\">NOTE: If you use <a href=\"http://docs.oracle.com/javase/7/docs/technotes/tools/solaris/java.html#jar\" rel=\"nofollow\"><code>-jar</code> option for <code>java</code></a>, it will ignore <code>-cp</code>, so if you have multiple JAR files you have to use <code>-cp</code> and pass the main class: <code>java -cp \"jar1.jar:jar2.jar\" Main</code></p>\n<h3 dir=\"auto\"><a id=\"user-content-excluding-scala-library-jars\" class=\"anchor\" aria-hidden=\"true\" href=\"#excluding-scala-library-jars\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Excluding Scala library JARs</h3>\n<p dir=\"auto\">To exclude Scala library (JARs that start with <code>scala-</code> and are included in the binary Scala distribution) to run with <code>scala</code> command,</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"lazy val app = (project in file(&quot;app&quot;))\n  .settings(\n    assemblyPackageScala / assembleArtifact := false,\n\n    // or as follows\n    assembly / assemblyOption ~= {\n      _.withIncludeScala(false)\n    },\n\n    // more settings here ...\n  )\"><pre><span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">app</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>app<span class=\"pl-pds\">\"</span></span>))\n  .settings(\n    assemblyPackageScala <span class=\"pl-k\">/</span> assembleArtifact <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>,\n\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> or as follows</span>\n    assembly <span class=\"pl-k\">/</span> assemblyOption <span class=\"pl-k\">~</span><span class=\"pl-k\">=</span> {\n      _.withIncludeScala(<span class=\"pl-c1\">false</span>)\n    },\n\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> more settings here ...</span>\n  )</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-assemblyexcludedjars\" class=\"anchor\" aria-hidden=\"true\" href=\"#assemblyexcludedjars\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>assemblyExcludedJars</h3>\n<p dir=\"auto\">If all efforts fail, here's a way to exclude JAR files:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"lazy val app = (project in file(&quot;app&quot;))\n  .settings(\n    assembly / assemblyExcludedJars := {\n      val cp = (assembly / fullClasspath).value\n      cp filter {_.data.getName == &quot;compile-0.1.0.jar&quot;}\n    },\n\n    // more settings here ...\n  )\"><pre><span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">app</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>app<span class=\"pl-pds\">\"</span></span>))\n  .settings(\n    assembly <span class=\"pl-k\">/</span> assemblyExcludedJars <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> {\n      <span class=\"pl-k\">val</span> <span class=\"pl-smi\">cp</span> <span class=\"pl-k\">=</span> (assembly <span class=\"pl-k\">/</span> fullClasspath).value\n      cp filter {_.data.getName <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>compile-0.1.0.jar<span class=\"pl-pds\">\"</span></span>}\n    },\n\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> more settings here ...</span>\n  )</pre></div>\n<h2 dir=\"auto\"><a id=\"user-content-other-things\" class=\"anchor\" aria-hidden=\"true\" href=\"#other-things\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Other Things</h2>\n<h3 dir=\"auto\"><a id=\"user-content-content-hash\" class=\"anchor\" aria-hidden=\"true\" href=\"#content-hash\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Content hash</h3>\n<p dir=\"auto\">You can also append SHA-1 fingerprint to the assembly file name, this may help you to determine whether it has changed and, for example, if it's necessary to deploy the dependencies,</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ThisBuild / assemblyAppendContentHash := true\n\n// or\nlazy val app = (project in file(&quot;app&quot;))\n  .settings(\n     assembly / assemblyOption ~= { _.withAppendContentHash(true) }\n  )\"><pre><span class=\"pl-en\">ThisBuild</span> <span class=\"pl-k\">/</span> assemblyAppendContentHash <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> or</span>\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">app</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>app<span class=\"pl-pds\">\"</span></span>))\n  .settings(\n     assembly <span class=\"pl-k\">/</span> assemblyOption <span class=\"pl-k\">~</span><span class=\"pl-k\">=</span> { _.withAppendContentHash(<span class=\"pl-c1\">true</span>) }\n  )</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-caching\" class=\"anchor\" aria-hidden=\"true\" href=\"#caching\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Caching</h3>\n<p dir=\"auto\">Caching is implemented by checking all the input dependencies (class and jar files)' latest timestamp and some configuration changes from the build file.</p>\n<p dir=\"auto\">In addition the über JAR is cached so its timestamp changes only when the input changes.</p>\n<p dir=\"auto\">To disable caching:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ThisBuild / assemblyCacheOutput := false\n\n// or\nlazy val app = (project in file(&quot;app&quot;))\n  .settings(\n     assembly / assemblyOption ~= { _.withCacheOutput(false) }\n  )\"><pre><span class=\"pl-en\">ThisBuild</span> <span class=\"pl-k\">/</span> assemblyCacheOutput <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> or</span>\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">app</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>app<span class=\"pl-pds\">\"</span></span>))\n  .settings(\n     assembly <span class=\"pl-k\">/</span> assemblyOption <span class=\"pl-k\">~</span><span class=\"pl-k\">=</span> { _.withCacheOutput(<span class=\"pl-c1\">false</span>) }\n  )</pre></div>\n<p dir=\"auto\"><strong>NOTE</strong>:</p>\n<ul dir=\"auto\">\n<li>Unfortunately, using a custom <code>MergeStrategy</code> other than <code>rename</code> will create a function in which the plugin cannot predict\nthe outcome. This custom function must always be executed if it matches a <code>PathList</code> pattern, and thus, <strong>will disable caching</strong>.</li>\n</ul>\n<h4 dir=\"auto\"><a id=\"user-content-jar-assembly-performance\" class=\"anchor\" aria-hidden=\"true\" href=\"#jar-assembly-performance\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Jar assembly performance</h4>\n<p dir=\"auto\">By default, the setting key <code>assemblyRepeatableBuild</code> is set to <code>true</code>. This ensures that the jar entries are assembled in a specific order, resulting in a consistent hash for the jar.</p>\n<p dir=\"auto\">There is actually a performance improvement to be gained if this setting is set to <code>false</code>, since jar entries will now be assembled in parallel. The trade-off is, the jar will not have a consistent hash, and thus, caching will not work.</p>\n<p dir=\"auto\">To set the repeatable build to false:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ThisBuild / assemblyRepeatableBuild := false\"><pre><span class=\"pl-en\">ThisBuild</span> <span class=\"pl-k\">/</span> assemblyRepeatableBuild <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span></pre></div>\n<p dir=\"auto\">If a repeatable build/consistent jar is not of much importance, one may avail of this feature for improved performance, especially for large projects.</p>\n<h3 dir=\"auto\"><a id=\"user-content-prepending-a-launch-script\" class=\"anchor\" aria-hidden=\"true\" href=\"#prepending-a-launch-script\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Prepending a launch script</h3>\n<p dir=\"auto\">Your can prepend a launch script to the über jar. This script will be a valid shell and batch script and will make the jar executable on Unix and Windows. If you enable the shebang the file will be detected as an executable under Linux but this will cause an error message to appear on Windows. On Windows just append a \".bat\" to the files name to make it executable.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import sbtassembly.AssemblyPlugin.defaultUniversalScript\n\nThisBuild / assemblyPrependShellScript := Some(defaultUniversalScript(shebang = false))\n\nlazy val app = (project in file(&quot;app&quot;))\n  .settings(\n     assembly / assemblyJarName := s&quot;${name.value}-${version.value}&quot;\n  )\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">sbtassembly</span>.<span class=\"pl-en\">AssemblyPlugin</span>.<span class=\"pl-en\">defaultUniversalScript</span>\n\n<span class=\"pl-en\">ThisBuild</span> <span class=\"pl-k\">/</span> assemblyPrependShellScript <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-en\">Some</span>(defaultUniversalScript(shebang <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>))\n\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">app</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>app<span class=\"pl-pds\">\"</span></span>))\n  .settings(\n     assembly <span class=\"pl-k\">/</span> assemblyJarName <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-k\">s</span><span class=\"pl-s\">\"</span>${name.value}<span class=\"pl-s\">-</span>${version.value}<span class=\"pl-s\">\"</span>\n  )</pre></div>\n<p dir=\"auto\">This will prepend the following shell script to the jar.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"(#!/usr/bin/env sh)\n@ 2&gt;/dev/null # 2&gt;nul &amp; echo off &amp; goto BOF\n:\nexec java -jar $JAVA_OPTS &quot;$0&quot; &quot;$@&quot;\nexit\n\n:BOF\n@echo off\njava -jar %JAVA_OPTS% &quot;%~dpnx0&quot; %*\nexit /B %errorlevel%\"><pre class=\"notranslate\"><code>(#!/usr/bin/env sh)\n@ 2&gt;/dev/null # 2&gt;nul &amp; echo off &amp; goto BOF\n:\nexec java -jar $JAVA_OPTS \"$0\" \"$@\"\nexit\n\n:BOF\n@echo off\njava -jar %JAVA_OPTS% \"%~dpnx0\" %*\nexit /B %errorlevel%\n</code></pre></div>\n<p dir=\"auto\">You can also choose to prepend just the shell script to the über jar as follows:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import sbtassembly.AssemblyPlugin.defaultShellScript\n\nThisBuild / assemblyPrependShellScript := Some(defaultShellScript)\n\nlazy val app = (project in file(&quot;app&quot;))\n  .settings(\n     assembly / assemblyJarName := s&quot;${name.value}-${version.value}&quot;\n  )\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">sbtassembly</span>.<span class=\"pl-en\">AssemblyPlugin</span>.<span class=\"pl-en\">defaultShellScript</span>\n\n<span class=\"pl-en\">ThisBuild</span> <span class=\"pl-k\">/</span> assemblyPrependShellScript <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-en\">Some</span>(defaultShellScript)\n\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">app</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>app<span class=\"pl-pds\">\"</span></span>))\n  .settings(\n     assembly <span class=\"pl-k\">/</span> assemblyJarName <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-k\">s</span><span class=\"pl-s\">\"</span>${name.value}<span class=\"pl-s\">-</span>${version.value}<span class=\"pl-s\">\"</span>\n  )</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-publishing-not-recommended\" class=\"anchor\" aria-hidden=\"true\" href=\"#publishing-not-recommended\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Publishing (Not Recommended)</h3>\n<p dir=\"auto\">Publishing über JARs out to the world is discouraged because non-modular JARs cause much sadness. One might think non-modularity is convenience but it quickly turns into a headache the moment your users step outside of Hello World example code. If you still wish to publish your assembled artifact along with the <code>publish</code> task\nand all of the other artifacts, add an <code>assembly</code> classifier (or other):</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"assembly / artifact := {\n  val art = (assembly / artifact).value\n  art.withClassifier(Some(&quot;assembly&quot;))\n}\n\naddArtifact(assembly / artifact, assembly)\"><pre>assembly <span class=\"pl-k\">/</span> artifact <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> {\n  <span class=\"pl-k\">val</span> <span class=\"pl-smi\">art</span> <span class=\"pl-k\">=</span> (assembly <span class=\"pl-k\">/</span> artifact).value\n  art.withClassifier(<span class=\"pl-en\">Some</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>assembly<span class=\"pl-pds\">\"</span></span>))\n}\n\naddArtifact(assembly <span class=\"pl-k\">/</span> artifact, assembly)</pre></div>\n<h3 dir=\"auto\"><a id=\"user-content-q-despite-the-concerned-friends-i-still-want-publish-über-jars-what-advice-do-you-have\" class=\"anchor\" aria-hidden=\"true\" href=\"#q-despite-the-concerned-friends-i-still-want-publish-über-jars-what-advice-do-you-have\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Q: Despite the concerned friends, I still want publish über JARs. What advice do you have?</h3>\n<p dir=\"auto\">You would likely need to set up a front business to lie about what dependencies you have in <code>pom.xml</code> and <code>ivy.xml</code>.\nTo do so, make a subproject for über JAR purpose only where you depend on the dependencies, and make a second cosmetic subproject that you use only for publishing purpose:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"lazy val uberJar = project\n  .enablePlugins(AssemblyPlugin)\n  .settings(\n    depend on the good stuff\n    publish / skip := true\n  )\n\nlazy val cosmetic = project\n  .settings(\n    name := &quot;shaded-something&quot;,\n    // I am sober. no dependencies.\n    Compile / packageBin := (uberJar / assembly).value\n  )\"><pre><span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">uberJar</span> <span class=\"pl-k\">=</span> project\n  .enablePlugins(<span class=\"pl-en\">AssemblyPlugin</span>)\n  .settings(\n    depend on the good stuff\n    publish <span class=\"pl-k\">/</span> skip <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>\n  )\n\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">cosmetic</span> <span class=\"pl-k\">=</span> project\n  .settings(\n    name <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>shaded-something<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> I am sober. no dependencies.</span>\n    <span class=\"pl-en\">Compile</span> <span class=\"pl-k\">/</span> packageBin <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> (uberJar <span class=\"pl-k\">/</span> assembly).value\n  )</pre></div>\n<h2 dir=\"auto\"><a id=\"user-content-license\" class=\"anchor\" aria-hidden=\"true\" href=\"#license\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>License</h2>\n<p dir=\"auto\">Published under The MIT License, see LICENSE</p>\n<p dir=\"auto\">Copyright e.e d3si9n, LLC</p>\n<p dir=\"auto\">Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p>\n<p dir=\"auto\">The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p>\n<p dir=\"auto\">THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n</article></div>",
    "contributors" : [
      {
        "login" : "eed3si9n",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/184683?v=4",
        "url" : "https://github.com/eed3si9n",
        "contributions" : 404
      },
      {
        "login" : "xuwei-k",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/389787?v=4",
        "url" : "https://github.com/xuwei-k",
        "contributions" : 48
      },
      {
        "login" : "codahale",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/207?v=4",
        "url" : "https://github.com/codahale",
        "contributions" : 13
      },
      {
        "login" : "rjmac",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/753700?v=4",
        "url" : "https://github.com/rjmac",
        "contributions" : 13
      },
      {
        "login" : "jeroentervoorde",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3625507?v=4",
        "url" : "https://github.com/jeroentervoorde",
        "contributions" : 12
      },
      {
        "login" : "er1c",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/64685?v=4",
        "url" : "https://github.com/er1c",
        "contributions" : 8
      },
      {
        "login" : "emchristiansen",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/225668?v=4",
        "url" : "https://github.com/emchristiansen",
        "contributions" : 5
      },
      {
        "login" : "lhns",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1524059?v=4",
        "url" : "https://github.com/lhns",
        "contributions" : 5
      },
      {
        "login" : "sullis",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/30938?v=4",
        "url" : "https://github.com/sullis",
        "contributions" : 5
      },
      {
        "login" : "wxiang7",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1909016?v=4",
        "url" : "https://github.com/wxiang7",
        "contributions" : 5
      },
      {
        "login" : "tlockney",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/8944?v=4",
        "url" : "https://github.com/tlockney",
        "contributions" : 4
      },
      {
        "login" : "rkuhn",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/470469?v=4",
        "url" : "https://github.com/rkuhn",
        "contributions" : 3
      },
      {
        "login" : "fommil",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1914041?v=4",
        "url" : "https://github.com/fommil",
        "contributions" : 3
      },
      {
        "login" : "zen0wu",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/292364?v=4",
        "url" : "https://github.com/zen0wu",
        "contributions" : 3
      },
      {
        "login" : "clhodapp",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/108633?v=4",
        "url" : "https://github.com/clhodapp",
        "contributions" : 2
      },
      {
        "login" : "dchenbecker",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/24858?v=4",
        "url" : "https://github.com/dchenbecker",
        "contributions" : 2
      },
      {
        "login" : "bivas",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/530883?v=4",
        "url" : "https://github.com/bivas",
        "contributions" : 2
      },
      {
        "login" : "pomadchin",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/4929546?v=4",
        "url" : "https://github.com/pomadchin",
        "contributions" : 2
      },
      {
        "login" : "themodernlife",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3942918?v=4",
        "url" : "https://github.com/themodernlife",
        "contributions" : 2
      },
      {
        "login" : "analytically",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/254434?v=4",
        "url" : "https://github.com/analytically",
        "contributions" : 2
      },
      {
        "login" : "LolHens",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/102837166?v=4",
        "url" : "https://github.com/LolHens",
        "contributions" : 2
      },
      {
        "login" : "SethTisue",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/161079?v=4",
        "url" : "https://github.com/SethTisue",
        "contributions" : 2
      },
      {
        "login" : "BenFradet",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1737211?v=4",
        "url" : "https://github.com/BenFradet",
        "contributions" : 1
      },
      {
        "login" : "fnqista",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/6524867?v=4",
        "url" : "https://github.com/fnqista",
        "contributions" : 1
      },
      {
        "login" : "bantonsson",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/805830?v=4",
        "url" : "https://github.com/bantonsson",
        "contributions" : 1
      },
      {
        "login" : "DagoDragony",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/11200021?v=4",
        "url" : "https://github.com/DagoDragony",
        "contributions" : 1
      },
      {
        "login" : "damdev",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/752381?v=4",
        "url" : "https://github.com/damdev",
        "contributions" : 1
      },
      {
        "login" : "igieon",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1535798?v=4",
        "url" : "https://github.com/igieon",
        "contributions" : 1
      },
      {
        "login" : "eejbyfeldt",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/73838248?v=4",
        "url" : "https://github.com/eejbyfeldt",
        "contributions" : 1
      },
      {
        "login" : "ericdotdata",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/72224488?v=4",
        "url" : "https://github.com/ericdotdata",
        "contributions" : 1
      },
      {
        "login" : "eric-poitras",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/4420101?v=4",
        "url" : "https://github.com/eric-poitras",
        "contributions" : 1
      },
      {
        "login" : "saurfang",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/4317392?v=4",
        "url" : "https://github.com/saurfang",
        "contributions" : 1
      },
      {
        "login" : "fthomas",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/141252?v=4",
        "url" : "https://github.com/fthomas",
        "contributions" : 1
      },
      {
        "login" : "hsleep",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1726920?v=4",
        "url" : "https://github.com/hsleep",
        "contributions" : 1
      },
      {
        "login" : "jmhodges",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/598?v=4",
        "url" : "https://github.com/jmhodges",
        "contributions" : 1
      },
      {
        "login" : "jeffreyolchovy",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/202277?v=4",
        "url" : "https://github.com/jeffreyolchovy",
        "contributions" : 1
      },
      {
        "login" : "jrudolph",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/9868?v=4",
        "url" : "https://github.com/jrudolph",
        "contributions" : 1
      },
      {
        "login" : "jorgeortiz85",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/5728?v=4",
        "url" : "https://github.com/jorgeortiz85",
        "contributions" : 1
      },
      {
        "login" : "naegelejd",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1110252?v=4",
        "url" : "https://github.com/naegelejd",
        "contributions" : 1
      },
      {
        "login" : "jmgao",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/593995?v=4",
        "url" : "https://github.com/jmgao",
        "contributions" : 1
      },
      {
        "login" : "keweishang",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1978545?v=4",
        "url" : "https://github.com/keweishang",
        "contributions" : 1
      },
      {
        "login" : "catap",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/37775?v=4",
        "url" : "https://github.com/catap",
        "contributions" : 1
      },
      {
        "login" : "KisaragiEffective",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/48310258?v=4",
        "url" : "https://github.com/KisaragiEffective",
        "contributions" : 1
      },
      {
        "login" : "kciesielski",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1413553?v=4",
        "url" : "https://github.com/kciesielski",
        "contributions" : 1
      },
      {
        "login" : "lucastorri",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/347716?v=4",
        "url" : "https://github.com/lucastorri",
        "contributions" : 1
      },
      {
        "login" : "lkysow",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1034429?v=4",
        "url" : "https://github.com/lkysow",
        "contributions" : 1
      },
      {
        "login" : "mal",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/591257?v=4",
        "url" : "https://github.com/mal",
        "contributions" : 1
      },
      {
        "login" : "harrah",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/72742?v=4",
        "url" : "https://github.com/harrah",
        "contributions" : 1
      },
      {
        "login" : "nightscape",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/35170?v=4",
        "url" : "https://github.com/nightscape",
        "contributions" : 1
      },
      {
        "login" : "nevillelyh",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/468514?v=4",
        "url" : "https://github.com/nevillelyh",
        "contributions" : 1
      },
      {
        "login" : "onilton",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/725676?v=4",
        "url" : "https://github.com/onilton",
        "contributions" : 1
      },
      {
        "login" : "romovpa",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/152387?v=4",
        "url" : "https://github.com/romovpa",
        "contributions" : 1
      },
      {
        "login" : "pvlugter",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/59895?v=4",
        "url" : "https://github.com/pvlugter",
        "contributions" : 1
      },
      {
        "login" : "rtyley",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/52038?v=4",
        "url" : "https://github.com/rtyley",
        "contributions" : 1
      },
      {
        "login" : "samueltardieu",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/44656?v=4",
        "url" : "https://github.com/samueltardieu",
        "contributions" : 1
      },
      {
        "login" : "santtu",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/650612?v=4",
        "url" : "https://github.com/santtu",
        "contributions" : 1
      },
      {
        "login" : "slandelle",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/849197?v=4",
        "url" : "https://github.com/slandelle",
        "contributions" : 1
      },
      {
        "login" : "tani",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/5019902?v=4",
        "url" : "https://github.com/tani",
        "contributions" : 1
      },
      {
        "login" : "wsargent",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/71236?v=4",
        "url" : "https://github.com/wsargent",
        "contributions" : 1
      },
      {
        "login" : "ipostanogov",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2305983?v=4",
        "url" : "https://github.com/ipostanogov",
        "contributions" : 1
      },
      {
        "login" : "kellydavid",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/6256364?v=4",
        "url" : "https://github.com/kellydavid",
        "contributions" : 1
      },
      {
        "login" : "nafg",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/98384?v=4",
        "url" : "https://github.com/nafg",
        "contributions" : 1
      },
      {
        "login" : "romusz",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/854559?v=4",
        "url" : "https://github.com/romusz",
        "contributions" : 1
      },
      {
        "login" : "sksamuel",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/743706?v=4",
        "url" : "https://github.com/sksamuel",
        "contributions" : 1
      },
      {
        "login" : "olafurpg",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1408093?v=4",
        "url" : "https://github.com/olafurpg",
        "contributions" : 1
      },
      {
        "login" : "5000164",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1940040?v=4",
        "url" : "https://github.com/5000164",
        "contributions" : 1
      }
    ],
    "commits" : 591,
    "topics" : [
      "jarjar",
      "sbt",
      "sbt-plugin"
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "chatroom" : "https://gitter.im/sbt/sbt-assembly",
    "openIssues" : [
      {
        "number" : 475,
        "title" : "sbt-assembly v1.2.0: Facing java.lang.ArrayIndexOutOfBoundsException: Index 65536 out of bounds for length 132",
        "url" : "https://github.com/sbt/sbt-assembly/issues/475"
      },
      {
        "number" : 472,
        "title" : "IllegalArgumentException: Illegal character in opaque part at index 11: jar:file:C:\\...",
        "url" : "https://github.com/sbt/sbt-assembly/issues/472"
      },
      {
        "number" : 470,
        "title" : "Multirelease jar dependencies not preserved during assembly",
        "url" : "https://github.com/sbt/sbt-assembly/issues/470"
      },
      {
        "number" : 467,
        "title" : "scala-xml no longer part of core library in Scala-3...",
        "url" : "https://github.com/sbt/sbt-assembly/issues/467"
      },
      {
        "number" : 465,
        "title" : "java.lang.NoClassDefFoundError: Could not initialize class io.circe.Decoder$ after Shading",
        "url" : "https://github.com/sbt/sbt-assembly/issues/465"
      },
      {
        "number" : 463,
        "title" : "OutOfMemoryError introduced by 1.1.0",
        "url" : "https://github.com/sbt/sbt-assembly/issues/463"
      },
      {
        "number" : 462,
        "title" : "Error while formatting jarName with branch name.",
        "url" : "https://github.com/sbt/sbt-assembly/issues/462"
      },
      {
        "number" : 460,
        "title" : "File Name Filtering causing False Positives",
        "url" : "https://github.com/sbt/sbt-assembly/issues/460"
      },
      {
        "number" : 458,
        "title" : "Update to sbt 1.6.0 log4j cve free",
        "url" : "https://github.com/sbt/sbt-assembly/issues/458"
      },
      {
        "number" : 457,
        "title" : "runtime dependency is not included in fat jar",
        "url" : "https://github.com/sbt/sbt-assembly/issues/457"
      },
      {
        "number" : 454,
        "title" : "java.lang.IllegalArgumentException",
        "url" : "https://github.com/sbt/sbt-assembly/issues/454"
      },
      {
        "number" : 445,
        "title" : "Proposal: Add withAssemblyUnzipDirectory to `AssemblyOption`",
        "url" : "https://github.com/sbt/sbt-assembly/issues/445"
      },
      {
        "number" : 441,
        "title" : "target/streams produce too much files and can not clean clearly",
        "url" : "https://github.com/sbt/sbt-assembly/issues/441"
      },
      {
        "number" : 439,
        "title" : "Consider preserving \"Multi-Release: true\" on merge",
        "url" : "https://github.com/sbt/sbt-assembly/issues/439"
      },
      {
        "number" : 435,
        "title" : "AssemblyUtils.sourceOfFileForMerge no longer public",
        "url" : "https://github.com/sbt/sbt-assembly/issues/435"
      },
      {
        "number" : 426,
        "title" : "excluding (non-duplicate) resources",
        "url" : "https://github.com/sbt/sbt-assembly/issues/426"
      },
      {
        "number" : 419,
        "title" : "java.lang.IllegalArgumentException: requirement failed: Source file 'D:\\Projects\\trunk\\Projects\\MSFITS_AZURE\\MSFITS_AZURE\\AzureScalaQueueService\\QueueHandlerBL\\target\\streams\\_global\\assemblyOption\\_global\\streams\\assembly\\5181d4d9456869cffee25db7cf40862afd4b5731_eea687e8f56f58f889b68f00ac267b8f9e328876_da39a3ee5e6b4b0d3255bfef95601890afd80709\\META-INF\\license' is a directory.",
        "url" : "https://github.com/sbt/sbt-assembly/issues/419"
      },
      {
        "number" : 418,
        "title" : "sbt Clean & assembly step sometime takes very long time",
        "url" : "https://github.com/sbt/sbt-assembly/issues/418"
      },
      {
        "number" : 414,
        "title" : "Incremental JAR-ing",
        "url" : "https://github.com/sbt/sbt-assembly/issues/414"
      },
      {
        "number" : 412,
        "title" : "does jarjarLibraryDependency Supports multiple libraries now?",
        "url" : "https://github.com/sbt/sbt-assembly/issues/412"
      },
      {
        "number" : 408,
        "title" : "includeScala setting should be treat Scala 3(Dotty) jars?",
        "url" : "https://github.com/sbt/sbt-assembly/issues/408"
      },
      {
        "number" : 407,
        "title" : "Explore jar minifying with D8/R8",
        "url" : "https://github.com/sbt/sbt-assembly/issues/407"
      },
      {
        "number" : 406,
        "title" : "Filenames ending in `.conf` should be concatenated out-of-the-box",
        "url" : "https://github.com/sbt/sbt-assembly/issues/406"
      },
      {
        "number" : 405,
        "title" : "Shading with inLibrary doesn't work",
        "url" : "https://github.com/sbt/sbt-assembly/issues/405"
      },
      {
        "number" : 403,
        "title" : "ShadeRule's libraries coordinates do not support cross version",
        "url" : "https://github.com/sbt/sbt-assembly/issues/403"
      },
      {
        "number" : 402,
        "title" : "Unable to package spring boot with cloud config jar",
        "url" : "https://github.com/sbt/sbt-assembly/issues/402"
      },
      {
        "number" : 401,
        "title" : "ASM SignatureReader java.lang.IllegalArgumentException",
        "url" : "https://github.com/sbt/sbt-assembly/issues/401"
      },
      {
        "number" : 400,
        "title" : "Shading `inLibrary` without also adding `inProject` no longer works",
        "url" : "https://github.com/sbt/sbt-assembly/issues/400"
      },
      {
        "number" : 397,
        "title" : "Caching doesn't work",
        "url" : "https://github.com/sbt/sbt-assembly/issues/397"
      },
      {
        "number" : 391,
        "title" : "Ignore module-info.class",
        "url" : "https://github.com/sbt/sbt-assembly/issues/391"
      },
      {
        "number" : 385,
        "title" : "SBT 1.2.8 with 0.14.10 packaging hangs forever or produces jar with missing files",
        "url" : "https://github.com/sbt/sbt-assembly/issues/385"
      },
      {
        "number" : 384,
        "title" : "sbt assemblyPackageDependency also includes \"provided\" dependencies",
        "url" : "https://github.com/sbt/sbt-assembly/issues/384"
      },
      {
        "number" : 377,
        "title" : "Can't shade scala 2.12.8 symbol",
        "url" : "https://github.com/sbt/sbt-assembly/issues/377"
      },
      {
        "number" : 374,
        "title" : "exec: Exec format error",
        "url" : "https://github.com/sbt/sbt-assembly/issues/374"
      },
      {
        "number" : 372,
        "title" : "akka ignores logger settings from reference.conf",
        "url" : "https://github.com/sbt/sbt-assembly/issues/372"
      },
      {
        "number" : 369,
        "title" : "How to create an sbt task that is assembly without the tests.",
        "url" : "https://github.com/sbt/sbt-assembly/issues/369"
      },
      {
        "number" : 368,
        "title" : "How to add native (JNI) libraries and pre-packaged JARs?",
        "url" : "https://github.com/sbt/sbt-assembly/issues/368"
      },
      {
        "number" : 365,
        "title" : "Make it easier to publish shaded library jars",
        "url" : "https://github.com/sbt/sbt-assembly/issues/365"
      },
      {
        "number" : 363,
        "title" : "Merge strategy does not discard duplicates when assembling multi-modules",
        "url" : "https://github.com/sbt/sbt-assembly/issues/363"
      },
      {
        "number" : 339,
        "title" : "Slash notation does not work for assembly task.",
        "url" : "https://github.com/sbt/sbt-assembly/issues/339"
      },
      {
        "number" : 338,
        "title" : "Publishing artifacts for sbt-assembly to maven.org",
        "url" : "https://github.com/sbt/sbt-assembly/issues/338"
      },
      {
        "number" : 337,
        "title" : "assemblyMergeStrategy doesn't work for multi-project build",
        "url" : "https://github.com/sbt/sbt-assembly/issues/337"
      },
      {
        "number" : 335,
        "title" : "Failure running assembly with ShadeRules inside Windows Subsystem for Linux (Ubuntu)",
        "url" : "https://github.com/sbt/sbt-assembly/issues/335"
      },
      {
        "number" : 333,
        "title" : "Log level intermediate?",
        "url" : "https://github.com/sbt/sbt-assembly/issues/333"
      },
      {
        "number" : 328,
        "title" : "handling of resources for complex java dependencies",
        "url" : "https://github.com/sbt/sbt-assembly/issues/328"
      },
      {
        "number" : 323,
        "title" : "No output jar produced, even when output claims success.",
        "url" : "https://github.com/sbt/sbt-assembly/issues/323"
      },
      {
        "number" : 321,
        "title" : "Epoch timestamps on class files using SBT 1.1.x",
        "url" : "https://github.com/sbt/sbt-assembly/issues/321"
      },
      {
        "number" : 318,
        "title" : "Can't load static assets in assembly jar",
        "url" : "https://github.com/sbt/sbt-assembly/issues/318"
      },
      {
        "number" : 316,
        "title" : "Unable to list the contents of a resource folder",
        "url" : "https://github.com/sbt/sbt-assembly/issues/316"
      },
      {
        "number" : 295,
        "title" : "Provided dependencies are included in jar in (Test, assembly).",
        "url" : "https://github.com/sbt/sbt-assembly/issues/295"
      },
      {
        "number" : 293,
        "title" : "[Feature Request] shade option to exclude jars",
        "url" : "https://github.com/sbt/sbt-assembly/issues/293"
      },
      {
        "number" : 287,
        "title" : "Cannot shade dependencies in test?",
        "url" : "https://github.com/sbt/sbt-assembly/issues/287"
      },
      {
        "number" : 286,
        "title" : "Sbt assembly taking too long, sbt 1.0.4, scalaVersion 2.11.8",
        "url" : "https://github.com/sbt/sbt-assembly/issues/286"
      },
      {
        "number" : 285,
        "title" : "add feature to shade a specific jar",
        "url" : "https://github.com/sbt/sbt-assembly/issues/285"
      },
      {
        "number" : 284,
        "title" : "Provide new feature to \"shade\" configuration keys",
        "url" : "https://github.com/sbt/sbt-assembly/issues/284"
      },
      {
        "number" : 278,
        "title" : "How to package different JARs based on different classes?",
        "url" : "https://github.com/sbt/sbt-assembly/issues/278"
      },
      {
        "number" : 272,
        "title" : "Controlling log level",
        "url" : "https://github.com/sbt/sbt-assembly/issues/272"
      },
      {
        "number" : 268,
        "title" : "Optional dependencies are automatically included",
        "url" : "https://github.com/sbt/sbt-assembly/issues/268"
      },
      {
        "number" : 267,
        "title" : "Incomplete assembly when using ScalaFX",
        "url" : "https://github.com/sbt/sbt-assembly/issues/267"
      },
      {
        "number" : 265,
        "title" : "What does ShadeRule.keep do exactly? Does *anyone* know?",
        "url" : "https://github.com/sbt/sbt-assembly/issues/265"
      },
      {
        "number" : 263,
        "title" : "Provide an option to exclude subproject from assembled jars",
        "url" : "https://github.com/sbt/sbt-assembly/issues/263"
      },
      {
        "number" : 262,
        "title" : "NoClassDefFoundError when shading",
        "url" : "https://github.com/sbt/sbt-assembly/issues/262"
      },
      {
        "number" : 258,
        "title" : "Allow resources for assembly jar (only for assembly)",
        "url" : "https://github.com/sbt/sbt-assembly/issues/258"
      },
      {
        "number" : 251,
        "title" : "Creating a Jar with conf files not working",
        "url" : "https://github.com/sbt/sbt-assembly/issues/251"
      },
      {
        "number" : 250,
        "title" : "ManifestResourceTransformer for assembly",
        "url" : "https://github.com/sbt/sbt-assembly/issues/250"
      },
      {
        "number" : 235,
        "title" : "sbt-assembly appears not to shade all jars configured via .inLibrary",
        "url" : "https://github.com/sbt/sbt-assembly/issues/235"
      },
      {
        "number" : 227,
        "title" : "Appending additional files to the fat JAR",
        "url" : "https://github.com/sbt/sbt-assembly/issues/227"
      },
      {
        "number" : 225,
        "title" : "inconsistent output",
        "url" : "https://github.com/sbt/sbt-assembly/issues/225"
      },
      {
        "number" : 223,
        "title" : "Unable to clone due to malformed object",
        "url" : "https://github.com/sbt/sbt-assembly/issues/223"
      },
      {
        "number" : 222,
        "title" : "Disable transitive-dep inclusion in ShadeRule.keep",
        "url" : "https://github.com/sbt/sbt-assembly/issues/222"
      },
      {
        "number" : 219,
        "title" : "Documentation request: how can I create and assemble for various profiles?",
        "url" : "https://github.com/sbt/sbt-assembly/issues/219"
      },
      {
        "number" : 218,
        "title" : "Separate assembly for libraries and same project module dependencies",
        "url" : "https://github.com/sbt/sbt-assembly/issues/218"
      },
      {
        "number" : 217,
        "title" : "How to generate two uber jars for one project folder using different filter",
        "url" : "https://github.com/sbt/sbt-assembly/issues/217"
      },
      {
        "number" : 216,
        "title" : "Setting assemblyOutputPath to \".\" leads to data loss!",
        "url" : "https://github.com/sbt/sbt-assembly/issues/216"
      },
      {
        "number" : 214,
        "title" : "Simple projects without conflicts should build without warnings",
        "url" : "https://github.com/sbt/sbt-assembly/issues/214"
      },
      {
        "number" : 212,
        "title" : "Automatically shade dependencies leading to deduplication errors",
        "url" : "https://github.com/sbt/sbt-assembly/issues/212"
      },
      {
        "number" : 198,
        "title" : "Excluding single packages from renaming in Shading",
        "url" : "https://github.com/sbt/sbt-assembly/issues/198"
      },
      {
        "number" : 194,
        "title" : "Better Scala.Js support",
        "url" : "https://github.com/sbt/sbt-assembly/issues/194"
      },
      {
        "number" : 183,
        "title" : "assemblyPackageDependencies should only run if there was a change in dependencies",
        "url" : "https://github.com/sbt/sbt-assembly/issues/183"
      },
      {
        "number" : 181,
        "title" : "\"Keep\" rules seem to be processed before renaming, not after",
        "url" : "https://github.com/sbt/sbt-assembly/issues/181"
      },
      {
        "number" : 177,
        "title" : "Possible memory leak in unzip cache",
        "url" : "https://github.com/sbt/sbt-assembly/issues/177"
      },
      {
        "number" : 175,
        "title" : "Only assemble selected modules within multi-module project",
        "url" : "https://github.com/sbt/sbt-assembly/issues/175"
      },
      {
        "number" : 173,
        "title" : "shading appears to mess with application.conf / reference.conf",
        "url" : "https://github.com/sbt/sbt-assembly/issues/173"
      },
      {
        "number" : 164,
        "title" : "Mention assemblyPackageDependency in the docs",
        "url" : "https://github.com/sbt/sbt-assembly/issues/164"
      },
      {
        "number" : 159,
        "title" : "assembly picks up jars from unmanagedBase although unmanagedJars is empty",
        "url" : "https://github.com/sbt/sbt-assembly/issues/159"
      },
      {
        "number" : 157,
        "title" : "Failing tests should abort assembly",
        "url" : "https://github.com/sbt/sbt-assembly/issues/157"
      },
      {
        "number" : 155,
        "title" : "Default assembly name is not normalized",
        "url" : "https://github.com/sbt/sbt-assembly/issues/155"
      },
      {
        "number" : 147,
        "title" : "Cannot disable assembling jars for subprojects",
        "url" : "https://github.com/sbt/sbt-assembly/issues/147"
      }
    ],
    "scalaPercentage" : 99,
    "license" : "MIT",
    "commitActivity" : [
      {
        "total" : 1,
        "week" : 1629590400000,
        "days" : [
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 3,
        "week" : 1630195200000,
        "days" : [
          0,
          0,
          0,
          3,
          0,
          0,
          0
        ]
      },
      {
        "total" : 1,
        "week" : 1630800000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          1
        ]
      },
      {
        "total" : 3,
        "week" : 1631404800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          3
        ]
      },
      {
        "total" : 1,
        "week" : 1632009600000,
        "days" : [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1632614400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1633219200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1633824000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 2,
        "week" : 1634428800000,
        "days" : [
          0,
          0,
          0,
          0,
          2,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1635033600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1635638400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 1,
        "week" : 1636243200000,
        "days" : [
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1636848000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1637452800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 1,
        "week" : 1638057600000,
        "days" : [
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 1,
        "week" : 1638662400000,
        "days" : [
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1639267200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 1,
        "week" : 1639872000000,
        "days" : [
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1640476800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1641081600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 2,
        "week" : 1641686400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          2,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1642291200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1642896000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1643500800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1644105600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 1,
        "week" : 1644710400000,
        "days" : [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1645315200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1645920000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1646524800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1647129600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1647734400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1648339200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1648944000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1649548800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1650153600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1650758400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 1,
        "week" : 1651363200000,
        "days" : [
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1651968000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1652572800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1653177600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1653782400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1654387200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 1,
        "week" : 1654992000000,
        "days" : [
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1655596800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1656201600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1656806400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1657411200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1658016000000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1658620800000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1659225600000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1659830400000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      },
      {
        "total" : 0,
        "week" : 1660435200000,
        "days" : [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      }
    ]
  },
  "settings" : {
    "defaultStableVersion" : true,
    "defaultArtifact" : null,
    "strictVersions" : false,
    "customScalaDoc" : null,
    "documentationLinks" : [
    ],
    "deprecated" : false,
    "contributorsWanted" : false,
    "artifactDeprecations" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "packaging-and-publishing",
    "beginnerIssuesLabel" : null
  }
}