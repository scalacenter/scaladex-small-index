{
  "organization" : "sbt",
  "repository" : "sbt-web",
  "creationDate" : 1396605800000,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1723608406434
    }
  },
  "githubInfo" : {
    "homepage" : "",
    "description" : "Library for building sbt plugins for the web",
    "logo" : "https://avatars.githubusercontent.com/u/1158012?v=4",
    "stars" : 368,
    "forks" : 65,
    "watchers" : 18,
    "issues" : 24,
    "creationDate" : 1384751387000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div class=\"markdown-heading\" dir=\"auto\"><h1 class=\"heading-element\" dir=\"auto\">sbt-web</h1><a id=\"user-content-sbt-web\" class=\"anchor\" aria-label=\"Permalink: sbt-web\" href=\"#sbt-web\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\"><a href=\"https://github.com/sbt/sbt-web/actions/workflows/build-test.yml\"><img src=\"https://github.com/sbt/sbt-web/actions/workflows/build-test.yml/badge.svg\" alt=\"Build Status\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">This project provides the building blocks for web oriented sbt plugins by bringing together the following concerns:</p>\n<ul dir=\"auto\">\n<li>File directory layout conventions for resources intended to be served by a web server (otherwise known as assets)</li>\n<li>Incremental execution of fine-grained operations within sbt tasks</li>\n<li>Utilities for managing <a href=\"http://www.webjars.org/\" rel=\"nofollow\">WebJars</a> including the ability to extract a WebJar's contents on to disk</li>\n<li>Standardised reporting of compilation style errors</li>\n</ul>\n<p dir=\"auto\">sbt-web was driven from the desire to factor out client-side web concerns from the <a href=\"http://www.playframework.com/\" rel=\"nofollow\">Play Framework</a>.\nHowever, sbt-web is entirely independent of Play and can be used for any project that uses sbt as its build system.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Available Plugins</h2><a id=\"user-content-available-plugins\" class=\"anchor\" aria-label=\"Permalink: Available Plugins\" href=\"#available-plugins\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">The following is a list of plugins we know of that are built on sbt-web:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://github.com/matthewrennie/sbt-autoprefixer\">sbt-autoprefixer</a></li>\n<li><a href=\"https://github.com/ground5hark/sbt-closure#sbt-closure\">sbt-closure</a></li>\n<li><a href=\"https://github.com/sbt/sbt-coffeescript#sbt-coffeescript\">sbt-coffeescript</a></li>\n<li><a href=\"https://github.com/ShaggyYeti/sbt-coffeescript-reactjs\">sbt-coffeescript-reactjs</a></li>\n<li><a href=\"https://github.com/sbt/sbt-concat#sbt-concat\">sbt-concat</a></li>\n<li><a href=\"https://github.com/ground5hark/sbt-css-compress#sbt-css-compress\">sbt-css-compress</a></li>\n<li><a href=\"https://github.com/sbt/sbt-digest#sbt-digest\">sbt-digest</a></li>\n<li><a href=\"https://github.com/jmparsons/sbt-dustjs-linkedin\">sbt-dustjs-linkedin</a></li>\n<li><a href=\"https://github.com/dwickern/sbt-emberjs\">sbt-emberjs</a></li>\n<li><a href=\"https://github.com/rgcottrell/sbt-filter\">sbt-filter</a></li>\n<li><a href=\"https://github.com/sbt/sbt-gzip#sbt-gzip\">sbt-gzip</a></li>\n<li><a href=\"https://github.com/Amadeus82/sbt-handlebars\">sbt-handlebars</a></li>\n<li><a href=\"https://github.com/bicouy0/sbt-hbs\">sbt-hbs</a></li>\n<li><a href=\"https://github.com/kolloch/sbt-html-js-wrap\">sbt-html-js-wrap</a></li>\n<li><a href=\"https://github.com/rgcottrell/sbt-html-minifier\">sbt-html-minifier</a></li>\n<li><a href=\"https://github.com/rgcottrell/sbt-imagemin\">sbt-imagemin</a></li>\n<li><a href=\"https://github.com/joost-de-vries/sbt-jasmine\">sbt-jasmine</a></li>\n<li><a href=\"https://github.com/sbt/sbt-jshint#sbt-jshint\">sbt-jshint</a></li>\n<li><a href=\"https://github.com/sbt/sbt-less#sbt-less\">sbt-less</a></li>\n<li><a href=\"https://github.com/sbt/sbt-mocha\">sbt-mocha</a></li>\n<li><a href=\"https://github.com/eamelink/sbt-purescript\">sbt-purescript</a></li>\n<li><a href=\"https://github.com/ddispaltro/sbt-reactjs\">sbt-reactjs</a></li>\n<li><a href=\"https://github.com/sbt/sbt-rjs#sbt-rjs\">sbt-rjs</a></li>\n<li><a href=\"https://github.com/madoushi/sbt-sass\">sbt-sass</a></li>\n<li><a href=\"https://github.com/irundaia/sbt-sassify\">sbt-sassify</a></li>\n<li><a href=\"https://chiselapp.com/user/twenstar/repository/sbt-puresass\" rel=\"nofollow\">sbt-puresass</a></li>\n<li><a href=\"https://github.com/neomaclin/sbt-simple-url-update#sbt-simple-url-update\">sbt-simple-url-update</a></li>\n<li><a href=\"https://github.com/sbt/sbt-stylus\">sbt-stylus</a></li>\n<li><a href=\"https://github.com/andriimartynov/sbt-terser\">sbt-terser</a></li>\n<li><a href=\"https://github.com/LuigiPeace/sbt-traceur\">sbt-traceur</a></li>\n<li><a href=\"https://github.com/joost-de-vries/sbt-tslint\">sbt-tslint</a></li>\n<li><a href=\"https://github.com/ArpNetworking/sbt-typescript\">sbt-typescript</a></li>\n<li><a href=\"https://github.com/joost-de-vries/sbt-typescript\">sbt-typescript</a> (archived)</li>\n<li><a href=\"https://github.com/sbt/sbt-uglify\">sbt-uglify</a></li>\n<li><a href=\"https://github.com/GIVESocialMovement/sbt-vuefy\">sbt-vuefy</a></li>\n<li><a href=\"https://github.com/dwickern/sbt-web-brotli\">sbt-web-brotli</a></li>\n<li><a href=\"https://github.com/vmunier/sbt-web-scalajs\">sbt-web-scalajs</a></li>\n</ul>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Ideas for Plugins</h2><a id=\"user-content-ideas-for-plugins\" class=\"anchor\" aria-label=\"Permalink: Ideas for Plugins\" href=\"#ideas-for-plugins\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<ul dir=\"auto\">\n<li><a href=\"http://jasmine.github.io/\" rel=\"nofollow\">jasmine</a></li>\n<li><a href=\"http://handlebarsjs.com/\" rel=\"nofollow\">handlebars</a></li>\n</ul>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Plugins in Development</h2><a id=\"user-content-plugins-in-development\" class=\"anchor\" aria-label=\"Permalink: Plugins in Development\" href=\"#plugins-in-development\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<ul dir=\"auto\">\n<li>C'mon community, get involved! Watch the talk on the anatomy of an <a href=\"https://www.youtube.com/watch?v=lIznJSBW-GU\" rel=\"nofollow\">sbt-web plugin</a></li>\n</ul>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">File Directory Layout</h2><a id=\"user-content-file-directory-layout\" class=\"anchor\" aria-label=\"Permalink: File Directory Layout\" href=\"#file-directory-layout\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">The following directory layout is declared by sbt-web with an indication of the associated settings:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"+ src\n--+ main\n----+ assets .....(Assets / sourceDirectory)\n------+ js\n----+ public .....(Assets / resourceDirectory)\n------+ css\n------+ images\n------+ js\n--+ test\n----+ assets .....(TestAssets / sourceDirectory)\n------+ js\n----+ public .....(TestAssets / resourceDirectory)\n------+ css\n------+ images\n------+ js\n\n+ target\n--+ web ............(webTarget)\n----+ public\n------+ main .......(Assets / resourceManaged)\n--------+ css\n--------+ images\n--------+ js\n------+ test .......(TestAssets / resourceManaged)\n--------+ css\n--------+ images\n--------+ js\n----+ stage ........(stagingDirectory)\"><pre class=\"notranslate\"><code>+ src\n--+ main\n----+ assets .....(Assets / sourceDirectory)\n------+ js\n----+ public .....(Assets / resourceDirectory)\n------+ css\n------+ images\n------+ js\n--+ test\n----+ assets .....(TestAssets / sourceDirectory)\n------+ js\n----+ public .....(TestAssets / resourceDirectory)\n------+ css\n------+ images\n------+ js\n\n+ target\n--+ web ............(webTarget)\n----+ public\n------+ main .......(Assets / resourceManaged)\n--------+ css\n--------+ images\n--------+ js\n------+ test .......(TestAssets / resourceManaged)\n--------+ css\n--------+ images\n--------+ js\n----+ stage ........(stagingDirectory)\n</code></pre></div>\n<p dir=\"auto\">The plugin introduces the notion of <code>assets</code> to sbt. Assets are public resources that are intended for client-side\nconsumption e.g. by a browser. This is also distinct from sbt's existing notion of <code>resources</code> as\nproject resources are generally not made public by a web server.</p>\n<p dir=\"auto\">In sbt, asset source files are considered the source for plugins that process them. When they are processed any resultant\nfiles go into a <code>public</code> directory in the classpath.  By configuration, sbt-web apps serve static assets from the <code>public</code>\ndirectory on the classpath. For example a CoffeeScript plugin would use files from <code>Assets / sourceDirectory</code>\nand produce them to <code>Assets / resourceManaged</code>.</p>\n<p dir=\"auto\">All assets whether they need processing or are static in nature, will be copied to the resourceManaged destinations.</p>\n<p dir=\"auto\">Assets can be organized however desired within the <code>assets</code> directory.</p>\n<p dir=\"auto\">One last thing regarding the public and public-test folders... any WebJar depended on by the project will be automatically\nextracted into these folders e.g. target/web/public/main/lib/jquery/jquery.js. In addition, the public-test folder receives\nthe contents of the public folder as well as test assets. This eases the support of test frameworks given that\nall files are locatable from one root.</p>\n<p dir=\"auto\">The \"stage\" directory is product of processing the asset pipeline and results in files prepared for deployment\nto a web server.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Configurations</h2><a id=\"user-content-configurations\" class=\"anchor\" aria-label=\"Permalink: Configurations\" href=\"#configurations\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">sbt holds the notion of configurations which are similar to Maven's phases. Configurations aggregate settings and tasks. Familiar configurations will be <code>Compile</code> and <code>Test</code>. sbt-web introduces two new configurations named <code>Assets</code> and <code>TestAssets</code> correlating roughly with <code>Compile</code> and <code>Test</code>, but for web assets.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Incremental Execution</h2><a id=\"user-content-incremental-execution\" class=\"anchor\" aria-label=\"Permalink: Incremental Execution\" href=\"#incremental-execution\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">The incremental task API lets tasks run more quickly when they are\ncalled more than once. The idea is to do less work when tasks are\ncalled a second time, by skipping any work that has already been done.\nIn other words, tasks only perform the \"incremental\" work that is\nnecessary since they were last run.</p>\n<p dir=\"auto\">To analyse which work needs to be done, a task's work is broken up\ninto a number of sub-operations, each of which can be run\nindependently. Each operation takes input parameters and can read and\nwrite files. The incremental task API keeps a record of which\noperations have been run so that those operations don't need to\nbe repeated in the future.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Asset Pipeline</h2><a id=\"user-content-asset-pipeline\" class=\"anchor\" aria-label=\"Permalink: Asset Pipeline\" href=\"#asset-pipeline\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">There are two categories of sbt-web based tasks:</p>\n<ul dir=\"auto\">\n<li>those that operate on source files</li>\n<li>those that operate on web assets</li>\n</ul>\n<p dir=\"auto\">Examples of source file tasks as plugins are CoffeeScript, LESS and JSHint. Some of these take a source file and produce a\ntarget web asset e.g. CoffeeScript produces JS files. Plugins in this category are mutually exclusive to each other in\nterms of their function i.e. only one CoffeeScript plugin will take CoffeeScript sources and produce target JS files.\nIn summary, source file plugins produce web assets.</p>\n<p dir=\"auto\">Asset tasks operate on web assets directly. The assets they operate on depend on a \"stage\" in the asset pipeline.\nExamples of web asset tasks as plugins include RequireJs optimisation, gzip and md5 hashing.</p>\n<p dir=\"auto\">Source file tasks can be considered to provide files for the first stage of asset pipeline processing and they will be\nexecuted often e.g. for each compilation of your project's source files. Asset pipeline tasks are generally executed at the time\nthat you wish to prepare a distribution for deployment into, say, production.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Exporting Assets</h2><a id=\"user-content-exporting-assets\" class=\"anchor\" aria-label=\"Permalink: Exporting Assets\" href=\"#exporting-assets\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">Assets are automatically available across subproject dependencies using sbt's\nclasspath setup. The assets are exported in the webjar format and are imported\nin the same way as other webjar dependencies.</p>\n<p dir=\"auto\">So given a project dependency like this, where project A depends on project B:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"lazy val a = (project in file(&quot;a&quot;))\n  .enablePlugins(SbtWeb)\n  .dependsOn(b)\n\nlazy val b = (project in file(&quot;b&quot;))\n  .enablePlugins(SbtWeb)\"><pre><span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">a</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a<span class=\"pl-pds\">\"</span></span>))\n  .enablePlugins(<span class=\"pl-en\">SbtWeb</span>)\n  .dependsOn(b)\n\n<span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">b</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b<span class=\"pl-pds\">\"</span></span>))\n  .enablePlugins(<span class=\"pl-en\">SbtWeb</span>)</pre></div>\n<p dir=\"auto\">Assets from project B are available to project A under <code>lib/b/</code>.</p>\n<p dir=\"auto\">The module name for imported assets is the same as the project module name (the\nnormalized name of the project). This can be changed with the\n<code>Assets / moduleName</code> setting.</p>\n<p dir=\"auto\">Test assets are also exported if a test dependency is specified. For example:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"lazy val a = (project in file(&quot;a&quot;))\n  .enablePlugins(SbtWeb)\n  .dependsOn(b % &quot;compile;test-&gt;test&quot;)\"><pre><span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-v\">a</span> <span class=\"pl-k\">=</span> (project in file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a<span class=\"pl-pds\">\"</span></span>))\n  .enablePlugins(<span class=\"pl-en\">SbtWeb</span>)\n  .dependsOn(b <span class=\"pl-k\">%</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>compile;test-&gt;test<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h3 class=\"heading-element\" dir=\"auto\">Packaging and Publishing</h3><a id=\"user-content-packaging-and-publishing\" class=\"anchor\" aria-label=\"Permalink: Packaging and Publishing\" href=\"#packaging-and-publishing\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\"><em>The packaging and publishing behavior is documented for sbt-web version <code>1.1.0</code> and above.</em></p>\n<p dir=\"auto\">Assets are automatically packaged and published along with project classes\nat the following path inside the jar: <code>META-INF/resources/webjars/module/version/</code>.\nThis means that assets can be shared as external library dependencies. Simply publish\nthe project and use as a library dependency. The assets will be extracted and\navailable under <code>lib/module/</code> in the same way as other webjar dependencies or\ninternal dependencies.</p>\n<p dir=\"auto\">To package all assets for production there is a <code>Assets / packageBin</code> task,\n<code>web-assets:package</code> in the sbt shell. This packages the result of the asset\npipeline. An optional path prefix can be specified with the <code>packagePrefix in Assets</code> setting. For example, to have assets packaged under a <code>public</code>\ndirectory, as used for Play Framework distributions:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Assets / WebKeys.packagePrefix := &quot;public/&quot;\"><pre><span class=\"pl-en\">Assets</span> <span class=\"pl-k\">/</span> <span class=\"pl-en\">WebKeys</span>.packagePrefix <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>public/<span class=\"pl-pds\">\"</span></span></pre></div>\n<p dir=\"auto\">To automatically add the production-ready assets to classpath, the following might be useful:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"(Runtime / managedClasspath) += (Assets / packageBin).value\"><pre>(<span class=\"pl-en\">Runtime</span> <span class=\"pl-k\">/</span> managedClasspath) <span class=\"pl-k\">+</span><span class=\"pl-k\">=</span> (<span class=\"pl-en\">Assets</span> <span class=\"pl-k\">/</span> packageBin).value</pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Writing a Source File task</h2><a id=\"user-content-writing-a-source-file-task\" class=\"anchor\" aria-label=\"Permalink: Writing a Source File task\" href=\"#writing-a-source-file-task\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">The following represents the minimum amount of code required in a <code>build.sbt</code> to create a task that operates on source files i.e.\nthose files that are available for processing from <code>src/main/assets</code>. Source file tasks are\nresource generators in sbt terms.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"val mySourceFileTask = taskKey[Seq[File]](&quot;Some source file task&quot;)\n\nmySourceFileTask := Nil\n\nAssets / sourceGenerators += mySourceFileTask.taskValue\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-v\">mySourceFileTask</span> <span class=\"pl-k\">=</span> taskKey[<span class=\"pl-en\">Seq</span>[<span class=\"pl-en\">File</span>]](<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Some source file task<span class=\"pl-pds\">\"</span></span>)\n\nmySourceFileTask <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-en\">Nil</span>\n\n<span class=\"pl-en\">Assets</span> <span class=\"pl-k\">/</span> sourceGenerators <span class=\"pl-k\">+</span><span class=\"pl-k\">=</span> mySourceFileTask.taskValue</pre></div>\n<p dir=\"auto\">The addition of the <code>mySourceFileTask</code> to <code>Assets / sourceGenerators</code> declares the task as a resource generator and,\nas such, will be executed in parallel with other resource generators during the <code>WebKeys.assets</code> task execution.\nUsing sbt's <code>show</code> command will yield the directory where all source file assets have been written to e.g.:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"show web-assets:assets\"><pre>show web<span class=\"pl-k\">-</span>assets<span class=\"pl-k\">:</span>assets</pre></div>\n<p dir=\"auto\">Source file tasks take input, typically from <code>Assets / sourceDirectory</code> (and/or <code>TestAssets</code>) and produce a sequence\nof files that have been generated from that input.</p>\n<p dir=\"auto\">The following code illustrates a more complete example where input files matching *.coffee are taken and copied to an\noutput folder:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"mySourceFileTask := {\n  // translate .coffee files into .js files\n  val sourceDir = (Assets / sourceDirectory).value\n  val targetDir = webTarget.value / &quot;cs-plugin&quot;\n  val sources = sourceDir ** &quot;*.coffee&quot;\n  val mappings = sources pair relativeTo(sourceDir)\n  val renamed = mappings map { case (file, path) =&gt; file -&gt; path.replaceAll(&quot;coffee&quot;, &quot;js&quot;) }\n  val copies = renamed map { case (file, path) =&gt; file -&gt; (Assets / resourceManaged).value / path }\n  IO.copy(copies)\n  copies map (_._2)\n}\"><pre>mySourceFileTask <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> {\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> translate .coffee files into .js files</span>\n  <span class=\"pl-k\">val</span> <span class=\"pl-v\">sourceDir</span> <span class=\"pl-k\">=</span> (<span class=\"pl-en\">Assets</span> <span class=\"pl-k\">/</span> sourceDirectory).value\n  <span class=\"pl-k\">val</span> <span class=\"pl-v\">targetDir</span> <span class=\"pl-k\">=</span> webTarget.value <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cs-plugin<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-k\">val</span> <span class=\"pl-v\">sources</span> <span class=\"pl-k\">=</span> sourceDir <span class=\"pl-k\">**</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>*.coffee<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-k\">val</span> <span class=\"pl-v\">mappings</span> <span class=\"pl-k\">=</span> sources pair relativeTo(sourceDir)\n  <span class=\"pl-k\">val</span> <span class=\"pl-v\">renamed</span> <span class=\"pl-k\">=</span> mappings map { <span class=\"pl-k\">case</span> (file, path) <span class=\"pl-k\">=&gt;</span> file <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> path.replaceAll(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>coffee<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>js<span class=\"pl-pds\">\"</span></span>) }\n  <span class=\"pl-k\">val</span> <span class=\"pl-v\">copies</span> <span class=\"pl-k\">=</span> renamed map { <span class=\"pl-k\">case</span> (file, path) <span class=\"pl-k\">=&gt;</span> file <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> (<span class=\"pl-en\">Assets</span> <span class=\"pl-k\">/</span> resourceManaged).value <span class=\"pl-k\">/</span> path }\n  <span class=\"pl-en\">IO</span>.copy(copies)\n  copies map (_._2)\n}</pre></div>\n<p dir=\"auto\">Using the <code>WebKeys.assets</code> task will perform source file tasks in parallel. If you find yourself using a\nsource file task across many projects then consider wrapping it with an sbt plugin. Example source file plugins\nare <code>sbt-jshint</code>, <code>sbt-coffeescript</code> and <code>sbt-stylus</code>.</p>\n<p dir=\"auto\">As a final note, if you plugin depends on node modules e.g. those that are extracted from WebJars or from NPM,\nthen you will need to have your task depend on the node module extraction task. The following illustrates how\ngiven the <code>Assets</code> scope:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"mySourceFileTask := Def.task {\n  Nil\n}.dependsOn(Assets / WebKeys.nodeModules).value\"><pre>mySourceFileTask <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-en\">Def</span>.task {\n  <span class=\"pl-en\">Nil</span>\n}.dependsOn(<span class=\"pl-en\">Assets</span> <span class=\"pl-k\">/</span> <span class=\"pl-en\">WebKeys</span>.nodeModules).value</pre></div>\n<p dir=\"auto\">If you're wrapping the task within a plugin then you will need the Plugin's scope as opposed to the <code>Assets</code>\nscope i.e.:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"mySourceFileTask := Def.task {\n  Nil\n}.dependsOn(Plugin / WebKeys.nodeModules).value\"><pre>mySourceFileTask <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-en\">Def</span>.task {\n  <span class=\"pl-en\">Nil</span>\n}.dependsOn(<span class=\"pl-en\">Plugin</span> <span class=\"pl-k\">/</span> <span class=\"pl-en\">WebKeys</span>.nodeModules).value</pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Writing an Asset Pipeline task</h2><a id=\"user-content-writing-an-asset-pipeline-task\" class=\"anchor\" aria-label=\"Permalink: Writing an Asset Pipeline task\" href=\"#writing-an-asset-pipeline-task\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">The following represents the minimum amount of code required to create a pipeline stage in a <code>build.sbt</code> file:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import com.typesafe.sbt.web.pipeline.Pipeline\n\nval myPipelineTask = taskKey[Pipeline.Stage](&quot;Some pipeline task&quot;)\n\nmyPipelineTask := identity\n\npipelineStages := Seq(myPipelineTask)\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-en\">com</span>.<span class=\"pl-en\">typesafe</span>.<span class=\"pl-en\">sbt</span>.<span class=\"pl-en\">web</span>.<span class=\"pl-en\">pipeline</span>.<span class=\"pl-en\">Pipeline</span>\n\n<span class=\"pl-k\">val</span> <span class=\"pl-v\">myPipelineTask</span> <span class=\"pl-k\">=</span> taskKey[<span class=\"pl-en\">Pipeline</span>.<span class=\"pl-en\">Stage</span>](<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Some pipeline task<span class=\"pl-pds\">\"</span></span>)\n\nmyPipelineTask <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> identity\n\npipelineStages <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-en\">Seq</span>(myPipelineTask)</pre></div>\n<p dir=\"auto\"><code>myPipelineTask</code> is a function that receives a <code>Seq[PathMapping]</code> and produces a <code>Seq[PathMapping]</code>. <code>PathMapping</code> is a tuple\nof <code>(File, String)</code> where the first member provides the full path to a file, and the second member declares the portion of that\npath which is to be considered relative. For example <code>(file(\"/a/b/c\"), \"b/c\"). </code>PathMapping` types are commonly used in sbt and\nare useful in terms of providing access to a file and preserving information about its relative path; the latter being typically\nuseful for copying files to a target folder where the relative portion of the path must be retained.</p>\n<p dir=\"auto\">In the above example an identity function is used i.e. what is passed in is simply returned. The task is included within a\nsequence and assigned to <code>pipelineStages</code> i.e. the sequence represents the asset pipeline. Each stage in the asset pipeline is\nexecuted after any previous stage has completed. A stage therefore receives the product of files any previous stage as input.\nA stage's output then becomes the input to any subsequent stage. The first stage will always receive the output of having\nexecuted source file tasks as its input.</p>\n<p dir=\"auto\">If you have some need for the assets produced by the <code>pipelineStages</code> in your development environment (during <code>play run</code>), then you can scope the <code>pipelineStages</code> to the <code>Assets</code> config.</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Assets / pipelineStages := Seq(myPipelineTask)\"><pre><span class=\"pl-en\">Assets</span> <span class=\"pl-k\">/</span> pipelineStages <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> <span class=\"pl-en\">Seq</span>(myPipelineTask)</pre></div>\n<p dir=\"auto\">To perform the asset pipeline tasks use the <code>WebKeys.stage</code> task. If you use sbt's <code>show</code> command from the console then you will see the directory that the pipeline has been written to e.g.:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"show web-stage\"><pre>show web<span class=\"pl-k\">-</span>stage</pre></div>\n<p dir=\"auto\">Returning what is passed in is not particularly useful. Stages tend to add and remove files from the input as expressed in\nthe output returned. The following expanded task simulates minifying some js files and consequently adds files to the pipeline:</p>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"myPipelineTask := { mappings: Seq[PathMapping] =&gt;\n  // pretend to combine all .js files into one .min.js file\n  val targetDir = webTarget.value / &quot;myPipelineTask&quot; / &quot;target&quot;\n  val (js, other) = mappings partition (_._2.endsWith(&quot;.js&quot;))\n  val minFile = targetDir / &quot;js&quot; / &quot;all.min.js&quot;\n  IO.touch(minFile)\n  val minMappings = Seq(minFile) pair relativeTo(targetDir)\n  minMappings ++ other\n}\"><pre>myPipelineTask <span class=\"pl-k\">:</span><span class=\"pl-k\">=</span> { <span class=\"pl-v\">mappings</span>: <span class=\"pl-en\">Seq</span>[<span class=\"pl-en\">PathMapping</span>] <span class=\"pl-k\">=&gt;</span>\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> pretend to combine all .js files into one .min.js file</span>\n  <span class=\"pl-k\">val</span> <span class=\"pl-v\">targetDir</span> <span class=\"pl-k\">=</span> webTarget.value <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>myPipelineTask<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>target<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-k\">val</span> (js, other) <span class=\"pl-k\">=</span> mappings partition (_._2.endsWith(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.js<span class=\"pl-pds\">\"</span></span>))\n  <span class=\"pl-k\">val</span> <span class=\"pl-v\">minFile</span> <span class=\"pl-k\">=</span> targetDir <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>js<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>all.min.js<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-en\">IO</span>.touch(minFile)\n  <span class=\"pl-k\">val</span> <span class=\"pl-v\">minMappings</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Seq</span>(minFile) pair relativeTo(targetDir)\n  minMappings <span class=\"pl-k\">++</span> other\n}</pre></div>\n<p dir=\"auto\">If you find yourself commonly using a pipeline stage task across projects then you should consider wrapping it with an sbt\nplugin. Examples of such plugins are <code>sbt-digest</code>, <code>sbt-gzip</code>, <code>sbt-rjs</code> and <code>sbt-uglify</code>. The first two illustrate stages\nimplemented using JVM based libraries while the latter two illustrate invoking JavaScript via js-engine.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">WebDriver and js-engine</h2><a id=\"user-content-webdriver-and-js-engine\" class=\"anchor\" aria-label=\"Permalink: WebDriver and js-engine\" href=\"#webdriver-and-js-engine\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">The <a href=\"https://github.com/typesafehub/webdriver\">WebDriver</a> and\n<a href=\"https://github.com/typesafehub/js-engine\">js-engine</a> projects build on sbt-web and provide a DOM\noriented and DOM-less means of JavaScript execution respectively. sbt-web plugins will use one of the two of these\nplugins depending on their DOM requirements.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h1 class=\"heading-element\" dir=\"auto\">Releasing sbt-web</h1><a id=\"user-content-releasing-sbt-web\" class=\"anchor\" aria-label=\"Permalink: Releasing sbt-web\" href=\"#releasing-sbt-web\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<ol dir=\"auto\">\n<li>Tag the release: <code>git tag -s 1.2.3</code></li>\n<li>Push tag: <code>git push upstream 1.2.3</code></li>\n<li>GitHub action workflow does the rest: <a href=\"https://github.com/sbt/sbt-web/actions/workflows/publish.yml\">https://github.com/sbt/sbt-web/actions/workflows/publish.yml</a></li>\n</ol>\n</article></div>",
    "contributors" : [
      {
        "login" : "huntc",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/694893?v=4",
        "url" : "https://github.com/huntc",
        "contributions" : 173
      },
      {
        "login" : "mkurz",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/644927?v=4",
        "url" : "https://github.com/mkurz",
        "contributions" : 88
      },
      {
        "login" : "jroper",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/105833?v=4",
        "url" : "https://github.com/jroper",
        "contributions" : 47
      },
      {
        "login" : "scala-steward",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/43047562?v=4",
        "url" : "https://github.com/scala-steward",
        "contributions" : 33
      },
      {
        "login" : "pvlugter",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/59895?v=4",
        "url" : "https://github.com/pvlugter",
        "contributions" : 30
      },
      {
        "login" : "richdougherty",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/14750?v=4",
        "url" : "https://github.com/richdougherty",
        "contributions" : 10
      },
      {
        "login" : "benmccann",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/322311?v=4",
        "url" : "https://github.com/benmccann",
        "contributions" : 8
      },
      {
        "login" : "gmethvin",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/171663?v=4",
        "url" : "https://github.com/gmethvin",
        "contributions" : 5
      },
      {
        "login" : "eed3si9n",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/184683?v=4",
        "url" : "https://github.com/eed3si9n",
        "contributions" : 5
      },
      {
        "login" : "mdedetrich",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2337269?v=4",
        "url" : "https://github.com/mdedetrich",
        "contributions" : 4
      },
      {
        "login" : "joost-de-vries",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1859426?v=4",
        "url" : "https://github.com/joost-de-vries",
        "contributions" : 3
      },
      {
        "login" : "jaceklaskowski",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/62313?v=4",
        "url" : "https://github.com/jaceklaskowski",
        "contributions" : 3
      },
      {
        "login" : "marcospereira",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/4576?v=4",
        "url" : "https://github.com/marcospereira",
        "contributions" : 2
      },
      {
        "login" : "xuwei-k",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/389787?v=4",
        "url" : "https://github.com/xuwei-k",
        "contributions" : 2
      },
      {
        "login" : "jamesward",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/65043?v=4",
        "url" : "https://github.com/jamesward",
        "contributions" : 2
      },
      {
        "login" : "john-bernardo1",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/221734?v=4",
        "url" : "https://github.com/john-bernardo1",
        "contributions" : 1
      },
      {
        "login" : "jmparsons",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/514330?v=4",
        "url" : "https://github.com/jmparsons",
        "contributions" : 1
      },
      {
        "login" : "Damiya",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3479753?v=4",
        "url" : "https://github.com/Damiya",
        "contributions" : 1
      },
      {
        "login" : "matthewrennie",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1607447?v=4",
        "url" : "https://github.com/matthewrennie",
        "contributions" : 1
      },
      {
        "login" : "stanch",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2670454?v=4",
        "url" : "https://github.com/stanch",
        "contributions" : 1
      },
      {
        "login" : "kolloch",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/339354?v=4",
        "url" : "https://github.com/kolloch",
        "contributions" : 1
      },
      {
        "login" : "tanin47",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/494417?v=4",
        "url" : "https://github.com/tanin47",
        "contributions" : 1
      },
      {
        "login" : "tindzk",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/196819?v=4",
        "url" : "https://github.com/tindzk",
        "contributions" : 1
      },
      {
        "login" : "vmunier",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1211392?v=4",
        "url" : "https://github.com/vmunier",
        "contributions" : 1
      },
      {
        "login" : "nafg",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/98384?v=4",
        "url" : "https://github.com/nafg",
        "contributions" : 1
      },
      {
        "login" : "Atry",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/601530?v=4",
        "url" : "https://github.com/Atry",
        "contributions" : 1
      },
      {
        "login" : "guersam",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/969120?v=4",
        "url" : "https://github.com/guersam",
        "contributions" : 1
      },
      {
        "login" : "JasonStoltz",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1427475?v=4",
        "url" : "https://github.com/JasonStoltz",
        "contributions" : 1
      },
      {
        "login" : "earldouglas",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/424946?v=4",
        "url" : "https://github.com/earldouglas",
        "contributions" : 1
      },
      {
        "login" : "ebruchez",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/105769?v=4",
        "url" : "https://github.com/ebruchez",
        "contributions" : 1
      },
      {
        "login" : "eamelink",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/332784?v=4",
        "url" : "https://github.com/eamelink",
        "contributions" : 1
      },
      {
        "login" : "0x7fh",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/17913311?v=4",
        "url" : "https://github.com/0x7fh",
        "contributions" : 1
      },
      {
        "login" : "dwickern",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/752885?v=4",
        "url" : "https://github.com/dwickern",
        "contributions" : 1
      },
      {
        "login" : "dwijnand",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/344610?v=4",
        "url" : "https://github.com/dwijnand",
        "contributions" : 1
      },
      {
        "login" : "schmitch",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1641401?v=4",
        "url" : "https://github.com/schmitch",
        "contributions" : 1
      },
      {
        "login" : "arielscarpinelli",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1731260?v=4",
        "url" : "https://github.com/arielscarpinelli",
        "contributions" : 1
      },
      {
        "login" : "andriimartynov",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2194653?v=4",
        "url" : "https://github.com/andriimartynov",
        "contributions" : 1
      }
    ],
    "commits" : 437,
    "topics" : [
    ],
    "contributingGuide" : "https://github.com/sbt/sbt-web/blob/main/CONTRIBUTING.md",
    "codeOfConduct" : "https://github.com/sbt/.github/blob/master/CODE_OF_CONDUCT.md",
    "openIssues" : [
      {
        "number" : 234,
        "title" : "Fix tests for Windows",
        "url" : "https://github.com/sbt/sbt-web/issues/234"
      },
      {
        "number" : 200,
        "title" : "Speeding up the incremental extraction of web jars",
        "url" : "https://github.com/sbt/sbt-web/issues/200"
      },
      {
        "number" : 178,
        "title" : "defining a sourceGenerator from a subproject",
        "url" : "https://github.com/sbt/sbt-web/issues/178"
      },
      {
        "number" : 175,
        "title" : "Problems hooking task into asset phase",
        "url" : "https://github.com/sbt/sbt-web/issues/175"
      },
      {
        "number" : 164,
        "title" : "Different settings when using `sbt run` and `sbt stage`",
        "url" : "https://github.com/sbt/sbt-web/issues/164"
      },
      {
        "number" : 154,
        "title" : "Managed ClassPath in Runtime + Scala.js causes Intellij to Perform Full Optimized Scala.js build in project load",
        "url" : "https://github.com/sbt/sbt-web/issues/154"
      },
      {
        "number" : 150,
        "title" : "pipelineStages in Assets makes the build hang",
        "url" : "https://github.com/sbt/sbt-web/issues/150"
      },
      {
        "number" : 145,
        "title" : "Merging source maps",
        "url" : "https://github.com/sbt/sbt-web/issues/145"
      },
      {
        "number" : 133,
        "title" : "Symbolic links in multi-modules play project",
        "url" : "https://github.com/sbt/sbt-web/issues/133"
      },
      {
        "number" : 132,
        "title" : "Silence webjars logging during compilation",
        "url" : "https://github.com/sbt/sbt-web/issues/132"
      },
      {
        "number" : 126,
        "title" : "Including unmanagedResources as watchSources",
        "url" : "https://github.com/sbt/sbt-web/issues/126"
      },
      {
        "number" : 124,
        "title" : "Fat WebJars Expand node_modules to Wrong Directories",
        "url" : "https://github.com/sbt/sbt-web/issues/124"
      },
      {
        "number" : 122,
        "title" : "sbt-web asset output directory setup question",
        "url" : "https://github.com/sbt/sbt-web/issues/122"
      },
      {
        "number" : 121,
        "title" : "SBT is trying to copy the application.log file, RuntimeException: Could not copy",
        "url" : "https://github.com/sbt/sbt-web/issues/121"
      },
      {
        "number" : 118,
        "title" : "Using processed sbt-web assets in multi-module play project",
        "url" : "https://github.com/sbt/sbt-web/issues/118"
      },
      {
        "number" : 112,
        "title" : "Deduplicators are case-sensitive on Windows",
        "url" : "https://github.com/sbt/sbt-web/issues/112"
      },
      {
        "number" : 108,
        "title" : "Disable copying everything from assets folder to public folder",
        "url" : "https://github.com/sbt/sbt-web/issues/108"
      },
      {
        "number" : 67,
        "title" : "Using WebJar artifactId for directory can cause issues",
        "url" : "https://github.com/sbt/sbt-web/issues/67"
      },
      {
        "number" : 65,
        "title" : "Unminified assets remain accessible",
        "url" : "https://github.com/sbt/sbt-web/issues/65"
      },
      {
        "number" : 56,
        "title" : "sbt-web workflow vs. Grunt workflow",
        "url" : "https://github.com/sbt/sbt-web/issues/56"
      },
      {
        "number" : 54,
        "title" : "it:test (IntegrationTest) does not see (does not compile?) sbt-web managed sources",
        "url" : "https://github.com/sbt/sbt-web/issues/54"
      }
    ],
    "scalaPercentage" : 99,
    "license" : null,
    "commitActivity" : [
    ]
  },
  "settings" : {
    "preferStableVersion" : true,
    "defaultArtifact" : null,
    "customScalaDoc" : null,
    "documentationLinks" : [
    ],
    "contributorsWanted" : false,
    "deprecatedArtifacts" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "asset-management-and-bundlers",
    "chatroom" : null
  }
}