{
  "organization" : "twitter",
  "repository" : "summingbird",
  "creationDate" : 1405158498423,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1644300127804
    }
  },
  "githubInfo" : {
    "homepage" : "https://twitter.com/summingbird",
    "description" : "Streaming MapReduce with Scalding and Storm",
    "logo" : "https://avatars.githubusercontent.com/u/50278?v=4",
    "stars" : 2117,
    "forks" : 259,
    "watchers" : 295,
    "issues" : 163,
    "creationDate" : 1348612715000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h2 dir=\"auto\"><a id=\"user-content-summingbird\" class=\"anchor\" aria-hidden=\"true\" href=\"#summingbird\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Summingbird</h2>\n<p dir=\"auto\"><a href=\"https://opensource.twitter.dev/status/#retired\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/e60296b4d4ba76a9b9f59148ed684eda3b46ef90ad09a0f2dbb93adab8f5c846/68747470733a2f2f6f70656e736f757263652e747769747465722e6465762f7374617475732f726574697265642e737667\" alt=\"status: retired\" data-canonical-src=\"https://opensource.twitter.dev/status/retired.svg\" style=\"max-width: 100%;\"></a>\n<a href=\"http://travis-ci.org/twitter/summingbird\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/4f58b2b7c3c96ed54006638fd3f5a12cf975543c3453791545b5eea950a71a23/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f747769747465722f73756d6d696e67626972642e706e67\" alt=\"Build Status\" data-canonical-src=\"https://secure.travis-ci.org/twitter/summingbird.png\" style=\"max-width: 100%;\"></a>\n<a href=\"https://codecov.io/github/twitter/summingbird\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/c1c90b0d72ab370dac9f8d14e3a0290c842c47976b57904c2608a74037fe538f/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f747769747465722f73756d6d696e67626972642f646576656c6f702e7376673f6d61784167653d33363030\" alt=\"Codecov branch\" data-canonical-src=\"https://img.shields.io/codecov/c/github/twitter/summingbird/develop.svg?maxAge=3600\" style=\"max-width: 100%;\"></a>\n<a href=\"https://index.scala-lang.org/twitter/summingbird/summingbird-core\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/abe721df1ffec4b508f7318e5b57625631b9db58dd25c9c61533d13596ddb7da/68747470733a2f2f696e6465782e7363616c612d6c616e672e6f72672f747769747465722f73756d6d696e67626972642f73756d6d696e67626972642d636f72652f6c61746573742e7376673f636f6c6f723d6f72616e6765\" alt=\"Latest version\" data-canonical-src=\"https://index.scala-lang.org/twitter/summingbird/summingbird-core/latest.svg?color=orange\" style=\"max-width: 100%;\"></a>\n<a href=\"https://gitter.im/twitter/summingbird?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/6258991665e60bfe8fd6065c5a566aa8e1a69bf5686239aa9ac46a6f0eace172/68747470733a2f2f6261646765732e6769747465722e696d2f747769747465722f73756d6d696e67626972642e737667\" alt=\"Chat\" data-canonical-src=\"https://badges.gitter.im/twitter/summingbird.svg\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Summingbird is a library that lets you write MapReduce programs that look like native Scala or Java collection transformations and execute them on a number of well-known distributed MapReduce platforms, including <a href=\"https://github.com/nathanmarz/storm\">Storm</a> and <a href=\"https://github.com/twitter/scalding\">Scalding</a>.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://camo.githubusercontent.com/af3adb1d44e4618bf45d611286ad7d12770492c3fa6dfe1e9ba216f450cea113/68747470733a2f2f7261772e6769746875622e636f6d2f747769747465722f73756d6d696e67626972642f646576656c6f702f6c6f676f2f73756d6d696e67626972645f6c6f676f2e706e67\"><img src=\"https://camo.githubusercontent.com/af3adb1d44e4618bf45d611286ad7d12770492c3fa6dfe1e9ba216f450cea113/68747470733a2f2f7261772e6769746875622e636f6d2f747769747465722f73756d6d696e67626972642f646576656c6f702f6c6f676f2f73756d6d696e67626972645f6c6f676f2e706e67\" alt=\"Summingbird Logo\" data-canonical-src=\"https://raw.github.com/twitter/summingbird/develop/logo/summingbird_logo.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">While a word-counting aggregation in pure Scala might look like this:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  def wordCount(source: Iterable[String], store: MutableMap[String, Long]) =\n    source.flatMap { sentence =&gt;\n      toWords(sentence).map(_ -&gt; 1L)\n    }.foreach { case (k, v) =&gt; store.update(k, store.get(k) + v) }\"><pre>  <span class=\"pl-k\">def</span> <span class=\"pl-en\">wordCount</span>(<span class=\"pl-v\">source</span>: <span class=\"pl-en\">Iterable</span>[<span class=\"pl-en\">String</span>], <span class=\"pl-v\">store</span>: <span class=\"pl-en\">MutableMap</span>[<span class=\"pl-en\">String</span>, <span class=\"pl-en\">Long</span>]) <span class=\"pl-k\">=</span>\n    source.flatMap { sentence <span class=\"pl-k\">=&gt;</span>\n      toWords(sentence).map(_ <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">1L</span>)\n    }.foreach { <span class=\"pl-k\">case</span> (k, v) <span class=\"pl-k\">=&gt;</span> store.update(k, store.get(k) <span class=\"pl-k\">+</span> v) }</pre></div>\n<p dir=\"auto\">Counting words in Summingbird looks like this:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  def wordCount[P &lt;: Platform[P]]\n    (source: Producer[P, String], store: P#Store[String, Long]) =\n      source.flatMap { sentence =&gt;\n        toWords(sentence).map(_ -&gt; 1L)\n      }.sumByKey(store)\"><pre>  <span class=\"pl-k\">def</span> <span class=\"pl-en\">wordCount</span>[<span class=\"pl-en\">P</span> <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Platform</span>[<span class=\"pl-en\">P</span>]]\n    (<span class=\"pl-v\">source</span>: <span class=\"pl-en\">Producer</span>[<span class=\"pl-en\">P</span>, <span class=\"pl-en\">String</span>], <span class=\"pl-v\">store</span>: <span class=\"pl-en\">P</span>#<span class=\"pl-en\">Store</span>[<span class=\"pl-en\">String</span>, <span class=\"pl-en\">Long</span>]) <span class=\"pl-k\">=</span>\n      source.flatMap { sentence <span class=\"pl-k\">=&gt;</span>\n        toWords(sentence).map(_ <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">1L</span>)\n      }.sumByKey(store)</pre></div>\n<p dir=\"auto\">The logic is exactly the same, and the code is almost the same. The main difference is that you can execute the Summingbird program in \"batch mode\" (using <a href=\"https://github.com/twitter/scalding\">Scalding</a>), in \"realtime mode\" (using <a href=\"https://github.com/nathanmarz/storm\">Storm</a>), or on both Scalding and Storm in a hybrid batch/realtime mode that offers your application very attractive fault-tolerance properties.</p>\n<p dir=\"auto\">Summingbird provides you with the primitives you need to build rock solid production systems.</p>\n<h2 dir=\"auto\"><a id=\"user-content-getting-started-word-count-with-twitter\" class=\"anchor\" aria-hidden=\"true\" href=\"#getting-started-word-count-with-twitter\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Getting Started: Word Count with Twitter</h2>\n<p dir=\"auto\">The <code>summingbird-example</code> project allows you to run the wordcount program above on a sample of Twitter data using a local Storm topology and memcache instance. You can find the actual job definition in <a href=\"https://github.com/twitter/summingbird/blob/develop/summingbird-example/src/main/scala/com/twitter/summingbird/example/ExampleJob.scala\">ExampleJob.scala</a>.</p>\n<p dir=\"auto\">First, make sure you have <code>memcached</code> installed locally. If not, if you're on OS X, you can get it by installing <a href=\"http://brew.sh/\" rel=\"nofollow\">Homebrew</a> and running this command in a shell:</p>\n<div class=\"highlight highlight-source-shell position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"brew install memcached\"><pre>brew install memcached</pre></div>\n<p dir=\"auto\">When this is finished, run the <code>memcached</code> command in a separate terminal.</p>\n<p dir=\"auto\">Now you'll need to set up access to the Twitter Streaming API. <a href=\"http://tugdualgrall.blogspot.com/2012/11/couchbase-create-large-dataset-using.html\" rel=\"nofollow\">This blog post</a> has a great walkthrough, so open that page, head over to <a href=\"https://dev.twitter.com/\" rel=\"nofollow\">https://dev.twitter.com/</a> and get your various keys and tokens. Once you have these, clone the Summingbird repository:</p>\n<div class=\"highlight highlight-source-shell position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"git clone https://github.com/twitter/summingbird.git\ncd summingbird\"><pre>git clone https://github.com/twitter/summingbird.git\n<span class=\"pl-c1\">cd</span> summingbird</pre></div>\n<p dir=\"auto\">And open <a href=\"https://github.com/twitter/summingbird/blob/develop/summingbird-example/src/main/scala/com/twitter/summingbird/example/StormRunner.scala\">StormRunner.scala</a> in your editor. Replace the dummy variables under <code>config</code> variable with your auth tokens:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"lazy val config = new ConfigurationBuilder()\n    .setOAuthConsumerKey(&quot;mykey&quot;)\n    .setOAuthConsumerSecret(&quot;mysecret&quot;)\n    .setOAuthAccessToken(&quot;token&quot;)\n    .setOAuthAccessTokenSecret(&quot;tokensecret&quot;)\n    .setJSONStoreEnabled(true) // required for JSON serialization\n    .build\"><pre><span class=\"pl-k\">lazy</span> <span class=\"pl-k\">val</span> <span class=\"pl-smi\">config</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">ConfigurationBuilder</span>()\n    .setOAuthConsumerKey(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>mykey<span class=\"pl-pds\">\"</span></span>)\n    .setOAuthConsumerSecret(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>mysecret<span class=\"pl-pds\">\"</span></span>)\n    .setOAuthAccessToken(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>token<span class=\"pl-pds\">\"</span></span>)\n    .setOAuthAccessTokenSecret(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tokensecret<span class=\"pl-pds\">\"</span></span>)\n    .setJSONStoreEnabled(<span class=\"pl-c1\">true</span>) <span class=\"pl-c\"><span class=\"pl-c\">//</span> required for JSON serialization</span>\n    .build</pre></div>\n<p dir=\"auto\">You're all ready to go! Now it's time to unleash Storm on your Twitter stream. Make sure the <code>memcached</code> terminal is still open, then start Storm from the <code>summingbird</code> directory:</p>\n<div class=\"highlight highlight-source-shell position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"./sbt &quot;summingbird-example/run --local&quot;\"><pre>./sbt <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>summingbird-example/run --local<span class=\"pl-pds\">\"</span></span></pre></div>\n<p dir=\"auto\">Storm should puke out a bunch of output, then stabilize and hang. This means that Storm is updating your local memcache instance with counts of every word that it sees in each tweet.</p>\n<p dir=\"auto\">To query the aggregate results in Memcached, you'll need to open an SBT repl in a new terminal:</p>\n<div class=\"highlight highlight-source-shell position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"./sbt summingbird-example/console\"><pre>./sbt summingbird-example/console</pre></div>\n<p dir=\"auto\">At the launched repl, run the following:</p>\n<div class=\"highlight highlight-source-scala position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"scala&gt; import com.twitter.summingbird.example._\nimport com.twitter.summingbird.example._\n\nscala&gt; StormRunner.lookup(&quot;i&quot;)\n&lt;memcache store loading elided&gt;\nres0: Option[Long] = Some(5)\n\nscala&gt; StormRunner.lookup(&quot;i&quot;)\nres1: Option[Long] = Some(52)\"><pre>scala<span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> <span class=\"pl-en\">com</span>.<span class=\"pl-en\">twitter</span>.<span class=\"pl-en\">summingbird</span>.<span class=\"pl-en\">example</span>.<span class=\"pl-en\">_</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-en\">com</span>.<span class=\"pl-en\">twitter</span>.<span class=\"pl-en\">summingbird</span>.<span class=\"pl-en\">example</span>.<span class=\"pl-en\">_</span>\n\nscala<span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">StormRunner</span>.lookup(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>i<span class=\"pl-pds\">\"</span></span>)\n&lt;<span class=\"pl-ent\">memcache</span> store loading elided&gt;\nres0<span class=\"pl-k\">:</span> <span class=\"pl-en\">Option</span>[<span class=\"pl-en\">Long</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">Some</span>(<span class=\"pl-c1\">5</span>)\n\nscala<span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">StormRunner</span>.lookup(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>i<span class=\"pl-pds\">\"</span></span>)\nres1<span class=\"pl-k\">:</span> <span class=\"pl-en\">Option</span>[<span class=\"pl-en\">Long</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">Some</span>(<span class=\"pl-c1\">52</span>)</pre></div>\n<p dir=\"auto\">Boom. Counts for the word <code>\"i\"</code> are growing in realtime.</p>\n<p dir=\"auto\">See the <a href=\"https://github.com/twitter/summingbird/wiki/Getting-started-with-summingbird-example\">wiki page</a> for a more detailed explanation of the configuration required to get this job up and running and some ideas for where to go next.</p>\n<h2 dir=\"auto\"><a id=\"user-content-documentation\" class=\"anchor\" aria-hidden=\"true\" href=\"#documentation\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Documentation</h2>\n<p dir=\"auto\">To learn more and find links to tutorials and information around the web, check out the <a href=\"https://github.com/twitter/summingbird/wiki\">Summingbird Wiki</a>.</p>\n<p dir=\"auto\">The latest ScalaDocs are hosted on Summingbird's <a href=\"http://twitter.github.io/summingbird\" rel=\"nofollow\">Github Project Page</a>.</p>\n<h2 dir=\"auto\"><a id=\"user-content-contact\" class=\"anchor\" aria-hidden=\"true\" href=\"#contact\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Contact</h2>\n<p dir=\"auto\">Discussion occurs primarily on the <a href=\"https://groups.google.com/forum/#!forum/summingbird\" rel=\"nofollow\">Summingbird mailing list</a>. Issues should be reported on the GitHub issue tracker. Simpler issues appropriate for first-time contributors looking to help out are tagged \"newbie\".</p>\n<p dir=\"auto\">IRC: freenode channel #summingbird</p>\n<p dir=\"auto\">Follow <a href=\"https://twitter.com/summingbird\" rel=\"nofollow\">@summingbird</a> on Twitter for updates.</p>\n<p dir=\"auto\">Please feel free to use the beautiful <a href=\"https://drive.google.com/folderview?id=0B3i3pDi3yVgNMHV0TXVkTGZteWM&amp;usp=sharing\" rel=\"nofollow\">Summingbird logo</a> artwork anywhere.</p>\n<h2 dir=\"auto\"><a id=\"user-content-get-involved--code-of-conduct\" class=\"anchor\" aria-hidden=\"true\" href=\"#get-involved--code-of-conduct\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Get Involved + Code of Conduct</h2>\n<p dir=\"auto\">Pull requests and bug reports are always welcome!</p>\n<p dir=\"auto\">We use a lightweight form of project governence inspired by the one used by Apache projects.\nPlease see <a href=\"https://github.com/twitter/analytics-infra-governance#contributing-and-committership\">Contributing and Committership</a> for our code of conduct and our pull request review process.\nThe TL;DR is send us a pull request, iterate on the feedback + discussion, and get a +1 from a <a href=\"COMMITTERS.md\">Committer</a> in order to get your PR accepted.</p>\n<p dir=\"auto\">The current list of active committers (who can +1 a pull request) can be found here: <a href=\"COMMITTERS.md\">Committers</a></p>\n<p dir=\"auto\">A list of contributors to the project can be found here: <a href=\"https://github.com/twitter/summingbird/graphs/contributors\">Contributors</a></p>\n<h2 dir=\"auto\"><a id=\"user-content-maven\" class=\"anchor\" aria-hidden=\"true\" href=\"#maven\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Maven</h2>\n<p dir=\"auto\">Summingbird modules are published on maven central. The current groupid and version for all modules is, respectively, <code>\"com.twitter\"</code> and  <code>0.9.1</code>.</p>\n<p dir=\"auto\">Current published artifacts are</p>\n<ul dir=\"auto\">\n<li><code>summingbird-core_2.11</code></li>\n<li><code>summingbird-core_2.10</code></li>\n<li><code>summingbird-batch_2.11</code></li>\n<li><code>summingbird-batch_2.10</code></li>\n<li><code>summingbird-client_2.11</code></li>\n<li><code>summingbird-client_2.10</code></li>\n<li><code>summingbird-storm_2.11</code></li>\n<li><code>summingbird-storm_2.10</code></li>\n<li><code>summingbird-scalding_2.11</code></li>\n<li><code>summingbird-scalding_2.10</code></li>\n<li><code>summingbird-builder_2.11</code></li>\n<li><code>summingbird-builder_2.10</code></li>\n</ul>\n<p dir=\"auto\">The suffix denotes the scala version.</p>\n<h2 dir=\"auto\"><a id=\"user-content-authors-alphabetically\" class=\"anchor\" aria-hidden=\"true\" href=\"#authors-alphabetically\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Authors (alphabetically)</h2>\n<ul dir=\"auto\">\n<li>Oscar Boykin <a href=\"https://twitter.com/posco\" rel=\"nofollow\">https://twitter.com/posco</a></li>\n<li>Ian O'Connell <a href=\"https://twitter.com/0x138\" rel=\"nofollow\">https://twitter.com/0x138</a></li>\n<li>Sam Ritchie <a href=\"https://twitter.com/sritchie\" rel=\"nofollow\">https://twitter.com/sritchie</a></li>\n<li>Ashutosh Singhal <a href=\"https://twitter.com/daashu\" rel=\"nofollow\">https://twitter.com/daashu</a></li>\n</ul>\n<h2 dir=\"auto\"><a id=\"user-content-license\" class=\"anchor\" aria-hidden=\"true\" href=\"#license\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>License</h2>\n<p dir=\"auto\">Copyright 2013 Twitter, Inc.</p>\n<p dir=\"auto\">Licensed under the Apache License, Version 2.0: <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">http://www.apache.org/licenses/LICENSE-2.0</a></p>\n</article></div>",
    "contributors" : [
      {
        "login" : "ianoc",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/446652?v=4",
        "url" : "https://api.github.com/users/ianoc",
        "contributions" : 587
      },
      {
        "login" : "johnynek",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/67958?v=4",
        "url" : "https://api.github.com/users/johnynek",
        "contributions" : 454
      },
      {
        "login" : "sritchie",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/69635?v=4",
        "url" : "https://api.github.com/users/sritchie",
        "contributions" : 61
      },
      {
        "login" : "isnotinvain",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/372969?v=4",
        "url" : "https://api.github.com/users/isnotinvain",
        "contributions" : 57
      },
      {
        "login" : "pankajroark",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/664454?v=4",
        "url" : "https://api.github.com/users/pankajroark",
        "contributions" : 33
      },
      {
        "login" : "MansurAshraf",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/535144?v=4",
        "url" : "https://api.github.com/users/MansurAshraf",
        "contributions" : 33
      },
      {
        "login" : "tsdeng",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/169678?v=4",
        "url" : "https://api.github.com/users/tsdeng",
        "contributions" : 28
      },
      {
        "login" : "julienledem",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/367841?v=4",
        "url" : "https://api.github.com/users/julienledem",
        "contributions" : 25
      },
      {
        "login" : "singhala",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/692918?v=4",
        "url" : "https://api.github.com/users/singhala",
        "contributions" : 22
      },
      {
        "login" : "ttim",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/82200?v=4",
        "url" : "https://api.github.com/users/ttim",
        "contributions" : 21
      },
      {
        "login" : "jcoveney",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/830087?v=4",
        "url" : "https://api.github.com/users/jcoveney",
        "contributions" : 15
      },
      {
        "login" : "oscar-stripe",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/16548258?v=4",
        "url" : "https://api.github.com/users/oscar-stripe",
        "contributions" : 15
      },
      {
        "login" : "adamkozuch",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/5136443?v=4",
        "url" : "https://api.github.com/users/adamkozuch",
        "contributions" : 13
      },
      {
        "login" : "reconditesea",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/4226979?v=4",
        "url" : "https://api.github.com/users/reconditesea",
        "contributions" : 8
      },
      {
        "login" : "jnievelt",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/4684038?v=4",
        "url" : "https://api.github.com/users/jnievelt",
        "contributions" : 5
      },
      {
        "login" : "aniket486",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/317707?v=4",
        "url" : "https://api.github.com/users/aniket486",
        "contributions" : 4
      },
      {
        "login" : "xudifsd",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/665253?v=4",
        "url" : "https://api.github.com/users/xudifsd",
        "contributions" : 3
      },
      {
        "login" : "caniszczyk",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/63777?v=4",
        "url" : "https://api.github.com/users/caniszczyk",
        "contributions" : 3
      },
      {
        "login" : "bdarrow",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/394184?v=4",
        "url" : "https://api.github.com/users/bdarrow",
        "contributions" : 2
      },
      {
        "login" : "bwallerstein",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3664668?v=4",
        "url" : "https://api.github.com/users/bwallerstein",
        "contributions" : 2
      },
      {
        "login" : "egonina",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3441503?v=4",
        "url" : "https://api.github.com/users/egonina",
        "contributions" : 2
      },
      {
        "login" : "fgcallari-twitter",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/6578455?v=4",
        "url" : "https://api.github.com/users/fgcallari-twitter",
        "contributions" : 2
      },
      {
        "login" : "kevinoliver",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/347229?v=4",
        "url" : "https://api.github.com/users/kevinoliver",
        "contributions" : 2
      },
      {
        "login" : "kscaldef",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/50001?v=4",
        "url" : "https://api.github.com/users/kscaldef",
        "contributions" : 2
      },
      {
        "login" : "NPraneeth",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/15038254?v=4",
        "url" : "https://api.github.com/users/NPraneeth",
        "contributions" : 2
      },
      {
        "login" : "sritchie-stripe",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/23121440?v=4",
        "url" : "https://api.github.com/users/sritchie-stripe",
        "contributions" : 2
      },
      {
        "login" : "adelviscio",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/938788?v=4",
        "url" : "https://api.github.com/users/adelviscio",
        "contributions" : 2
      },
      {
        "login" : "rubanm",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/2401144?v=4",
        "url" : "https://api.github.com/users/rubanm",
        "contributions" : 2
      },
      {
        "login" : "AnishShah",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3175743?v=4",
        "url" : "https://api.github.com/users/AnishShah",
        "contributions" : 1
      },
      {
        "login" : "benpence",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/736903?v=4",
        "url" : "https://api.github.com/users/benpence",
        "contributions" : 1
      },
      {
        "login" : "penland365",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1630235?v=4",
        "url" : "https://api.github.com/users/penland365",
        "contributions" : 1
      },
      {
        "login" : "dribnet",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/945979?v=4",
        "url" : "https://api.github.com/users/dribnet",
        "contributions" : 1
      },
      {
        "login" : "twitter-service",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/18583677?v=4",
        "url" : "https://api.github.com/users/twitter-service",
        "contributions" : 1
      },
      {
        "login" : "wlue",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/200448?v=4",
        "url" : "https://api.github.com/users/wlue",
        "contributions" : 1
      },
      {
        "login" : "ryanlecompte",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/637158?v=4",
        "url" : "https://api.github.com/users/ryanlecompte",
        "contributions" : 1
      }
    ],
    "commits" : 1414,
    "topics" : [
    ],
    "contributingGuide" : null,
    "codeOfConduct" : null,
    "chatroom" : "https://gitter.im/twitter/summingbird",
    "openIssues" : [
      {
        "number" : 773,
        "title" : "Use more container than chain",
        "url" : "https://github.com/twitter/summingbird/issues/773"
      },
      {
        "number" : 760,
        "title" : "Summingbird batch doesn't work with the latest Scalding develop",
        "url" : "https://github.com/twitter/summingbird/issues/760"
      },
      {
        "number" : 749,
        "title" : "storm platform sometimes makes nodes with only merges",
        "url" : "https://github.com/twitter/summingbird/issues/749"
      },
      {
        "number" : 746,
        "title" : "summingbird does not preserve equality on Producers",
        "url" : "https://github.com/twitter/summingbird/issues/746"
      },
      {
        "number" : 743,
        "title" : "optionMap not being fused with flatMap in storm",
        "url" : "https://github.com/twitter/summingbird/issues/743"
      },
      {
        "number" : 741,
        "title" : "Remove `ArbitraryWorkaround` class when scala check release will be out",
        "url" : "https://github.com/twitter/summingbird/issues/741"
      },
      {
        "number" : 736,
        "title" : "Apache beam support?",
        "url" : "https://github.com/twitter/summingbird/issues/736"
      },
      {
        "number" : 733,
        "title" : "Storm platfrom fails in case of two sumByKey`s over different semigroups and/or batchers and/or shards count",
        "url" : "https://github.com/twitter/summingbird/issues/733"
      },
      {
        "number" : 729,
        "title" : "Options are not serializable",
        "url" : "https://github.com/twitter/summingbird/issues/729"
      },
      {
        "number" : 725,
        "title" : "Storm platform fails in case of `sumByKey` in one branch and `flatMap` in another with `flatMap`ed source fails in runtime",
        "url" : "https://github.com/twitter/summingbird/issues/725"
      },
      {
        "number" : 720,
        "title" : "VersionBatchStore calls mkdirs indirectly on read",
        "url" : "https://github.com/twitter/summingbird/issues/720"
      },
      {
        "number" : 719,
        "title" : "How to install summingbird in cluster?",
        "url" : "https://github.com/twitter/summingbird/issues/719"
      },
      {
        "number" : 713,
        "title" : "Reducer estimation does not work with summingbird",
        "url" : "https://github.com/twitter/summingbird/issues/713"
      },
      {
        "number" : 712,
        "title" : "Ability to add named nodes",
        "url" : "https://github.com/twitter/summingbird/issues/712"
      },
      {
        "number" : 711,
        "title" : "Make it easy to add metrics to SummerConstructor",
        "url" : "https://github.com/twitter/summingbird/issues/711"
      },
      {
        "number" : 710,
        "title" : "Use scalding.Execution in scalding platform instead of custom monad",
        "url" : "https://github.com/twitter/summingbird/issues/710"
      },
      {
        "number" : 709,
        "title" : "Fix \"no valid targets for annotation on value\" warning",
        "url" : "https://github.com/twitter/summingbird/issues/709"
      },
      {
        "number" : 707,
        "title" : "Add a WithTime node",
        "url" : "https://github.com/twitter/summingbird/issues/707"
      },
      {
        "number" : 705,
        "title" : "Operation container should use a more general container than Chain",
        "url" : "https://github.com/twitter/summingbird/issues/705"
      },
      {
        "number" : 704,
        "title" : "Memcache timeout",
        "url" : "https://github.com/twitter/summingbird/issues/704"
      },
      {
        "number" : 690,
        "title" : "leftJoin against KeyProducer should support window on both streams",
        "url" : "https://github.com/twitter/summingbird/issues/690"
      },
      {
        "number" : 688,
        "title" : "summingbird online hides the time from writes.",
        "url" : "https://github.com/twitter/summingbird/issues/688"
      },
      {
        "number" : 681,
        "title" : "Memory platform can remove side effects",
        "url" : "https://github.com/twitter/summingbird/issues/681"
      },
      {
        "number" : 678,
        "title" : "Storm supports multiple output streams, we could use this",
        "url" : "https://github.com/twitter/summingbird/issues/678"
      },
      {
        "number" : 671,
        "title" : "Summingbird doesn't pick correct option when same setting defined on multiple nodes",
        "url" : "https://github.com/twitter/summingbird/issues/671"
      },
      {
        "number" : 664,
        "title" : "Support grouped leftJoin in summingbird",
        "url" : "https://github.com/twitter/summingbird/issues/664"
      },
      {
        "number" : 662,
        "title" : "unresolved dependency: com.twitter.common.zookeeper",
        "url" : "https://github.com/twitter/summingbird/issues/662"
      },
      {
        "number" : 661,
        "title" : "Summingbird online should have the ability to apply back pressure based on GC",
        "url" : "https://github.com/twitter/summingbird/issues/661"
      },
      {
        "number" : 660,
        "title" : "AlsoTailProducer in its own bolt in storm",
        "url" : "https://github.com/twitter/summingbird/issues/660"
      },
      {
        "number" : 652,
        "title" : "make ClientReadableStore which is ReadableStore[(K, BatchID), V]",
        "url" : "https://github.com/twitter/summingbird/issues/652"
      },
      {
        "number" : 651,
        "title" : "Consuming the output of sumByKey",
        "url" : "https://github.com/twitter/summingbird/issues/651"
      },
      {
        "number" : 650,
        "title" : "WaitingState.begin should perhaps return Try",
        "url" : "https://github.com/twitter/summingbird/issues/650"
      },
      {
        "number" : 643,
        "title" : "summingbird-example is broken",
        "url" : "https://github.com/twitter/summingbird/issues/643"
      },
      {
        "number" : 639,
        "title" : "Add tests for flatMapValues/mapValues/etc...",
        "url" : "https://github.com/twitter/summingbird/issues/639"
      },
      {
        "number" : 634,
        "title" : "Enable DagOptimizer for storm and scalding",
        "url" : "https://github.com/twitter/summingbird/issues/634"
      },
      {
        "number" : 633,
        "title" : "Add better tests around naming",
        "url" : "https://github.com/twitter/summingbird/issues/633"
      },
      {
        "number" : 619,
        "title" : "InitialBatchedStore should support non-empty initialization",
        "url" : "https://github.com/twitter/summingbird/issues/619"
      },
      {
        "number" : 605,
        "title" : "StormPlatform laws are flakey",
        "url" : "https://github.com/twitter/summingbird/issues/605"
      },
      {
        "number" : 585,
        "title" : "How does SummingBird optimize the topology submitted to storm?",
        "url" : "https://github.com/twitter/summingbird/issues/585"
      },
      {
        "number" : 583,
        "title" : "in JobCounters in stats",
        "url" : "https://github.com/twitter/summingbird/issues/583"
      },
      {
        "number" : 575,
        "title" : "Add scalding tests to verify contracts on PipeFactory",
        "url" : "https://github.com/twitter/summingbird/issues/575"
      },
      {
        "number" : 568,
        "title" : "Document or improve the inconsistencies between Service and Store online",
        "url" : "https://github.com/twitter/summingbird/issues/568"
      },
      {
        "number" : 561,
        "title" : "running in multiple hosts.",
        "url" : "https://github.com/twitter/summingbird/issues/561"
      },
      {
        "number" : 560,
        "title" : "Handle a diamond case for jobs that join against a dependent store (offline)",
        "url" : "https://github.com/twitter/summingbird/issues/560"
      },
      {
        "number" : 559,
        "title" : "Support MergedProducer in join against dependent store for offline platform",
        "url" : "https://github.com/twitter/summingbird/issues/559"
      },
      {
        "number" : 558,
        "title" : "TailProducer clean up",
        "url" : "https://github.com/twitter/summingbird/issues/558"
      },
      {
        "number" : 556,
        "title" : "Possible solution to the \"all Stores are services\" problem",
        "url" : "https://github.com/twitter/summingbird/issues/556"
      },
      {
        "number" : 555,
        "title" : "We should make Batching required in summingbird-scalding.",
        "url" : "https://github.com/twitter/summingbird/issues/555"
      },
      {
        "number" : 552,
        "title" : "Enabling scan on summingbird",
        "url" : "https://github.com/twitter/summingbird/issues/552"
      },
      {
        "number" : 541,
        "title" : "Explore type safety of K[_] equality in the DAG optimizer",
        "url" : "https://github.com/twitter/summingbird/issues/541"
      },
      {
        "number" : 540,
        "title" : "Explore removal of Expr type from DAG optimizer code",
        "url" : "https://github.com/twitter/summingbird/issues/540"
      },
      {
        "number" : 531,
        "title" : "./sbt \"summingbird-example/run --local\" exits with error code 20",
        "url" : "https://github.com/twitter/summingbird/issues/531"
      },
      {
        "number" : 529,
        "title" : "Use scalding ExecutionContext instead of custom code",
        "url" : "https://github.com/twitter/summingbird/issues/529"
      },
      {
        "number" : 523,
        "title" : "In online planning like name nodes we should strip the identity keyed producers",
        "url" : "https://github.com/twitter/summingbird/issues/523"
      },
      {
        "number" : 522,
        "title" : ".optionMap(..).optionMap(..) push to Spout",
        "url" : "https://github.com/twitter/summingbird/issues/522"
      },
      {
        "number" : 517,
        "title" : "We should strip the callstack printing from the timeout exception",
        "url" : "https://github.com/twitter/summingbird/issues/517"
      },
      {
        "number" : 515,
        "title" : "Remove lookup join from summingbird-scalding",
        "url" : "https://github.com/twitter/summingbird/issues/515"
      },
      {
        "number" : 513,
        "title" : "Restate the core spark types in terms of a Reader monad",
        "url" : "https://github.com/twitter/summingbird/issues/513"
      },
      {
        "number" : 512,
        "title" : "Create some tests that act as a contract for all Platforms (PlatformLaws)",
        "url" : "https://github.com/twitter/summingbird/issues/512"
      },
      {
        "number" : 511,
        "title" : "Use a FuturePool for blocking spark actions",
        "url" : "https://github.com/twitter/summingbird/issues/511"
      },
      {
        "number" : 510,
        "title" : "Remove state from SparkPlatform",
        "url" : "https://github.com/twitter/summingbird/issues/510"
      },
      {
        "number" : 509,
        "title" : "Test running real jobs on a real spark cluster",
        "url" : "https://github.com/twitter/summingbird/issues/509"
      },
      {
        "number" : 508,
        "title" : "Decide whether PlatformPlanner is useful or not",
        "url" : "https://github.com/twitter/summingbird/issues/508"
      },
      {
        "number" : 507,
        "title" : "Add logic for lookups / leftjoins repsecting time to spark platform",
        "url" : "https://github.com/twitter/summingbird/issues/507"
      },
      {
        "number" : 506,
        "title" : "Add logic for finding the maximal covered timespan by various sources / stores to spark-platform",
        "url" : "https://github.com/twitter/summingbird/issues/506"
      },
      {
        "number" : 505,
        "title" : "Add support for batching to spark platform",
        "url" : "https://github.com/twitter/summingbird/issues/505"
      },
      {
        "number" : 496,
        "title" : "StormTestRun on windows",
        "url" : "https://github.com/twitter/summingbird/issues/496"
      },
      {
        "number" : 494,
        "title" : "sbt-Error when not checking out with git",
        "url" : "https://github.com/twitter/summingbird/issues/494"
      },
      {
        "number" : 493,
        "title" : "Means to set some sane defaults for storm worker hosts",
        "url" : "https://github.com/twitter/summingbird/issues/493"
      },
      {
        "number" : 492,
        "title" : "Async caches for triggers should probably use ManagementFactory.getMemoryMXBean",
        "url" : "https://github.com/twitter/summingbird/issues/492"
      },
      {
        "number" : 490,
        "title" : "Use a consistent style around defaults",
        "url" : "https://github.com/twitter/summingbird/issues/490"
      },
      {
        "number" : 474,
        "title" : "Provide an example summingbird-scalding job",
        "url" : "https://github.com/twitter/summingbird/issues/474"
      },
      {
        "number" : 473,
        "title" : "Should we add another type to represent an aggregated store?",
        "url" : "https://github.com/twitter/summingbird/issues/473"
      },
      {
        "number" : 468,
        "title" : "Provide a pure online-only storm platform",
        "url" : "https://github.com/twitter/summingbird/issues/468"
      },
      {
        "number" : 461,
        "title" : "Add output batching support to Intermediate flatMap/source",
        "url" : "https://github.com/twitter/summingbird/issues/461"
      },
      {
        "number" : 446,
        "title" : "Need a way to deal with multiple set parameters when operations are condensed to one node",
        "url" : "https://github.com/twitter/summingbird/issues/446"
      },
      {
        "number" : 438,
        "title" : "We should warn in the Builder API if we get a -Dblah arg",
        "url" : "https://github.com/twitter/summingbird/issues/438"
      },
      {
        "number" : 428,
        "title" : "Wanted: public data sources for demos",
        "url" : "https://github.com/twitter/summingbird/issues/428"
      },
      {
        "number" : 422,
        "title" : "With the addition of the Stats object into scalding, we should now make a platform independent stats class for SB",
        "url" : "https://github.com/twitter/summingbird/issues/422"
      },
      {
        "number" : 420,
        "title" : "Force node into planned graph",
        "url" : "https://github.com/twitter/summingbird/issues/420"
      },
      {
        "number" : 418,
        "title" : "Reported problems picking up state from HDFS in batch mode on hadoop2/yarn",
        "url" : "https://github.com/twitter/summingbird/issues/418"
      },
      {
        "number" : 414,
        "title" : "Handle Keys that have a time Interval",
        "url" : "https://github.com/twitter/summingbird/issues/414"
      },
      {
        "number" : 413,
        "title" : "Adding non-associative operators proposal",
        "url" : "https://github.com/twitter/summingbird/issues/413"
      },
      {
        "number" : 409,
        "title" : "Sinks should include the Timestamp",
        "url" : "https://github.com/twitter/summingbird/issues/409"
      },
      {
        "number" : 402,
        "title" : "Add Samza platform",
        "url" : "https://github.com/twitter/summingbird/issues/402"
      },
      {
        "number" : 401,
        "title" : "Summingbird internal classes should be made package private",
        "url" : "https://github.com/twitter/summingbird/issues/401"
      },
      {
        "number" : 397,
        "title" : "If cleanup is called from within the pool code in the multitriggercache it will hang until the awaitShutdown timesout",
        "url" : "https://github.com/twitter/summingbird/issues/397"
      },
      {
        "number" : 388,
        "title" : "Use scala.js to implement an in browser client store ",
        "url" : "https://github.com/twitter/summingbird/issues/388"
      },
      {
        "number" : 387,
        "title" : "Add Spark platform",
        "url" : "https://github.com/twitter/summingbird/issues/387"
      },
      {
        "number" : 372,
        "title" : "Fail tuples at the spout if deserialization fails",
        "url" : "https://github.com/twitter/summingbird/issues/372"
      },
      {
        "number" : 364,
        "title" : "Optionally put queue offset into the Tuple",
        "url" : "https://github.com/twitter/summingbird/issues/364"
      },
      {
        "number" : 362,
        "title" : "summingbird-kinesis",
        "url" : "https://github.com/twitter/summingbird/issues/362"
      },
      {
        "number" : 355,
        "title" : "Add a test for Storm for consuming output of sumByKey",
        "url" : "https://github.com/twitter/summingbird/issues/355"
      },
      {
        "number" : 354,
        "title" : "Improve HDFSState to prevent two jobs at once",
        "url" : "https://github.com/twitter/summingbird/issues/354"
      },
      {
        "number" : 349,
        "title" : "Add Error logging online on every exception by default.",
        "url" : "https://github.com/twitter/summingbird/issues/349"
      },
      {
        "number" : 348,
        "title" : "Optimize consecutive leftJoin offline",
        "url" : "https://github.com/twitter/summingbird/issues/348"
      },
      {
        "number" : 347,
        "title" : "InitialBatchStore combinator is broken",
        "url" : "https://github.com/twitter/summingbird/issues/347"
      },
      {
        "number" : 343,
        "title" : "Get rid of usage of .asInstanceOf",
        "url" : "https://github.com/twitter/summingbird/issues/343"
      },
      {
        "number" : 325,
        "title" : "Hadoop options are not making to to the JobConf in ScaldingEnv",
        "url" : "https://github.com/twitter/summingbird/issues/325"
      },
      {
        "number" : 317,
        "title" : "sometimes summingbird.json is not written, causing a job to get stuck",
        "url" : "https://github.com/twitter/summingbird/issues/317"
      },
      {
        "number" : 312,
        "title" : "Make store value trimming configurable",
        "url" : "https://github.com/twitter/summingbird/issues/312"
      },
      {
        "number" : 308,
        "title" : "Triage user feedback",
        "url" : "https://github.com/twitter/summingbird/issues/308"
      },
      {
        "number" : 306,
        "title" : "First Story Detection on Summingbird",
        "url" : "https://github.com/twitter/summingbird/issues/306"
      },
      {
        "number" : 304,
        "title" : "Audit and remove all uses or plus in favor of sumOption",
        "url" : "https://github.com/twitter/summingbird/issues/304"
      },
      {
        "number" : 279,
        "title" : "Add how-to in wiki to generate Dot graphs",
        "url" : "https://github.com/twitter/summingbird/issues/279"
      },
      {
        "number" : 266,
        "title" : "Add flatMap composing to core",
        "url" : "https://github.com/twitter/summingbird/issues/266"
      },
      {
        "number" : 265,
        "title" : "Add Merge push down to core",
        "url" : "https://github.com/twitter/summingbird/issues/265"
      },
      {
        "number" : 259,
        "title" : "caching for the ClientStore so we don't have to query too deep",
        "url" : "https://github.com/twitter/summingbird/issues/259"
      },
      {
        "number" : 258,
        "title" : "CacheSize options with time",
        "url" : "https://github.com/twitter/summingbird/issues/258"
      },
      {
        "number" : 257,
        "title" : "Logging issue when you include bijection thrift in the example project",
        "url" : "https://github.com/twitter/summingbird/issues/257"
      },
      {
        "number" : 252,
        "title" : "Add JoinWindow",
        "url" : "https://github.com/twitter/summingbird/issues/252"
      },
      {
        "number" : 248,
        "title" : "Fix flakey tests",
        "url" : "https://github.com/twitter/summingbird/issues/248"
      },
      {
        "number" : 240,
        "title" : "Improve the Memory planner",
        "url" : "https://github.com/twitter/summingbird/issues/240"
      },
      {
        "number" : 237,
        "title" : "de-duping self merges in the online planner",
        "url" : "https://github.com/twitter/summingbird/issues/237"
      },
      {
        "number" : 235,
        "title" : "Create logo for Summingbird",
        "url" : "https://github.com/twitter/summingbird/issues/235"
      },
      {
        "number" : 233,
        "title" : "Add debug info storm config",
        "url" : "https://github.com/twitter/summingbird/issues/233"
      },
      {
        "number" : 228,
        "title" : "Fix specs that are not using matchers",
        "url" : "https://github.com/twitter/summingbird/issues/228"
      },
      {
        "number" : 222,
        "title" : "Sinks should always be Sources",
        "url" : "https://github.com/twitter/summingbird/issues/222"
      },
      {
        "number" : 221,
        "title" : "Make Scalding Stores always services.",
        "url" : "https://github.com/twitter/summingbird/issues/221"
      },
      {
        "number" : 216,
        "title" : "Use user set names in Scalding",
        "url" : "https://github.com/twitter/summingbird/issues/216"
      },
      {
        "number" : 215,
        "title" : "Use the user set names in Storm",
        "url" : "https://github.com/twitter/summingbird/issues/215"
      },
      {
        "number" : 214,
        "title" : "Add a Zookeeper based WaitingState",
        "url" : "https://github.com/twitter/summingbird/issues/214"
      },
      {
        "number" : 212,
        "title" : "Add a BatchedScaldingStore that uses TSV and Injection[T, String]",
        "url" : "https://github.com/twitter/summingbird/issues/212"
      },
      {
        "number" : 208,
        "title" : "KeyedProducer to Service",
        "url" : "https://github.com/twitter/summingbird/issues/208"
      },
      {
        "number" : 190,
        "title" : "Add regression tests for BatchID off-by-one bugs discovered.",
        "url" : "https://github.com/twitter/summingbird/issues/190"
      },
      {
        "number" : 189,
        "title" : "Add a storm-trident backend",
        "url" : "https://github.com/twitter/summingbird/issues/189"
      },
      {
        "number" : 188,
        "title" : "Add algebird.ExclusiveUpper[T] and algebird.InclusiveUpper[T] types to deal with off-by-one",
        "url" : "https://github.com/twitter/summingbird/issues/188"
      },
      {
        "number" : 183,
        "title" : "Investigate CRDTs",
        "url" : "https://github.com/twitter/summingbird/issues/183"
      },
      {
        "number" : 155,
        "title" : "Clean buffer join API",
        "url" : "https://github.com/twitter/summingbird/issues/155"
      },
      {
        "number" : 154,
        "title" : "Transactional Storm Planner",
        "url" : "https://github.com/twitter/summingbird/issues/154"
      },
      {
        "number" : 142,
        "title" : "Add ability to create test Sources from scalacheck.Gen",
        "url" : "https://github.com/twitter/summingbird/issues/142"
      },
      {
        "number" : 140,
        "title" : "Tiered Aggregation for Scalding",
        "url" : "https://github.com/twitter/summingbird/issues/140"
      },
      {
        "number" : 136,
        "title" : "Treat Configuration as a mutable object, not immutable",
        "url" : "https://github.com/twitter/summingbird/issues/136"
      },
      {
        "number" : 134,
        "title" : "Implement WritableSink with template tap.",
        "url" : "https://github.com/twitter/summingbird/issues/134"
      },
      {
        "number" : 112,
        "title" : "ClientStore should take a \"most recent batch\" fn",
        "url" : "https://github.com/twitter/summingbird/issues/112"
      },
      {
        "number" : 108,
        "title" : "Implement code for Scalding sources to report maximum available DateRange",
        "url" : "https://github.com/twitter/summingbird/issues/108"
      },
      {
        "number" : 95,
        "title" : "remove versionToBatchIDCompat",
        "url" : "https://github.com/twitter/summingbird/issues/95"
      },
      {
        "number" : 94,
        "title" : "Coordinate Metadata and Data retrieval in VersionedBatchStore",
        "url" : "https://github.com/twitter/summingbird/issues/94"
      },
      {
        "number" : 93,
        "title" : "Move HDFSMetadata to scalding-commons",
        "url" : "https://github.com/twitter/summingbird/issues/93"
      },
      {
        "number" : 92,
        "title" : "Use TemplateTap to write distinct batches",
        "url" : "https://github.com/twitter/summingbird/issues/92"
      },
      {
        "number" : 91,
        "title" : "Don't Load unnecessary data in BatchedLookup",
        "url" : "https://github.com/twitter/summingbird/issues/91"
      },
      {
        "number" : 84,
        "title" : "NodeID should be a path through the DAG",
        "url" : "https://github.com/twitter/summingbird/issues/84"
      },
      {
        "number" : 83,
        "title" : "Remove MaxWaitingFutures Deadlock",
        "url" : "https://github.com/twitter/summingbird/issues/83"
      },
      {
        "number" : 77,
        "title" : "Add TsvStore back in",
        "url" : "https://github.com/twitter/summingbird/issues/77"
      },
      {
        "number" : 73,
        "title" : "Move PresentingStore to Storehaus",
        "url" : "https://github.com/twitter/summingbird/issues/73"
      },
      {
        "number" : 72,
        "title" : "Generalize the onlineKeyFilter to transform, not just filter.",
        "url" : "https://github.com/twitter/summingbird/issues/72"
      },
      {
        "number" : 71,
        "title" : "Check Sequential BatchIDs in ClientStore",
        "url" : "https://github.com/twitter/summingbird/issues/71"
      },
      {
        "number" : 46,
        "title" : "Add Storm Viz Stats by Default",
        "url" : "https://github.com/twitter/summingbird/issues/46"
      }
    ],
    "scalaPercentage" : null,
    "license" : null
  },
  "settings" : {
    "defaultStableVersion" : true,
    "defaultArtifact" : "summingbird-core",
    "strictVersions" : false,
    "customScalaDoc" : "",
    "documentationLinks" : [
    ],
    "deprecated" : false,
    "contributorsWanted" : false,
    "artifactDeprecations" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "distributed-computing",
    "beginnerIssuesLabel" : null
  }
}