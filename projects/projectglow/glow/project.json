{
  "organization" : "projectglow",
  "repository" : "glow",
  "creationDate" : 1571300937000,
  "githubStatus" : {
    "Ok" : {
      "updateDate" : 1723555450391
    }
  },
  "githubInfo" : {
    "homepage" : "https://projectglow.io",
    "description" : "An open-source toolkit for large-scale genomic analysis",
    "logo" : "https://avatars.githubusercontent.com/u/56176481?v=4",
    "stars" : 262,
    "forks" : 109,
    "watchers" : 19,
    "issues" : 47,
    "creationDate" : 1570224407000,
    "readme" : "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><p align=\"center\" dir=\"auto\">\n  <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"static/glow_logo_horiz_color.png\"><img src=\"static/glow_logo_horiz_color.png\" width=\"300px\" style=\"max-width: 100%;\"></a>\n</p>\n<p align=\"center\" dir=\"auto\">\n\tAn open-source toolkit for large-scale genomic analyes\n  <br>\n  <a href=\"https://glow.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><strong>Explore the docs Â»</strong></a>\n  <br>\n  <br>\n  <a href=\"https://github.com/projectglow/glow/issues\">Issues</a>\n</p>\n<p dir=\"auto\">Glow is an open-source toolkit to enable bioinformatics at biobank-scale and beyond.</p>\n<p dir=\"auto\"><a href=\"https://github.com/projectglow/glow/actions/workflows/tests.yml\"><img src=\"https://github.com/projectglow/glow/actions/workflows/tests.yml/badge.svg\" alt=\"Tests\" style=\"max-width: 100%;\"></a>\n<a href=\"https://glow.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/9ff45f3ee51bee17389b8c09d94cd9cd836843eed6a6419cfc263cd09e7c70a4/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f676c6f772f62616467652f3f76657273696f6e3d6c6174657374\" alt=\"Documentation Status\" data-canonical-src=\"https://readthedocs.org/projects/glow/badge/?version=latest\" style=\"max-width: 100%;\"></a>\n<a href=\"https://pypi.org/project/glow.py/\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/034e65b2e2f62851a937f19c88ebf4014eba5004c5e950b99fefaaa393f5942a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f676c6f772e70792e737667\" alt=\"PyPI\" data-canonical-src=\"https://img.shields.io/pypi/v/glow.py.svg\" style=\"max-width: 100%;\"></a>\n<a href=\"https://mvnrepository.com/artifact/io.projectglow\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/50c1b23f7220b3252a479cc3d2b8b3be1403f3e37fd5d5958345c9257d51bdd7/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f696f2e70726f6a656374676c6f772f676c6f772d737061726b335f322e31322e737667\" alt=\"Maven Central\" data-canonical-src=\"https://img.shields.io/maven-central/v/io.projectglow/glow-spark3_2.12.svg\" style=\"max-width: 100%;\"></a>\n<a href=\"https://codecov.io/gh/projectglow/glow\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/f06b9c67df28608324a0e7052a3a81e7dab4dba92f140d0a2e79402a95cc828b/68747470733a2f2f636f6465636f762e696f2f67682f70726f6a656374676c6f772f676c6f772f6272616e63682f6d61696e2f67726170682f62616467652e737667\" alt=\"Coverage Status\" data-canonical-src=\"https://codecov.io/gh/projectglow/glow/branch/main/graph/badge.svg\" style=\"max-width: 100%;\"></a>\n<a href=\"https://anaconda.org/conda-forge/glow\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/1db1ea6936f126cca68f13d174dc9bad59be3ede8ba077f0550cd15e7fd8ac38/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f766e2f636f6e64612d666f7267652f676c6f772e737667\" alt=\"Conda Version\" data-canonical-src=\"https://img.shields.io/conda/vn/conda-forge/glow.svg\" style=\"max-width: 100%;\"></a>\n<a href=\"https://zenodo.org/badge/latestdoi/212904926\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/e3c78b19b33c4bb94d731b8fa01007d9a112dc93ea2638df85b51746319ff01f/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3231323930343932362e737667\" alt=\"DOI\" data-canonical-src=\"https://zenodo.org/badge/212904926.svg\" style=\"max-width: 100%;\"></a></p>\n<div class=\"markdown-heading\" dir=\"auto\"><h1 class=\"heading-element\" dir=\"auto\">Easy to get started</h1><a id=\"user-content-easy-to-get-started\" class=\"anchor\" aria-label=\"Permalink: Easy to get started\" href=\"#easy-to-get-started\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">The toolkit includes building blocks to perform common analyses right away:</p>\n<ul dir=\"auto\">\n<li>Load VCF, BGEN, and Plink files into distributed DataFrames</li>\n<li>Perform quality control and data manipulation with built-in functions</li>\n<li>Variant normalization and liftOver</li>\n<li>Perform genome-wide association studies</li>\n<li>Integrate with Spark ML libraries for population stratification</li>\n<li>Parallelize command line tools to scale existing workflows</li>\n</ul>\n<div class=\"markdown-heading\" dir=\"auto\"><h1 class=\"heading-element\" dir=\"auto\">Built to scale</h1><a id=\"user-content-built-to-scale\" class=\"anchor\" aria-label=\"Permalink: Built to scale\" href=\"#built-to-scale\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">Glow makes genomic data work with Spark, the leading engine for working with large structured\ndatasets. It fits natively into the ecosystem of tools that have enabled thousands of organizations\nto scale their workflows. Glow bridges the gap between bioinformatics and the\nSpark ecosystem.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h1 class=\"heading-element\" dir=\"auto\">Flexible</h1><a id=\"user-content-flexible\" class=\"anchor\" aria-label=\"Permalink: Flexible\" href=\"#flexible\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">Glow works with datasets in common file formats like VCF, BGEN, and Plink as well as\nhigh-performance big data\nstandards. You can write queries using the native Spark SQL APIs in Python, SQL, R, Java, and Scala.\nThe same APIs allow you to bring your genomic data together with other datasets such as electronic\nhealth records, real world evidence, and medical images. Glow makes it easy to parallelize existing\ntools and libraries implemented as command line tools or Pandas functions.</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h1 class=\"heading-element\" dir=\"auto\">Building and Testing</h1><a id=\"user-content-building-and-testing\" class=\"anchor\" aria-label=\"Permalink: Building and Testing\" href=\"#building-and-testing\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">This project is built using <a href=\"https://www.scala-sbt.org/1.0/docs/Setup.html\" rel=\"nofollow\">sbt</a> and Java 8.</p>\n<p dir=\"auto\">To build and run Glow, you must <a href=\"https://docs.conda.io/en/latest/miniconda.html\" rel=\"nofollow\">install conda</a> and\nactivate the environment in <code>python/environment.yml</code>.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"conda env create -f python/environment.yml\nconda activate glow\"><pre class=\"notranslate\"><code>conda env create -f python/environment.yml\nconda activate glow\n</code></pre></div>\n<p dir=\"auto\">When the environment file changes, you must update the environment:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"conda env update -f python/environment.yml\"><pre class=\"notranslate\"><code>conda env update -f python/environment.yml\n</code></pre></div>\n<p dir=\"auto\">Start an sbt shell using the <code>sbt</code> command.</p>\n<blockquote>\n<p dir=\"auto\"><strong>FYI</strong>: The following SBT projects are built on Spark 3.5.1/Scala 2.12.15 by default. To change the Spark version and\nScala version, set the environment variables <code>SPARK_VERSION</code> and <code>SCALA_VERSION</code>.</p>\n</blockquote>\n<p dir=\"auto\">To compile the main code:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"compile\"><pre class=\"notranslate\"><code>compile\n</code></pre></div>\n<p dir=\"auto\">To run all Scala tests:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"core/test\"><pre class=\"notranslate\"><code>core/test\n</code></pre></div>\n<p dir=\"auto\">To test a specific suite:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"core/testOnly *VCFDataSourceSuite\"><pre class=\"notranslate\"><code>core/testOnly *VCFDataSourceSuite\n</code></pre></div>\n<p dir=\"auto\">To run all Python tests:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"python/test\"><pre class=\"notranslate\"><code>python/test\n</code></pre></div>\n<p dir=\"auto\">These tests will run with the same Spark classpath as the Scala tests.</p>\n<p dir=\"auto\">To test a specific Python test file:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"python/pytest python/test_render_template.py\"><pre class=\"notranslate\"><code>python/pytest python/test_render_template.py\n</code></pre></div>\n<p dir=\"auto\">When using the <code>pytest</code> key, all arguments are passed directly to the\n<a href=\"https://docs.pytest.org/en/latest/usage.html\" rel=\"nofollow\">pytest runner</a>.</p>\n<p dir=\"auto\">To run documentation tests:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"docs/test\"><pre class=\"notranslate\"><code>docs/test\n</code></pre></div>\n<p dir=\"auto\">To run the Scala, Python and documentation tests:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"test\"><pre class=\"notranslate\"><code>test\n</code></pre></div>\n<p dir=\"auto\">To run Scala tests against the staged Maven artifact with the current stable version:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"stagedRelease/test\"><pre class=\"notranslate\"><code>stagedRelease/test\n</code></pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">Testing code on a Databricks cluster</h2><a id=\"user-content-testing-code-on-a-databricks-cluster\" class=\"anchor\" aria-label=\"Permalink: Testing code on a Databricks cluster\" href=\"#testing-code-on-a-databricks-cluster\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">You can use the <a href=\"https://github.com/projectglow/glow/blob/main/bin/build\">build</a> script to create artifacts that you can install on a Databricks cluster.</p>\n<p dir=\"auto\">To build Python and Scala artifacts:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"bin/build --scala --python\"><pre class=\"notranslate\"><code>bin/build --scala --python\n</code></pre></div>\n<p dir=\"auto\">To build only Python (no sbt installation required):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"bin/build --python\"><pre class=\"notranslate\"><code>bin/build --python\n</code></pre></div>\n<p dir=\"auto\">To install the artifacts on a Databricks cluster after building:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"bin/build --python --scala --install MY_CLUSTER_ID\"><pre class=\"notranslate\"><code>bin/build --python --scala --install MY_CLUSTER_ID\n</code></pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 class=\"heading-element\" dir=\"auto\">IntelliJ Tips</h2><a id=\"user-content-intellij-tips\" class=\"anchor\" aria-label=\"Permalink: IntelliJ Tips\" href=\"#intellij-tips\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\">If you use IntelliJ, you'll want to:</p>\n<ul dir=\"auto\">\n<li>Download library and SBT sources; use SBT shell for imports and build from <a href=\"https://www.jetbrains.com/help/idea/sbt.html\" rel=\"nofollow\">IntelliJ</a></li>\n<li>Set up <a href=\"https://scalameta.org/scalafmt/docs/installation.html\" rel=\"nofollow\">scalafmt on save</a></li>\n</ul>\n<p dir=\"auto\">To run Python unit tests from inside IntelliJ, you must:</p>\n<ul dir=\"auto\">\n<li>Open the \"Terminal\" tab in IntelliJ</li>\n<li>Activate the glow conda environment (<code>conda activate glow</code>)</li>\n<li>Start an sbt shell from inside the terminal (<code>sbt</code>)</li>\n</ul>\n<p dir=\"auto\">The \"sbt shell\" tab in IntelliJ will NOT work since it does not use the glow conda environment.</p>\n<p dir=\"auto\">To test or testOnly in remote debug mode with IntelliJ IDEA set the remote debug configuration in IntelliJ to 'Attach to remote JVM' mode and a specific port number (here the default port number 5005 is used) and then modify the <code>testJavaOptions</code> in <code>build.sbt</code> to include:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&quot;-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005&quot;\"><pre class=\"notranslate\"><code>\"-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005\"\n</code></pre></div>\n</article></div>",
    "contributors" : [
      {
        "login" : "henrydavidge",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1473365?v=4",
        "url" : "https://github.com/henrydavidge",
        "contributions" : 170
      },
      {
        "login" : "karenfeng",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/4754931?v=4",
        "url" : "https://github.com/karenfeng",
        "contributions" : 149
      },
      {
        "login" : "williambrandler",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/51180067?v=4",
        "url" : "https://github.com/williambrandler",
        "contributions" : 60
      },
      {
        "login" : "kianfar77",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/25619085?v=4",
        "url" : "https://github.com/kianfar77",
        "contributions" : 46
      },
      {
        "login" : "scala-steward-projectglow[bot]",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/56176481?v=4",
        "url" : "https://github.com/apps/scala-steward-projectglow",
        "contributions" : 28
      },
      {
        "login" : "a0x8o",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/22206500?v=4",
        "url" : "https://github.com/a0x8o",
        "contributions" : 8
      },
      {
        "login" : "github-actions[bot]",
        "avatarUrl" : "https://avatars.githubusercontent.com/in/15368?v=4",
        "url" : "https://github.com/apps/github-actions",
        "contributions" : 2
      },
      {
        "login" : "mah-databricks",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/90000715?v=4",
        "url" : "https://github.com/mah-databricks",
        "contributions" : 2
      },
      {
        "login" : "bboutkov",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/5230985?v=4",
        "url" : "https://github.com/bboutkov",
        "contributions" : 2
      },
      {
        "login" : "bcajes",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/498608?v=4",
        "url" : "https://github.com/bcajes",
        "contributions" : 2
      },
      {
        "login" : "jkbradley",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/5084283?v=4",
        "url" : "https://github.com/jkbradley",
        "contributions" : 1
      },
      {
        "login" : "LelandBarnard",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/24434775?v=4",
        "url" : "https://github.com/LelandBarnard",
        "contributions" : 1
      },
      {
        "login" : "heuermh",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/35293?v=4",
        "url" : "https://github.com/heuermh",
        "contributions" : 1
      },
      {
        "login" : "srowen",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/822522?v=4",
        "url" : "https://github.com/srowen",
        "contributions" : 1
      },
      {
        "login" : "a-li",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/7497012?v=4",
        "url" : "https://github.com/a-li",
        "contributions" : 1
      },
      {
        "login" : "dependabot[bot]",
        "avatarUrl" : "https://avatars.githubusercontent.com/in/29110?v=4",
        "url" : "https://github.com/apps/dependabot",
        "contributions" : 1
      },
      {
        "login" : "dna0ff",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/20377386?v=4",
        "url" : "https://github.com/dna0ff",
        "contributions" : 1
      },
      {
        "login" : "zyd14",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1015576?v=4",
        "url" : "https://github.com/zyd14",
        "contributions" : 1
      },
      {
        "login" : "hvanhovell",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/9616802?v=4",
        "url" : "https://github.com/hvanhovell",
        "contributions" : 1
      },
      {
        "login" : "fnothaft",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3752466?v=4",
        "url" : "https://github.com/fnothaft",
        "contributions" : 1
      },
      {
        "login" : "dmoore247",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/1122251?v=4",
        "url" : "https://github.com/dmoore247",
        "contributions" : 1
      },
      {
        "login" : "dtzeng",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/3514930?v=4",
        "url" : "https://github.com/dtzeng",
        "contributions" : 1
      },
      {
        "login" : "dvcastillo",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/24261530?v=4",
        "url" : "https://github.com/dvcastillo",
        "contributions" : 1
      },
      {
        "login" : "cameronraysmith",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/420942?v=4",
        "url" : "https://github.com/cameronraysmith",
        "contributions" : 1
      },
      {
        "login" : "kermany",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/6556219?v=4",
        "url" : "https://github.com/kermany",
        "contributions" : 1
      },
      {
        "login" : "ahirreddy",
        "avatarUrl" : "https://avatars.githubusercontent.com/u/153361?v=4",
        "url" : "https://github.com/ahirreddy",
        "contributions" : 1
      }
    ],
    "commits" : 485,
    "topics" : [
      "genomics",
      "gwas",
      "spark",
      "delta",
      "regression",
      "machine-learning",
      "population-genetics"
    ],
    "contributingGuide" : "https://github.com/projectglow/glow/blob/main/CONTRIBUTING.md",
    "codeOfConduct" : "https://github.com/projectglow/glow/blob/main/CODE-OF-CONDUCT.md",
    "openIssues" : [
      {
        "number" : 685,
        "title" : "Tried spark.sql(\"RESET\") not worked",
        "url" : "https://github.com/projectglow/glow/issues/685"
      },
      {
        "number" : 681,
        "title" : "Numpy == 2.0 fails with glow python package v2.0",
        "url" : "https://github.com/projectglow/glow/issues/681"
      },
      {
        "number" : 540,
        "title" : "Feature Request: add regenie's gene-based testing",
        "url" : "https://github.com/projectglow/glow/issues/540"
      },
      {
        "number" : 536,
        "title" : "glow.normalize_variant fails with NullPointerException in NormalizeVariantExpr.scala:55",
        "url" : "https://github.com/projectglow/glow/issues/536"
      },
      {
        "number" : 530,
        "title" : "Interaction Tests with GLOW",
        "url" : "https://github.com/projectglow/glow/issues/530"
      },
      {
        "number" : 459,
        "title" : "Set explicit guidelines when running large jobs",
        "url" : "https://github.com/projectglow/glow/issues/459"
      },
      {
        "number" : 447,
        "title" : "ValueError: Some of types cannot be determined after inferring",
        "url" : "https://github.com/projectglow/glow/issues/447"
      },
      {
        "number" : 401,
        "title" : "Phenotypes and Covariates not automatically filtered to match genotype table",
        "url" : "https://github.com/projectglow/glow/issues/401"
      },
      {
        "number" : 395,
        "title" : "Approx firth does not handle failed fit gracefully",
        "url" : "https://github.com/projectglow/glow/issues/395"
      },
      {
        "number" : 393,
        "title" : "Better handling of missing phenotypes in step 1 and step 2 of GloWGR",
        "url" : "https://github.com/projectglow/glow/issues/393"
      },
      {
        "number" : 378,
        "title" : "Better handling of spark configs",
        "url" : "https://github.com/projectglow/glow/issues/378"
      },
      {
        "number" : 375,
        "title" : "Improve pipe transformer observability",
        "url" : "https://github.com/projectglow/glow/issues/375"
      },
      {
        "number" : 371,
        "title" : "Cannot flatten info field names containing points",
        "url" : "https://github.com/projectglow/glow/issues/371"
      },
      {
        "number" : 369,
        "title" : "mean_substitute minimal example in API fails with Invalid call to dataType on unresolved object, tree: lambda '3[sum]",
        "url" : "https://github.com/projectglow/glow/issues/369"
      },
      {
        "number" : 361,
        "title" : "reading VCF as a streaming datasource in python",
        "url" : "https://github.com/projectglow/glow/issues/361"
      },
      {
        "number" : 356,
        "title" : "Add tips to troubleshooting page",
        "url" : "https://github.com/projectglow/glow/issues/356"
      },
      {
        "number" : 351,
        "title" : "Memory errors writing regression results",
        "url" : "https://github.com/projectglow/glow/issues/351"
      },
      {
        "number" : 350,
        "title" : "Saddle point approximation method produces low P values when minor allele count is low",
        "url" : "https://github.com/projectglow/glow/issues/350"
      },
      {
        "number" : 348,
        "title" : "Python type casting for sample_id in pandas dataframe",
        "url" : "https://github.com/projectglow/glow/issues/348"
      },
      {
        "number" : 332,
        "title" : "Unexpected behavior when reading multiple gVCFs with tabix indices and same base name",
        "url" : "https://github.com/projectglow/glow/issues/332"
      },
      {
        "number" : 331,
        "title" : "Add parameters to control max iterations and tolerance in logistic regression fit",
        "url" : "https://github.com/projectglow/glow/issues/331"
      },
      {
        "number" : 330,
        "title" : "Option to consider last allele as reference in BGEN reader",
        "url" : "https://github.com/projectglow/glow/issues/330"
      },
      {
        "number" : 321,
        "title" : "Slow Databricks GLOW implementation",
        "url" : "https://github.com/projectglow/glow/issues/321"
      },
      {
        "number" : 315,
        "title" : "split_multiallelics replaces some genotypes fields by null and drops filters column",
        "url" : "https://github.com/projectglow/glow/issues/315"
      },
      {
        "number" : 304,
        "title" : "Running the demo notebook locally",
        "url" : "https://github.com/projectglow/glow/issues/304"
      },
      {
        "number" : 295,
        "title" : "Support outputting .sample file with BGEN writer",
        "url" : "https://github.com/projectglow/glow/issues/295"
      },
      {
        "number" : 289,
        "title" : "Move alpha into grouping expression for ridge regression fit",
        "url" : "https://github.com/projectglow/glow/issues/289"
      },
      {
        "number" : 246,
        "title" : "split_multiallelic should convert arrays to scalars",
        "url" : "https://github.com/projectglow/glow/issues/246"
      },
      {
        "number" : 199,
        "title" : "[Feature request] Make pipe transformer lazy",
        "url" : "https://github.com/projectglow/glow/issues/199"
      },
      {
        "number" : 120,
        "title" : "Support exploded genotype structs in utility functions",
        "url" : "https://github.com/projectglow/glow/issues/120"
      },
      {
        "number" : 107,
        "title" : "Generalizing variant normalization beyond VCF/BGEN representations",
        "url" : "https://github.com/projectglow/glow/issues/107"
      },
      {
        "number" : 41,
        "title" : "Support BGEN formatters for pipe",
        "url" : "https://github.com/projectglow/glow/issues/41"
      }
    ],
    "scalaPercentage" : 70,
    "license" : "Apache-2.0",
    "commitActivity" : [
    ]
  },
  "settings" : {
    "preferStableVersion" : true,
    "defaultArtifact" : null,
    "customScalaDoc" : null,
    "documentationLinks" : [
    ],
    "contributorsWanted" : false,
    "deprecatedArtifacts" : [
    ],
    "cliArtifacts" : [
    ],
    "category" : "bioinformatics",
    "chatroom" : null
  }
}