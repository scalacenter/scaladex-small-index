{
  "data":{
    "repository":{
      "issues":{
        "nodes":[
          {
            "number":123,
            "title":"Add missing implicit annotations.",
            "bodyText":"There are very many implicit arguments in shapeless without @implicitnotfound annotations. Adding them would make compiler errors more readable.",
            "url":"https://github.com/milessabin/shapeless/issues/123"
          },
          {
            "number":135,
            "title":"Add Scaladoc for Zipper.",
            "bodyText":"",
            "url":"https://github.com/milessabin/shapeless/issues/135"
          },
          {
            "number":219,
            "title":"Add documentation around TypeClass derivation",
            "bodyText":"The documentation around typeclass derivation points to a blog post where the derivation process is explained in a very clear manner. The problem is that this blog post mentions that there will be a part 2 that deals with the notion of co-product and how it relates to typeclass derivation. As far as my understanding goes, this blog post never made it out and there is no ressource to find more about the emptycoproduct and coproduct methods that need to need to be implemented in order to derive TypeClassCompanion",
            "url":"https://github.com/milessabin/shapeless/issues/219"
          },
          {
            "number":554,
            "title":"HMap Key types are erased and allow for unsafe type cast",
            "bodyText":"Here's a minimal example:\n  case class Key[T](id: Int)\n  case class Value[T](value: T)\n\n  class MyMap[K,V]\n  implicit object mapInts extends MyMap[Key[Int], Value[Int]]\n  implicit object mapStrs extends MyMap[Key[String], Value[String]]\n\n  val map = HMap[MyMap](Key[Int](0) -> Value(3))\n\n  val three: String = map.get(Key[String](0)).get.value // java.lang.ClassCastException\nGenerally, this might be worked around by using an equivalent proper type rather than a type constructor. e.g. KeyInt extends Key[Int] (if Key were not a case class)\nIt should probably be documented somewhere that higher-kinded types are to be used as keys with caution in the current design of HMap.",
            "url":"https://github.com/milessabin/shapeless/issues/554"
          }
        ]
      }
    }
  }
}