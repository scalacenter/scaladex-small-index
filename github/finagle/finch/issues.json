{
  "data":{
    "repository":{
      "issues":{
        "nodes":[
          {
            "number":348,
            "title":"RequestReader .as support for Cookies",
            "bodyText":"DecodeRequest is helpful for String, but String is not the only included RequestReader in Finch. It would be nice to not have to unpack a Cookie value before having access to the implicit String => A conversions.\nWe can add value classes in the PRequestReader object accounting for Cookie and Option[Cookie] fairly easily.\nThe DecodeRequest has an apply method with the signature of def apply[A](f: String => Try[A]): DecodeRequest[A]. We can do two different things:\n\nMake this more generic (which seems like overkill) def apply[A,B](f: A => Try[B]): DecodeRequest[B]\nAdd another apply with Cookie => Try[A] ... def apply[A](f: Cookie => Try[A]): DecodeRequest[A]\n\nI have a use case for this now, but I'm wondering how useful it would be for Finch in general.",
            "url":"https://github.com/finagle/finch/issues/348"
          },
          {
            "number":411,
            "title":"Scaladoc hygiene for base package",
            "bodyText":"As more stuff gets moved directly under io.finch, its API docs are getting a little unwieldy. It'd be nice to make prioritization traits private[finch] so they don't show up in the docs (their methods still will, though), and possibly even to organize the definitions using Scaladoc groups (see e.g. how I'm using them in circe).",
            "url":"https://github.com/finagle/finch/issues/411"
          },
          {
            "number":422,
            "title":"Make Mapper accept both Scala Futures and Twitter Futures",
            "bodyText":"We can make a conversion (powered by Bijection) happen automatically in Mapper so users won't be worring about that.",
            "url":"https://github.com/finagle/finch/issues/422"
          },
          {
            "number":821,
            "title":"ReuseWriters in finch-circe?",
            "bodyText":"As Circe now updated, we can think of enabling reuseWriters on its Printer. We should experiment.",
            "url":"https://github.com/finagle/finch/issues/821"
          }
        ]
      }
    }
  }
}